{"version":3,"file":"apprun-html.esm.js","sources":["../src/app.ts","../src/createComponent.tsx","../src/vdom-my.ts","../src/web-component.ts","../src/decorator.ts","../src/directive.ts","../src/component.ts","../src/router.ts","../src/apprun.ts","../src/vdom.ts","../node_modules/lit-html/src/lib/directive.ts","../node_modules/lit-html/src/lib/dom.ts","../node_modules/lit-html/src/lib/part.ts","../node_modules/lit-html/src/lib/template.ts","../node_modules/lit-html/src/lib/template-instance.ts","../node_modules/lit-html/src/lib/template-result.ts","../node_modules/lit-html/src/lib/parts.ts","../node_modules/lit-html/src/lib/default-template-processor.ts","../node_modules/lit-html/src/lib/template-factory.ts","../node_modules/lit-html/src/lib/render.ts","../node_modules/lit-html/src/lit-html.ts","../node_modules/lit-html/src/directives/unsafe-html.ts","../src/apprun-html.ts","../src/vdom-lit-html.ts"],"sourcesContent":["import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n    \n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    let subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n    component['__eid'] = id;\n  } else {\n    id = component['__eid'];\n  }\n  let state = component.state;\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, state);\n    if (typeof new_state !== 'undefined') state = component.state = new_state;\n  }\n  const vdom = state instanceof Promise ? '' : component._view(state, props);\n  const render = el => {\n    component.element = el;\n    component.setState(state)\n  }\n  return <section {...props} id={id} ref={e => render(e)}>{vdom}</section>;\n}\n\nlet _idx = 0;\nexport default function createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent)\n    vdom = render(node, parent, _idx++);\n  if (vdom && Array.isArray(vdom.children))\n    vdom.children = vdom.children.map(child => createComponent(child, parent, _idx));\n  return vdom;\n}\n","import createComponent from './createComponent';\nimport { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (child instanceof HTMLElement) {\n      element.insertBefore(child, el);\n    }\n    else if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'id' || name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n        element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(()=>props['ref'](element));\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?, shadow?, history?, global_event?: boolean;\n  observedAttributes?: string[]\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    return { ...options }['observedAttributes'];\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const props = {}\n      Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component.unload && this._component.unload();\n    this._component.unmount();\n    this._component = null;\n  }\n\n  attributeChangedCallback(...args) {\n    this._component && this._component.run('attributeChanged', ...args);\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = { ...component['state'] };\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T=any, E=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state, p = null) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = p ? this.view(state, p) : this.view(state);\r\n    app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this._view(state);\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if(!this.observer)  this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    this.render(el, html);\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this. _global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E=any>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T, E>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment, html, svg } from './vdom-lit-html';\nexport { html, svg }\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n\nif (typeof window === 'object') {\n  window['html'] = html;\n  window['svg'] = svg;\n}\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport { html, render, TemplateResult, svg } from 'lit-html';\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nfunction _render(element, vdom, parent?) {\n  if (typeof vdom === 'string') {\n    render(html`${unsafeHTML(vdom)}`, element);\n  } else if (vdom instanceof TemplateResult) {\n    render(vdom, element)\n  } else {\n    updateElement(element, vdom, parent);\n  }\n}\n\nexport { createElement, Fragment, html, svg, _render as render };\n\n"],"names":["App","[object Object]","this","_events","name","fn","options","push","subscribers","filter","sub","args","console","assert","length","once","forEach","delay","apply","on","_t","clearTimeout","setTimeout","app","root","self","global","render","node","parent","idx","tag","props","children","key","id","Date","now","__componentCache","component","mount","state","mounted","new_state","vdom","Promise","_view","ref","e","el","element","setState","_idx","ATTR_PROPS","collect","ch","c","Array","isArray","i","createElement","undefined","Object","getPrototypeOf","__isAppRunComponent","Error","keyCache","updateElement","nodes","createComponent","map","child","updateChildren","update","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","create","len","Math","min","childNodes","HTMLElement","insertBefore","textContent","nodeType","createText","old","appendChild","n","removeChild","lastChild","d","document","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","isSvg","SVGElement","JSON","stringify","createElementNS","cached","oldProps","newProps","keys","p","mergeProps","value","style","cssText","s","startsWith","cname","replace","match","dataset","getAttribute","setAttribute","removeAttribute","window","requestAnimationFrame","Fragment","customElement","componentClass","super","_component","observedAttributes","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","from","attributes","item","parentElement","bind","run","unload","unmount","customElements","define","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","get","events","descriptor","toString","defineMetadata","constructor","webComponent","getStateValue","setStateValue","event","handler","type","checked","Number","multiple","selected","componentCache","o","components","REFRESH","Component","view","_history_idx","_history","history","h","directive","html","getElementById","tracking_attr","tracking_id","valueOf","MutationObserver","observer","changes","oldValue","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","rendered","then","catch","err","error","_state","renderState","enable_history","callback","global_event","prev","_history_prev","next","_history_next","add_actions","_global_events","action","newState","actions","getMetadataKeys","getMetadata","all","act","split","trim","add_action","is_global_event","_app","_actions","off","ROUTER_EVENT","ROUTER_404_EVENT","route","url","rest","_","start","model","NOOP","addEventListener","onpopstate","location","hash","directives","isDirective","isCEPolyfill","polyfillWrapFlushCallback","reparentNodes","container","end","before","nextSibling","removeNodes","noChange","nothing","marker","String","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","nextNode","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","statics","parts","tagName","currentNode","data","lastIndex","insert","createMarker","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","innerHTML","getHTML","SVGTemplateResult","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","Symbol","iterator","AttributeCommitter","_createPart","AttributePart","text","v","t","dirty","_getValue","committer","NodePart","startNode","endNode","__insert","__pendingValue","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","passive","shouldAddListener","__options","getOptions","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","join","appendInto","svg","previousValues","unsafeHTML","f","previousValue"],"mappings":"MACaA,EAUXC,cACEC,KAAKC,QAAU,GAGjBF,GAAGG,EAAcC,EAAuBC,EAAwB,IAC9DJ,KAAKC,QAAQC,GAAQF,KAAKC,QAAQC,IAAS,GAC3CF,KAAKC,QAAQC,GAAMG,KAAK,CAAEF,GAAAA,EAAIC,QAAAA,IAGhCL,IAAIG,EAAcC,GAChB,MAAMG,EAAcN,KAAKC,QAAQC,IAAS,GAE1CF,KAAKC,QAAQC,GAAQI,EAAYC,OAAQC,GAAQA,EAAIL,KAAOA,GAG9DJ,KAAKG,GACH,OAAOF,KAAKC,QAAQC,GAGtBH,IAAIG,KAAiBO,GACnB,IAAIH,EAAcN,KAAKC,QAAQC,IAAS,GAqBxC,OAnBAQ,QAAQC,OAAOL,GAAeA,EAAYM,OAAS,EAAG,4BAA8BV,GAKpFF,KAAKC,QAAQC,GAAQI,EAAYC,OAAQC,IAC/BA,EAAIJ,QAAQS,MAGtBP,EAAYQ,QAASN,IACnB,MAAML,GAAEA,EAAEC,QAAEA,GAAYI,EAMxB,OALIJ,EAAQW,MACVf,KAAKe,MAAMb,EAAMC,EAAIM,EAAML,GAE3BD,EAAGa,MAAMhB,KAAMS,IAETD,EAAIJ,QAAQS,OAGfP,EAAYM,OAGrBb,KAAKG,EAAcC,EAAIC,EAAwB,IAC7CJ,KAAKiB,GAAGf,EAAMC,iCAASC,IAASS,MAAM,KAGhCd,MAAMG,EAAMC,EAAIM,EAAML,GACxBA,EAAQc,IAAIC,aAAaf,EAAQc,IACrCd,EAAQc,GAAKE,WAAW,KACtBD,aAAaf,EAAQc,IACrBf,EAAGa,MAAMhB,KAAMS,IACdL,EAAQW,QAKf,IAAIM,EACJ,MAAMC,EAAwB,iBAATC,MAAqBA,KAAKA,OAASA,MAAQA,MAC3C,iBAAXC,QAAuBA,OAAOA,SAAWA,QAAUA,OACzDF,EAAU,KAAKA,EAAsB,gBACvCD,EAAMC,EAAU,KAEhBD,EAAM,IAAIvB,EACVwB,EAAU,IAAID,EACdC,EAAsB,gBATD,YAWvB,MAAeD,EC7Ef,SAASI,EAAOC,EAAMC,EAAQC,GAC5B,MAAMC,IAAEA,EAAGC,MAAEA,EAAKC,SAAEA,GAAaL,EACjC,IAAIM,EAAM,IAAIJ,IACVK,EAAKH,GAASA,EAAU,GACvBG,EACAD,EAAMC,EADFA,EAAK,IAAIL,IAAMM,KAAKC,QAExBR,EAAOS,IAAkBT,EAAOS,EAAmB,IACxD,IAAIC,EAAYV,EAAOS,EAAiBJ,GACnCK,EAIHJ,EAAKI,EAAiB,GAHtBA,EAAYV,EAAOS,EAAiBJ,GAAO,IAAIH,iCAASC,IAAOC,SAAAA,KAAYO,MAAML,IAChE,EAAIA,EAIvB,IAAIM,EAAQF,EAAUE,MACtB,GAAIF,EAAUG,QAAS,CACrB,MAAMC,EAAYJ,EAAUG,QAAQV,EAAOC,EAAUQ,QAC5B,IAAdE,IAA2BF,EAAQF,EAAUE,MAAQE,GAElE,MAAMC,EAAOH,aAAiBI,QAAU,GAAKN,EAAUO,MAAML,EAAOT,GAKpE,OAAOT,2CAAaS,GAAOG,GAAIA,EAAIY,IAAKC,GAJzBC,CAAAA,IACbV,EAAUW,QAAUD,EACpBV,EAAUY,SAASV,IAEwBd,CAAOqB,KAAKJ,GAG3D,IAAIQ,EAAO,ECzBX,MAAMC,EAAa,SAEnB,SAASC,EAAQrB,GACf,MAAMsB,EAAK,GACLhD,EAAQiD,IACRA,MAAAA,GAAuC,KAANA,IAAkB,IAANA,GAC/CD,EAAGhD,KAAmB,mBAANiD,GAAiC,iBAANA,EAAkBA,EAAI,GAAGA,MAUxE,OAPAvB,GAAYA,EAASjB,QAAQwC,IACvBC,MAAMC,QAAQF,GAChBA,EAAExC,QAAQ2C,GAAKpD,EAAKoD,IAEpBpD,EAAKiD,KAGFD,EAGT,SAAgBK,EAAc7B,EAA6BC,KAAeC,GACxE,MAAMsB,EAAKD,EAAQrB,GACnB,GAAmB,iBAARF,EAAkB,MAAO,CAAEA,IAAAA,EAAKC,MAAAA,EAAOC,SAAUsB,GACvD,GAAIE,MAAMC,QAAQ3B,GAAM,OAAOA,EAC/B,QAAY8B,IAAR9B,GAAqBE,EAAU,OAAOsB,EAC1C,GAAIO,OAAOC,eAAehC,GAAKiC,EAAqB,MAAO,CAAEjC,IAAAA,EAAKC,MAAAA,EAAOC,SAAUsB,GACnF,GAAmB,mBAARxB,EAAoB,OAAOA,EAAIC,EAAOuB,GACjD,MAAM,IAAIU,MAAM,uBAAuBlC,KAG9C,MAAMmC,EAAW,GAEJC,EAEb,SAAuBjB,EAAkBkB,EAAavC,EAAS,IAG7D,GAAa,MAATuC,IAA2B,IAAVA,EAAiB,OAItC,GAFAA,EDZF,SAAwBC,EAAgBzC,EAAMC,EAAQC,EAAM,GAE1D,GADY,IAARA,IAAWsB,EAAO,GACF,iBAATxB,EAAmB,OAAOA,EACrC,GAAI6B,MAAMC,QAAQ9B,GAAO,OAAOA,EAAK0C,IAAIC,GAASF,EAAgBE,EAAO1C,EAAQuB,IACjF,IAAIR,EAAOhB,EAKX,OAJIA,GAA4B,mBAAbA,EAAKG,KAAsB+B,OAAOC,eAAenC,EAAKG,KAAKiC,IAC5EpB,EAAOjB,EAAOC,EAAMC,EAAQuB,MAC1BR,GAAQa,MAAMC,QAAQd,EAAKX,YAC7BW,EAAKX,SAAWW,EAAKX,SAASqC,IAAIC,GAASF,EAAgBE,EAAO1C,EAAQuB,KACrER,ECGCyB,CAAgBD,EAAOvC,IAE1BqB,EAAS,OACVO,MAAMC,QAAQU,GAChBI,EAAetB,EAASkB,GAExBI,EAAetB,EAAS,CAACkB,KAW7B,SAASK,EAAOvB,EAAkBtB,GAChChB,QAAQC,SAASqC,GARnB,SAAcD,EAAarB,GAEzB,MAAM8C,EAAOzB,EAAG0B,SACVC,EAAO,GAAGhD,EAAKG,KAAO,KAC5B,OAAO2C,EAAKG,gBAAkBD,EAAKC,cAM9BC,CAAK5B,EAAStB,IAInB4C,EAAetB,EAAStB,EAAKK,UAC7B8C,EAAY7B,EAAStB,EAAKI,QAJxBkB,EAAQ8B,WAAWC,aAAaC,EAAOtD,GAAOsB,GAOlD,SAASsB,EAAetB,EAASjB,GAC/B,MAAMkD,EAAMC,KAAKC,IAAInC,EAAQoC,WAAWxE,OAAQmB,EAASnB,QACzD,IAAK,IAAI6C,EAAI,EAAGA,EAAIwB,EAAKxB,IAAK,CAC5B,MAAMY,EAAQtC,EAAS0B,GACjBV,EAAKC,EAAQoC,WAAW3B,GAC9B,GAAIY,aAAiBgB,YACnBrC,EAAQsC,aAAajB,EAAOtB,QAEzB,GAAqB,iBAAVsB,EACVtB,EAAGwC,cAAgBlB,IACD,IAAhBtB,EAAGyC,SACLzC,EAAGwC,YAAclB,EAEjBrB,EAAQ+B,aAAaU,EAAWpB,GAAQtB,QAGvC,CACL,MAAMf,EAAMqC,EAAMvC,OAASuC,EAAMvC,MAAW,IAC5C,GAAIE,EACF,GAAIe,EAAGf,MAAQA,EACbuC,EAAOvB,EAAQoC,WAAW3B,GAAIY,OACzB,CACL,MAAMqB,EAAM1B,EAAShC,GACjB0D,GACF1C,EAAQsC,aAAaI,EAAK3C,GAC1BC,EAAQ2C,YAAY5C,GACpBwB,EAAOvB,EAAQoC,WAAW3B,GAAIY,IAE9BrB,EAAQsC,aAAaN,EAAOX,GAAQtB,QAIxCwB,EAAOvB,EAAQoC,WAAW3B,GAAIY,IAKpC,IAAIuB,EAAI5C,EAAQoC,WAAWxE,OAC3B,KAAOgF,EAAIX,GACTjC,EAAQ6C,YAAY7C,EAAQ8C,WAC5BF,IAGF,GAAI7D,EAASnB,OAASqE,EAAK,CACzB,MAAMc,EAAIC,SAASC,yBACnB,IAAK,IAAIxC,EAAIwB,EAAKxB,EAAI1B,EAASnB,OAAQ6C,IACrCsC,EAAEJ,YAAYX,EAAOjD,EAAS0B,KAEhCT,EAAQ2C,YAAYI,IAIxB,SAASN,EAAW/D,GAClB,GAA+B,IAA3BA,EAAKwE,QAAQ,UAAiB,CAChC,MAAMC,EAAMH,SAAStC,cAAc,OAEnC,OADAyC,EAAIC,mBAAmB,aAAc1E,EAAK2E,UAAU,IAC7CF,EAEP,OAAOH,SAASM,eAAe5E,GAInC,SAASsD,EAAOtD,EAAiD6E,GAAQ,GAGvE,GAFA7F,QAAQC,OAAOe,MAAAA,GAEVA,aAAgB2D,aAAiB3D,aAAgB8E,WAAa,OAAO9E,EAC1E,GAAoB,iBAATA,EAAmB,OAAO+D,EAAW/D,GAChD,IAAKA,EAAKG,KAA4B,mBAAbH,EAAKG,IAAqB,OAAO4D,EAAWgB,KAAKC,UAAUhF,IAEpF,MAAMsB,GADNuD,EAAQA,GAAsB,QAAb7E,EAAKG,KAElBmE,SAASW,gBAAgB,6BAA8BjF,EAAKG,KAC5DmE,SAAStC,cAAchC,EAAKG,KAMhC,OAJAgD,EAAY7B,EAAStB,EAAKI,OAEtBJ,EAAKK,UAAUL,EAAKK,SAASjB,QAAQuD,GAASrB,EAAQ2C,YAAYX,EAAOX,EAAOkC,KAE7EvD,EAYT,SAAS6B,EAAY7B,EAAkBlB,GACrCpB,QAAQC,SAASqC,GAEjB,MAAM4D,EAAS5D,EAAQG,IAAe,GACtCrB,EAbF,SAAoB+E,EAAcC,GAChCA,EAAgB,MAAIA,EAAgB,OAAKA,EAAoB,iBACtDA,EAAoB,UAC3B,MAAMhF,EAAQ,GAGd,OAFI+E,GAAUjD,OAAOmD,KAAKF,GAAU/F,QAAQkG,GAAKlF,EAAMkF,GAAK,MACxDF,GAAUlD,OAAOmD,KAAKD,GAAUhG,QAAQkG,GAAKlF,EAAMkF,GAAKF,EAASE,IAC9DlF,EAOCmF,CAAWL,EAAQ9E,GAAS,IACpCkB,EAAQG,GAAcrB,EACtB,IAAK,MAAM5B,KAAQ4B,EAAO,CACxB,MAAMoF,EAAQpF,EAAM5B,GAGpB,GAAa,UAATA,EAAkB,CAChB8C,EAAQmE,MAAMC,UAASpE,EAAQmE,MAAMC,QAAU,IACnD,IAAK,MAAMC,KAAKH,EACVlE,EAAQmE,MAAME,KAAOH,EAAMG,KAAIrE,EAAQmE,MAAME,GAAKH,EAAMG,SAEzD,GAAInH,EAAKoH,WAAW,SAAU,CACnC,MACMC,EADQrH,EAAKmG,UAAU,GACTmB,QAAQ,SAAWC,GAAUA,EAAM,GAAG9C,eACtD3B,EAAQ0E,QAAQH,KAAWL,IACzBA,GAAmB,KAAVA,EAAclE,EAAQ0E,QAAQH,GAASL,SACxClE,EAAQ0E,QAAQH,QAEZ,OAATrH,GAA0B,UAATA,GAAoBA,EAAKoH,WAAW,SAAWpH,EAAKgG,QAAQ,KAAO,GAC7FlD,aAAmBwD,WACfxD,EAAQ2E,aAAazH,KAAUgH,IAC7BA,EAAOlE,EAAQ4E,aAAa1H,EAAMgH,GACjClE,EAAQ6E,gBAAgB3H,IAEtB8C,EAAQ9C,KAAUgH,IACzBlE,EAAQ9C,GAAQgH,GAEP,QAAThH,GAAkBgH,IAAOlD,EAASkD,GAASlE,GAE7ClB,GAAiC,mBAAjBA,EAAW,KAC7BgG,OAAOC,sBAAsB,IAAIjG,EAAW,IAAEkB,aAIlCgF,EAASlG,KAAUC,GACjC,OAAOqB,EAAQrB,GC/LV,MAAMkG,EAAgB,CAACC,EAAgB9H,EAAgC,MAAO,cAAciF,YAKjGtF,cACEoI,QAEF9F,gBAAkB,OAAOrC,KAAKoI,WAC9B7F,YAAc,OAAOvC,KAAKoI,WAAW7F,MAErC8F,gCACE,OAAOzE,iBAAKxD,GAA8B,mBAG5CL,oBACE,GAAIC,KAAKsI,cAAgBtI,KAAKoI,WAAY,CACxC,MAAMG,EAAOnI,GAAW,GACxBJ,KAAKwI,YAAcD,EAAKE,OAASzI,KAAK0I,aAAa,CAAEC,KAAM,SAAY3I,KACvE,MAAM8B,EAAQ,GACdyB,MAAMqF,KAAK5I,KAAK6I,YAAY/H,QAAQgI,GAAQhH,EAAMgH,EAAK5I,MAAQ4I,EAAK5B,OACpE,MAAMnF,EAAW/B,KAAK+B,SAAWwB,MAAMqF,KAAK5I,KAAK+B,UAAY,GAG7D,GAFAA,EAASjB,QAAQiC,GAAMA,EAAGgG,cAAclD,YAAY9C,IACpD/C,KAAKoI,WAAa,IAAIF,iCAAoBpG,IAAOC,SAAAA,KAAYO,MAAMtC,KAAKwI,YAAaD,GACjFvI,KAAKoI,WAAW5F,QAAS,CAC3B,MAAMC,EAAYzC,KAAKoI,WAAW5F,QAAQV,EAAOC,EAAU/B,KAAKoI,WAAW7F,YAClD,IAAdE,IAA2BzC,KAAKoI,WAAW7F,MAAQE,GAEhEzC,KAAKiB,GAAKjB,KAAKoI,WAAWnH,GAAG+H,KAAKhJ,KAAKoI,YACvCpI,KAAKiJ,IAAMjJ,KAAKoI,WAAWa,IAAID,KAAKhJ,KAAKoI,aACrB,IAAdG,EAAK9G,QAAiBzB,KAAKoI,WAAWa,IAAI,MAIpDlJ,uBACEC,KAAKoI,WAAWc,QAAUlJ,KAAKoI,WAAWc,SAC1ClJ,KAAKoI,WAAWe,UAChBnJ,KAAKoI,WAAa,KAGpBrI,4BAA4BU,GAC1BT,KAAKoI,YAAcpI,KAAKoI,WAAWa,IAAI,sBAAuBxI,MAIlE,MAAe,CAACP,EAAcgI,EAAgB9H,KACjB,oBAAnBgJ,gBAAmCA,eAAeC,OAAOnJ,EAAM+H,EAAcC,EAAgB9H,KClDvG,MAAakJ,EAAU,CAErBC,KAAM,IAAIC,QAEVzJ,eAAe0J,EAAaC,EAAeC,GACpC3J,KAAKuJ,KAAKK,IAAID,IAAS3J,KAAKuJ,KAAKM,IAAIF,EAAQ,IAClD3J,KAAKuJ,KAAKO,IAAIH,GAAQF,GAAeC,GAGvC3J,gBAAgB4J,GAEd,OADAA,EAAS/F,OAAOC,eAAe8F,GACxB3J,KAAKuJ,KAAKO,IAAIH,GAAU/F,OAAOmD,KAAK/G,KAAKuJ,KAAKO,IAAIH,IAAW,IAGtE5J,YAAY0J,EAAaE,GAEvB,OADAA,EAAS/F,OAAOC,eAAe8F,GACxB3J,KAAKuJ,KAAKO,IAAIH,GAAU3J,KAAKuJ,KAAKO,IAAIH,GAAQF,GAAe,OAIxE,SAAgBlF,EAAiBwF,EAAY3J,EAAe,IAC1D,MAAO,CAACuJ,EAAa3H,EAAagI,KAChC,MAAM9J,EAAO6J,EAASA,EAAOE,WAAajI,EAG1C,OAFAsH,EAAQY,eAAe,iBAAiBhK,IACtC,CAAEA,KAAAA,EAAM8B,IAAAA,EAAK5B,QAAAA,GAAWuJ,GACnBK,GAIX,SAAgB/I,EAAM8I,EAAY3J,EAAe,IAC/C,OAAO,SAAUuJ,EAAa3H,GAC5B,MAAM9B,EAAO6J,EAASA,EAAOE,WAAajI,EAC1CsH,EAAQY,eAAe,iBAAiBhK,IACtC,CAAEA,KAAAA,EAAM8B,IAAAA,EAAK5B,QAAAA,GAAWuJ,aAId1B,EAAc/H,EAAcE,GAC1C,OAAO,SAA+D+J,GAEpE,OADAC,EAAalK,EAAMiK,EAAa/J,GACzB+J,GCzCX,MAAME,EAAgB,CAAChI,EAAWnC,KACxBA,EAAOmC,EAAiB,MAAEnC,GAAQmC,EAAiB,QAAM,GAG7DiI,EAAgB,CAACjI,EAAWnC,EAAMgH,KACtC,GAAIhH,EAAM,CACR,MAAMqC,mBAAaF,EAAiB,OACpCE,EAAMrC,GAAQgH,EACd7E,EAAUY,SAASV,QAEnBF,EAAUY,SAASiE,IAIvB,MAAe,CAAClF,EAAaF,EAAWD,EAAKQ,KAC3C,GAAIL,EAAIsF,WAAW,OAAQ,CACzB,MAAMiD,EAAQzI,EAAME,GAEpB,GADAA,EAAMA,EAAIqE,UAAU,GACC,kBAAVkE,EACTzI,EAAME,GAAOc,GAAKT,EAAU4G,IAAIjH,EAAKc,QAChC,GAAqB,iBAAVyH,EAChBzI,EAAME,GAAOc,GAAKT,EAAU4G,IAAIsB,EAAOzH,QAClC,GAAqB,mBAAVyH,EAChBzI,EAAME,GAAOc,GAAKT,EAAUY,SAASsH,EAAMlI,EAAUE,MAAOO,SACvD,GAAIS,MAAMC,QAAQ+G,GAAQ,CAC/B,MAAOC,KAAYxD,GAAKuD,EACD,iBAAZC,EACT1I,EAAME,GAAOc,GAAKT,EAAU4G,IAAIuB,KAAYxD,EAAGlE,GACnB,mBAAZ0H,IAChB1I,EAAME,GAAOc,GAAKT,EAAUY,SAASuH,EAAQnI,EAAUE,SAAUyE,EAAGlE,WAInE,GAAY,UAARd,EAAiB,CAC1B,MAAMyI,EAAO3I,EAAY,MAAK,OACxB5B,EAA6B,iBAAf4B,EAAME,GAAoBF,EAAME,GAAOF,EAAY,KACvE,GAAY,UAARD,EACF,OAAQ4I,GACN,IAAK,WACH3I,EAAe,QAAIuI,EAAchI,EAAWnC,GAC5C4B,EAAe,QAAIgB,GAAKwH,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAM4C,EAAE6G,OAAOe,SACjF,MACF,IAAK,QACH5I,EAAe,QAAIuI,EAAchI,EAAWnC,KAAU4B,EAAa,MACnEA,EAAe,QAAIgB,GAAKwH,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAM4C,EAAE6G,OAAOzC,OACjF,MACF,IAAK,SACL,IAAK,QACHpF,EAAa,MAAIuI,EAAchI,EAAWnC,GAC1C4B,EAAe,QAAIgB,GAAKwH,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAMyK,OAAO7H,EAAE6G,OAAOzC,QACxF,MACF,QACEpF,EAAa,MAAIuI,EAAchI,EAAWnC,GAC1C4B,EAAe,QAAIgB,GAAKwH,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAM4C,EAAE6G,OAAOzC,WAEpE,WAARrF,GACTC,EAAa,MAAIuI,EAAchI,EAAWnC,GAC1C4B,EAAgB,SAAIgB,IACbA,EAAE6G,OAAOiB,UACZN,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAM4C,EAAE6G,OAAOzC,SAG5C,WAARrF,IACTC,EAAgB,SAAIuI,EAAchI,EAAWnC,GAC7C4B,EAAe,QAAIgB,GAAKwH,EAAcjI,EAAWnC,GAAQ4C,EAAE6G,OAAOzJ,KAAM4C,EAAE6G,OAAOkB,gBAGnFxJ,EAAI4H,IAAI,IAAK,CAAEjH,IAAAA,EAAKH,IAAAA,EAAKC,MAAAA,EAAOO,UAAAA,KC/DpC,MAAMyI,EAAiB,GACvBzJ,EAAIJ,GAAG,iBAAkB8J,GAAKA,EAAEC,WAAaF,GAE7C,MAAMG,EAAU1I,GAASA,EAEzB,MAAa2I,EA2HXnL,YACYwC,EACA4I,EACA5G,EACAnE,GAHAJ,WAAAuC,EACAvC,UAAAmL,EACAnL,YAAAuE,EACAvE,aAAAI,EA7HJJ,UAAO,IAAIF,EACXE,cAAW,GACXA,oBAAiB,GAEjBA,cAAW,GACXA,mBAAgB,EAgGhBA,mBAAgB,KACtBA,KAAKoL,eACDpL,KAAKoL,cAAgB,EACvBpL,KAAKiD,SAASjD,KAAKqL,SAASrL,KAAKoL,cAAe,CAAE3J,QAAQ,EAAM6J,SAAS,IAGzEtL,KAAKoL,aAAe,GAIhBpL,mBAAgB,KACtBA,KAAKoL,eACDpL,KAAKoL,aAAepL,KAAKqL,SAASzK,OACpCZ,KAAKiD,SAASjD,KAAKqL,SAASrL,KAAKoL,cAAe,CAAE3J,QAAQ,EAAM6J,SAAS,IAGzEtL,KAAKoL,aAAepL,KAAKqL,SAASzK,OAAS,GAW/CZ,WAAQ,CAACgD,EAAU,KACjB5C,EAAkE,CAAEqB,QAAQ,KACrEzB,KAAKsC,MAAMU,iCAAc5C,IAASqB,QAAQ,KAnHnD1B,OAAOiD,EAAsBtB,GAC3BL,EAAII,OAAOuB,EAAStB,EAAM1B,MAGpBD,MAAMwC,EAAOyE,EAAI,MACvB,IAAKhH,KAAKmL,KAAM,OAChB,MAAMI,EAAIlK,EAAIqC,cACdrC,EAAIqC,cAAgB,CAAC7B,EAAKC,KAAUC,KAClCD,GAAS8B,OAAOmD,KAAKjF,GAAOhB,QAAQkB,IAC9BA,EAAIsF,WAAW,OACjBkE,EAAUxJ,EAAKF,EAAOD,EAAK7B,aACpB8B,EAAME,MAGVuJ,EAAE1J,EAAKC,KAAUC,IAE1B,MAAM0J,EAAOzE,EAAIhH,KAAKmL,KAAK5I,EAAOyE,GAAKhH,KAAKmL,KAAK5I,GAEjD,OADAlB,EAAIqC,cAAgB6H,EACbE,EAGD1L,YAAYwC,GAClB,IAAKvC,KAAKmL,KAAM,OAChB,MAAMM,EAAOzL,KAAK4C,MAAML,GAOxB,GANAlB,EAAW,OAAKA,EAAI4H,IAAI,QAAS,CAC/B5G,UAAWrC,KACXuC,MAAAA,EACAG,KAAM+I,GAAQ,+BAGQ,iBAAbzF,SAAuB,OAElC,MAAMjD,EAA8B,iBAAjB/C,KAAKgD,QACtBgD,SAAS0F,eAAe1L,KAAKgD,SAAWhD,KAAKgD,QAE/C,GAAID,EAAI,CACN,MAAM4I,EAAgB,KACjB3L,KAAKkJ,OAECnG,EAAe,aAAM/C,MAAQ+C,EAAG4E,aAAagE,KAAmB3L,KAAK4L,cAC9E5L,KAAK4L,aAAc,IAAI1J,MAAO2J,UAAU5B,WACxClH,EAAG6E,aAAa+D,EAAe3L,KAAK4L,aACJ,oBAArBE,mBACL9L,KAAK+L,WAAW/L,KAAK+L,SAAW,IAAID,iBAAiBE,IACnDA,EAAQ,GAAGC,WAAajM,KAAK4L,aAAgB5F,SAASkG,KAAKC,SAASpJ,KACtE/C,KAAKkJ,OAAOlJ,KAAKuC,OACjBvC,KAAK+L,SAASK,iBAGlBpM,KAAK+L,SAASM,QAAQrG,SAASkG,KAAM,CACnCI,WAAW,EAAMC,SAAS,EAC1B1D,YAAY,EAAM2D,mBAAmB,EAAMC,gBAAiB,CAACd,OAbjE5I,EAAG8E,iBAAmB9E,EAAG8E,gBAAgB8D,GAiB3C5I,EAAe,WAAI/C,KAErBA,KAAKyB,OAAOsB,EAAI0I,GAChBzL,KAAK0M,UAAY1M,KAAK0M,SAAS1M,KAAKuC,OAG/BxC,SAASwC,EAAUnC,EACtB,CAAEqB,QAAQ,EAAM6J,SAAS,IAC3B,GAAI/I,aAAiBI,QAGnBJ,EAAMoK,KAAKtF,IACTrH,KAAKiD,SAASoE,EAAGjH,KAChBwM,MAAMC,IAEP,MADAnM,QAAQoM,MAAMD,GACRA,IAER7M,KAAK+M,OAASxK,MACT,CAEL,GADAvC,KAAK+M,OAASxK,EACD,MAATA,EAAe,OACnBvC,KAAKuC,MAAQA,GACU,IAAnBnC,EAAQqB,QAAkBzB,KAAKgN,YAAYzK,IACvB,IAApBnC,EAAQkL,SAAqBtL,KAAKiN,iBACpCjN,KAAKqL,SAAW,IAAIrL,KAAKqL,SAAU9I,GACnCvC,KAAKoL,aAAepL,KAAKqL,SAASzK,OAAS,GAEb,mBAArBR,EAAQ8M,UAAyB9M,EAAQ8M,SAASlN,KAAKuC,QAoC/DxC,MAAMiD,EAAU,KAAM5C,WAmB3B,GAjBAM,QAAQC,QAAQX,KAAKgD,QAAS,8BAC9BhD,KAAKI,QAAUA,iCAAeJ,KAAKI,SAAYA,GAC/CJ,KAAKgD,QAAUA,EACfhD,KAAKmN,aAAe/M,EAAQ+M,aAC5BnN,KAAKiN,iBAAmB7M,EAAQkL,QAE5BtL,KAAKiN,iBACPjN,KAAKiB,GAAGb,EAAQkL,QAAQ8B,MAAQ,eAAgBpN,KAAKqN,eACrDrN,KAAKiB,GAAGb,EAAQkL,QAAQgC,MAAQ,eAAgBtN,KAAKuN,gBAEvDvN,KAAKwN,cACLxN,KAAKuC,wBAAQvC,KAAKuC,SAASvC,KAAY,SAAK,GACxCI,EAAQqB,OACVzB,KAAKiD,SAASjD,KAAKuC,MAAO,CAAEd,QAAQ,EAAM6J,SAAS,IAEnDtL,KAAKiD,SAASjD,KAAKuC,MAAO,CAAEd,QAAQ,EAAO6J,SAAS,IAElDjK,EAAW,MAAG,CAChB,MAAMY,EAAwB,iBAAZe,EAAuBA,EAAUA,EAAQf,GAC3D6I,EAAe7I,GAAM6I,EAAe7I,IAAO,GAC3C6I,EAAe7I,GAAI5B,KAAKL,MAE1B,OAAOA,KAGTD,gBAAgBG,GACd,OAAOA,IACLF,KAAKmN,cACLnN,KAAKyN,eAAevH,QAAQhG,IAAS,GACrCA,EAAKoH,WAAW,MAAQpH,EAAKoH,WAAW,MAAQpH,EAAKoH,WAAW,MAGpEvH,WAAWG,EAAcwN,EAAQtN,EAAyB,IACnDsN,GAA4B,mBAAXA,IAClBtN,EAAQoB,QAAQxB,KAAMyN,eAAepN,KAAKH,GAC9CF,KAAKiB,GAAGf,EAAa,IAAI8G,KACvB,MAAM2G,EAAWD,EAAO1N,KAAKuC,SAAUyE,GAEvC3F,EAAW,OAAKA,EAAI4H,IAAI,QAAS,CAC/B5G,UAAWrC,KACXuK,MAASrK,EACT4C,EAAGkE,EACHzE,MAAOvC,KAAKuC,MACZoL,SAAAA,EACAvN,QAAAA,IAGFJ,KAAKiD,SAAS0K,EAAUvN,IACvBA,IAGLL,cACE,MAAM6N,EAAU5N,KAAKuE,QAAU,GAC/B+E,EAAQuE,gBAAgB7N,MAAMc,QAAQkB,IACpC,GAAIA,EAAIsF,WAAW,kBAAmB,CACpC,MAAMiC,EAAOD,EAAQwE,YAAY9L,EAAKhC,MACtC4N,EAAQrE,EAAKrJ,MAAQ,CAACF,KAAKuJ,EAAKvH,KAAKgH,KAAKhJ,MAAOuJ,EAAKnJ,YAI1D,MAAM2N,EAAM,GACRxK,MAAMC,QAAQoK,GAChBA,EAAQ9M,QAAQkN,IACd,MAAO9N,EAAMwN,EAAQnF,GAAQyF,EACf9N,EAAK+J,WACbgE,MAAM,KAAKnN,QAAQ8E,GAAKmI,EAAInI,EAAEsI,QAAU,CAACR,EAAQnF,MAGzD3E,OAAOmD,KAAK6G,GAAS9M,QAAQZ,IAC3B,MAAMwN,EAASE,EAAQ1N,IACD,mBAAXwN,GAAyBnK,MAAMC,QAAQkK,KAChDxN,EAAK+N,MAAM,KAAKnN,QAAQ8E,GAAKmI,EAAInI,EAAEsI,QAAUR,KAK9CK,EAAI,OAAMA,EAAI,KAAO9C,GAC1BrH,OAAOmD,KAAKgH,GAAKjN,QAAQZ,IACvB,MAAMwN,EAASK,EAAI7N,GACG,mBAAXwN,EACT1N,KAAKmO,WAAWjO,EAAMwN,GACbnK,MAAMC,QAAQkK,IACvB1N,KAAKmO,WAAWjO,EAAMwN,EAAO,GAAIA,EAAO,MAKvC3N,IAAIwK,KAAa9J,GACtB,MAAMP,EAAOqK,EAAMN,WACnB,OAAOjK,KAAKoO,gBAAgBlO,GAC1BmB,EAAI4H,IAAI/I,KAASO,GACjBT,KAAKqO,KAAKpF,IAAI/I,KAASO,GAGpBV,GAAGwK,EAAUpK,EAAuBC,GACzC,MAAMF,EAAOqK,EAAMN,WAEnB,OADAjK,KAAKsO,SAASjO,KAAK,CAAEH,KAAAA,EAAMC,GAAAA,IACpBH,KAAKoO,gBAAgBlO,GAC1BmB,EAAIJ,GAAGf,EAAMC,EAAIC,GACjBJ,KAAKqO,KAAKpN,GAAGf,EAAMC,EAAIC,GAGpBL,0BACLC,KAAK+L,yBAAUK,aACfpM,KAAKsO,SAASxN,QAAQ4M,IACpB,MAAMxN,KAAEA,EAAIC,GAAEA,GAAOuN,EACrB1N,KAAKoO,gBAAgBlO,GACnBmB,EAAIkN,IAAIrO,EAAMC,GACdH,KAAKqO,KAAKE,IAAIrO,EAAMC,MApPnB+K,KAAsB,QCRlBsD,EAAuB,KACvBC,EAA2B,MAE3BC,EAAgBC,IAE3B,GADKA,IAAKA,EAAM,KACZA,EAAIrH,WAAW,KAAM,CACvB,MAAOpH,KAAS0O,GAAQD,EAAIV,MAAM,KAClC5M,EAAI4H,IAAI/I,KAAS0O,IAASvN,EAAI4H,IANM,MAMgB/I,KAAS0O,GAC7DvN,EAAI4H,IAR4B,KAQV/I,KAAS0O,QAC1B,GAAID,EAAIrH,WAAW,KAAM,CAC9B,MAAOuH,EAAG3O,KAAS0O,GAAQD,EAAIV,MAAM,KACrC5M,EAAI4H,IAAI,IAAM/I,KAAS0O,IAASvN,EAAI4H,IAVA,MAUsB,IAAM/I,KAAS0O,GACzEvN,EAAI4H,IAZ4B,KAYV,IAAM/I,KAAS0O,QAErCvN,EAAI4H,IAAI0F,IAAQtN,EAAI4H,IAbgB,MAaM0F,GAC1CtN,EAAI4H,IAf4B,KAeV0F,ICE1BtN,EAAIqC,cAAgBA,EACpBrC,EAAII,gBCrBmBuB,EAASyI,EAAM9J,GACpCsC,EAAcjB,EAASyI,EAAM9J,IDqB/BN,EAAI2G,SAAWA,EACf3G,EAAI+I,aAAeA,EAEnB/I,EAAIyN,MAAQ,CAAW9L,EAAgC+L,EAAY5D,EAAgB5G,EACjFnE,KACE,MAAMmI,iCAAWnI,IAASqB,QAAQ,EAAM0L,cAAc,IAChD9K,EAAY,IAAI6I,EAAgB6D,EAAO5D,EAAM5G,GAGnD,OAFInE,GAAWA,EAAQsM,WAAUrK,EAAUqK,SAAWtM,EAAQsM,UAC9DrK,EAAUC,MAAMU,EAASuF,GAClBlG,GAGX,MAAM2M,EAAOH,MACbxN,EAAIJ,GAAG,IAAK+N,GACZ3N,EAAIJ,GAAG,QAAS4N,GAAKG,GACrB3N,EAAIJ,GDlCgC,KCkCf+N,GACrB3N,EAAIJ,GAAG,IAAK+N,GACZ3N,EAAW,MAAIqN,EACfrN,EAAIJ,GAAG,QAAS0N,GAAOtN,EAAW,OAAKA,EAAW,MAAEsN,IAE5B,iBAAb3I,UACTA,SAASiJ,iBAAiB,mBAAoB,KACxC5N,EAAW,QAAMqN,IACnB5G,OAAOoH,WAAa,IAAMR,EAAMS,SAASC,MACzCV,EAAMS,SAASC,SAYC,iBAAXtH,SACTA,OAAkB,UAAIoD,EACtBpD,OAAc,MAAIzG;;;;;;;;;;;;;IEzCpB,MAAMgO,EAAa,IAAI7F,QAsDV8F,EAAevE,GACN,mBAANA,GAAoBsE,EAAWzF,IAAImB,GClDtCwE,OAAyC5L,IAA1BmE,OAAOsB,qBAE3BzF,IADHmE,OAAOsB,eAAqCoG,0BAQpCC,EACT,CAACC,EACAZ,EACAa,EAAiB,KACjBC,EAAoB,QACnB,KAAOd,IAAUa,GAAK,CACpB,MAAM/J,EAAIkJ,EAAOe,YACjBH,EAAUpK,aAAawJ,EAAQc,GAC/Bd,EAAQlJ,IAQHkK,EACT,CAACJ,EAAiBZ,EAAkBa,EAAiB,QACnD,KAAOb,IAAUa,GAAK,CACpB,MAAM/J,EAAIkJ,EAAOe,YACjBH,EAAU7J,YAAYiJ,GACtBA,EAAQlJ,ICPHmK,EAAW,GAKXC,EAAU,GC7BVC,EAAS,SAASC,OAAOhL,KAAKiL,UAAUC,MAAM,OAM9CC,EAAa,UAAOJ,UAEpBK,EAAc,IAAIC,OAAO,GAAGN,KAAUI,KAKtCG,EAAuB,QAKpC,MAAaC,EAIX1Q,YAAY2Q,EAAwB1N,GAH3BhD,WAAwB,GAI/BA,KAAKgD,QAAUA,EAEf,MAAM2N,EAAwB,GACxBC,EAAgB,GAEhBC,EAAS7K,SAAS8K,iBACpB9N,EAAQ+N,QACR,IACA,MACA,GAIJ,IAAIC,EAAgB,EAChBC,GAAS,EACTC,EAAY,EAChB,MAAMC,QAACA,EAASC,QAAQxQ,OAACA,IAAW8P,EACpC,KAAOQ,EAAYtQ,GAAQ,CACzB,MAAMc,EAAOmP,EAAOQ,WACpB,GAAa,OAAT3P,GAUJ,GAFAuP,IAEsB,IAAlBvP,EAAK8D,SAAwC,CAC/C,GAAK9D,EAAiB4P,gBAAiB,CACrC,MAAMzI,EAAcnH,EAAiBmH,YAC/BjI,OAACA,GAAUiI,EAMjB,IAAI0I,EAAQ,EACZ,IAAK,IAAI9N,EAAI,EAAGA,EAAI7C,EAAQ6C,IACtB+N,EAAS3I,EAAWpF,GAAGvD,KAAMsQ,IAC/Be,IAGJ,KAAOA,KAAU,GAAG,CAGlB,MAAME,EAAgBN,EAAQD,GAExBhR,EAAOwR,EAAuBC,KAAKF,GAAgB,GAMnDG,EACF1R,EAAK2R,cAAgBrB,EACnBsB,EACDpQ,EAAiBiG,aAAaiK,GAClClQ,EAAiBmG,gBAAgB+J,GAClC,MAAMG,EAAUD,EAAe7D,MAAMqC,GACrCtQ,KAAKgS,MAAM3R,KAAK,CAACoK,KAAM,YAAawG,MAAAA,EAAO/Q,KAAAA,EAAMiR,QAASY,IAC1Db,GAAaa,EAAQnR,OAAS,GAGA,aAA7Bc,EAAiBuQ,UACpBrB,EAAMvQ,KAAKqB,GACXmP,EAAOqB,YAAexQ,EAA6BqP,cAEhD,GAAsB,IAAlBrP,EAAK8D,SAAqC,CACnD,MAAM2M,EAAQzQ,EAAcyQ,KAC5B,GAAIA,EAAKjM,QAAQ+J,IAAW,EAAG,CAC7B,MAAMtO,EAASD,EAAKoD,WACdqM,EAAUgB,EAAKlE,MAAMqC,GACrB8B,EAAYjB,EAAQvQ,OAAS,EAGnC,IAAK,IAAI6C,EAAI,EAAGA,EAAI2O,EAAW3O,IAAK,CAClC,IAAI4O,EACAhL,EAAI8J,EAAQ1N,GAChB,GAAU,KAAN4D,EACFgL,EAASC,QACJ,CACL,MAAM7K,EAAQiK,EAAuBC,KAAKtK,GAC5B,OAAVI,GAAkB+J,EAAS/J,EAAM,GAAI+I,KACvCnJ,EAAIA,EAAE+I,MAAM,EAAG3I,EAAMwJ,OAASxJ,EAAM,GAChCA,EAAM,GAAG2I,MAAM,GAAII,EAAqB5P,QAAU6G,EAAM,IAE9D4K,EAASrM,SAASM,eAAee,GAEnC1F,EAAO2D,aAAa+M,EAAQ3Q,GAC5B1B,KAAKgS,MAAM3R,KAAK,CAACoK,KAAM,OAAQwG,QAASA,IAIf,KAAvBE,EAAQiB,IACVzQ,EAAO2D,aAAagN,IAAgB5Q,GACpCiP,EAActQ,KAAKqB,IAElBA,EAAcyQ,KAAOhB,EAAQiB,GAGhClB,GAAakB,QAEV,GAAsB,IAAlB1Q,EAAK8D,SACd,GAAK9D,EAAiByQ,OAASlC,EAAQ,CACrC,MAAMtO,EAASD,EAAKoD,WAKS,OAAzBpD,EAAK6Q,iBAA4BtB,IAAUD,IAC7CC,IACAtP,EAAO2D,aAAagN,IAAgB5Q,IAEtCsP,EAAgBC,EAChBjR,KAAKgS,MAAM3R,KAAK,CAACoK,KAAM,OAAQwG,MAAAA,IAGN,OAArBvP,EAAKmO,YACNnO,EAAiByQ,KAAO,IAEzBxB,EAActQ,KAAKqB,GACnBuP,KAEFC,QACK,CACL,IAAIzN,GAAK,EACT,MAAgE,KAAxDA,EAAK/B,EAAiByQ,KAAKjM,QAAQ+J,EAAQxM,EAAI,KAKrDzD,KAAKgS,MAAM3R,KAAK,CAACoK,KAAM,OAAQwG,OAAQ,IACvCC,UA9GJL,EAAOqB,YAActB,EAAM4B,MAqH/B,IAAK,MAAM5M,KAAK+K,EACd/K,EAAEd,WAAYe,YAAYD,IAKhC,MAAM4L,EAAW,CAACiB,EAAaC,KAC7B,MAAMzB,EAAQwB,EAAI7R,OAAS8R,EAAO9R,OAClC,OAAOqQ,GAAS,GAAKwB,EAAIrC,MAAMa,KAAWyB,GAwB/BC,EAAwBC,IAAuC,IAAhBA,EAAK3B,MAIpDqB,EAAe,IAAMtM,SAAS6M,cAAc,IA4B5CnB,EACT;;;;;;;;;;;;;;ACjOJ,MAAaoB,EAMX/S,YACIgT,EAAoBC,EACpB5S,GAPaJ,OAAiC,GAQhDA,KAAK+S,SAAWA,EAChB/S,KAAKgT,UAAYA,EACjBhT,KAAKI,QAAUA,EAGjBL,OAAOqR,GACL,IAAI3N,EAAI,EACR,IAAK,MAAMmP,KAAQ5S,KAAKiT,OACTtP,IAATiP,GACFA,EAAKM,SAAS9B,EAAO3N,IAEvBA,IAEF,IAAK,MAAMmP,KAAQ5S,KAAKiT,OACTtP,IAATiP,GACFA,EAAKO,SAKXpT,SAuCE,MAAMqT,EAAW7D,EACbvP,KAAK+S,SAAS/P,QAAQ+N,QAAQsC,WAAU,GACxCrN,SAASsN,WAAWtT,KAAK+S,SAAS/P,QAAQ+N,SAAS,GAEjDH,EAAgB,GAChBoB,EAAQhS,KAAK+S,SAASf,MAEtBnB,EAAS7K,SAAS8K,iBACpBsC,EACA,IACA,MACA,GACJ,IAEIR,EAFA1B,EAAY,EACZqC,EAAY,EAEZ7R,EAAOmP,EAAOQ,WAElB,KAAOH,EAAYc,EAAMpR,QAEvB,GADAgS,EAAOZ,EAAMd,GACRyB,EAAqBC,GAA1B,CASA,KAAOW,EAAYX,EAAK3B,OACtBsC,IACuB,aAAnB7R,EAAM+C,WACRmM,EAAMvQ,KAAKqB,GACXmP,EAAOqB,YAAexQ,EAA6BqP,SAElB,QAA9BrP,EAAOmP,EAAOQ,cAKjBR,EAAOqB,YAActB,EAAM4B,MAC3B9Q,EAAOmP,EAAOQ,YAKlB,GAAkB,SAAduB,EAAKnI,KAAiB,CACxB,MAAMmI,EAAO5S,KAAKgT,UAAUQ,qBAAqBxT,KAAKI,SACtDwS,EAAKa,gBAAgB/R,EAAM6Q,iBAC3BvS,KAAKiT,EAAQ5S,KAAKuS,QAElB5S,KAAKiT,EAAQ5S,QAAQL,KAAKgT,UAAUU,2BAChChS,EAAiBkR,EAAK1S,KAAM0S,EAAKzB,QAASnR,KAAKI,UAErD8Q,SAjCElR,KAAKiT,EAAQ5S,UAAKsD,GAClBuN,IAuCJ,OAJI3B,IACFvJ,SAAS2N,UAAUP,GACnBhK,eAAewK,QAAQR,IAElBA;;;;;;;;;;;;;GC9IX,MAQMS,EAAgB,IAAI5D,KAM1B,MAAa6D,EAMX/T,YACIoR,EAA+BC,EAC/B3G,EAAcuI,GAChBhT,KAAKmR,QAAUA,EACfnR,KAAKoR,OAASA,EACdpR,KAAKyK,KAAOA,EACZzK,KAAKgT,UAAYA,EAMnBjT,UACE,MAAMgU,EAAI/T,KAAKmR,QAAQvQ,OAAS,EAChC,IAAI6K,EAAO,GACPuI,GAAmB,EAEvB,IAAK,IAAIvQ,EAAI,EAAGA,EAAIsQ,EAAGtQ,IAAK,CAC1B,MAAM4D,EAAIrH,KAAKmR,QAAQ1N,GAkBjBwQ,EAAc5M,EAAE6M,YAAY,WAIlCF,GAAoBC,GAAe,GAAKD,KACG,IAAvC3M,EAAEnB,QAAQ,SAAO+N,EAAc,GAInC,MAAME,EAAiBzC,EAAuBC,KAAKtK,GAOjDoE,GANqB,OAAnB0I,EAMM9M,GAAK2M,EAAmBH,EAAgBxD,GAKxChJ,EAAE+M,OAAO,EAAGD,EAAelD,OAASkD,EAAe,GACvDA,EAAe,GAAK3D,EAAuB2D,EAAe,GAC1DlE,EAIR,OADAxE,GAAQzL,KAAKmR,QAAQ4C,GAIvBhU,qBACE,MAAMgT,EAAW/M,SAAStC,cAAc,YAExC,OADAqP,EAASsB,UAAYrU,KAAKsU,UACnBvB,SAWEwB,UAA0BT,EACrC/T,UACE,MAAO,QAAQoI,MAAMmM,kBAGvBvU,qBACE,MAAMgT,EAAW5K,MAAMqM,qBACjBzD,EAAUgC,EAAShC,QACnB0D,EAAa1D,EAAQ2D,WAG3B,OAFA3D,EAAQlL,YAAY4O,GACpBhF,EAAcsB,EAAS0D,EAAWC,YAC3B3B;;;;;;;;;;;;;GCjGJ,MAAM4B,EAAezN,GAEZ,OAAVA,KACmB,iBAAVA,GAAuC,mBAAVA,GAE/B0N,GAAc1N,GAClB3D,MAAMC,QAAQ0D,OAEdA,IAAUA,EAAc2N,OAAOC,WAQxC,MAAaC,GAOXhV,YAAYiD,EAAkB9C,EAAciR,GAF5CnR,YAAQ,EAGNA,KAAKgD,QAAUA,EACfhD,KAAKE,KAAOA,EACZF,KAAKmR,QAAUA,EACfnR,KAAKgS,MAAQ,GACb,IAAK,IAAIvO,EAAI,EAAGA,EAAI0N,EAAQvQ,OAAS,EAAG6C,IACrCzD,KAAKgS,MAA0BvO,GAAKzD,KAAKgV,cAOpCjV,cACR,OAAO,IAAIkV,GAAcjV,MAGjBD,YACR,MAAMoR,EAAUnR,KAAKmR,QACf4C,EAAI5C,EAAQvQ,OAAS,EAC3B,IAAIsU,EAAO,GAEX,IAAK,IAAIzR,EAAI,EAAGA,EAAIsQ,EAAGtQ,IAAK,CAC1ByR,GAAQ/D,EAAQ1N,GAChB,MAAMmP,EAAO5S,KAAKgS,MAAMvO,GACxB,QAAaE,IAATiP,EAAoB,CACtB,MAAMuC,EAAIvC,EAAK1L,MACf,GAAIyN,EAAYQ,KAAOP,GAAWO,GAChCD,GAAqB,iBAANC,EAAiBA,EAAIjF,OAAOiF,QAE3C,IAAK,MAAMC,KAAKD,EACdD,GAAqB,iBAANE,EAAiBA,EAAIlF,OAAOkF,IAOnD,OADAF,GAAQ/D,EAAQ4C,GAIlBhU,SACMC,KAAKqV,QACPrV,KAAKqV,OAAQ,EACbrV,KAAKgD,QAAQ4E,aAAa5H,KAAKE,KAAMF,KAAKsV,eAQhD,MAAaL,GAIXlV,YAAYwV,GAFZvV,gBAAiB2D,EAGf3D,KAAKuV,UAAYA,EAGnBxV,SAASmH,GACHA,IAAU6I,GAAc4E,EAAYzN,IAAUA,IAAUlH,KAAKkH,QAC/DlH,KAAKkH,MAAQA,EAIRoI,EAAYpI,KACflH,KAAKuV,UAAUF,OAAQ,IAK7BtV,SACE,KAAOuP,EAAYtP,KAAKkH,QAAQ,CAC9B,MAAMsE,EAAYxL,KAAKkH,MACvBlH,KAAKkH,MAAQ6I,EACbvE,EAAUxL,MAERA,KAAKkH,QAAU6I,GAGnB/P,KAAKuV,UAAUpC,UAYnB,MAAaqC,GAOXzV,YAAYK,GAHZJ,gBAAiB2D,EACT3D,YAA0B2D,EAGhC3D,KAAKI,QAAUA,EAQjBL,WAAW2P,GACT1P,KAAKyV,UAAY/F,EAAU/J,YAAY2M,KACvCtS,KAAK0V,QAAUhG,EAAU/J,YAAY2M,KAUvCvS,gBAAgB8C,GACd7C,KAAKyV,UAAY5S,EACjB7C,KAAK0V,QAAU7S,EAAIgN,YAQrB9P,eAAe6S,GACbA,EAAK+C,EAAS3V,KAAKyV,UAAYnD,KAC/BM,EAAK+C,EAAS3V,KAAK0V,QAAUpD,KAQ/BvS,gBAAgB8C,GACdA,EAAI8S,EAAS3V,KAAKyV,UAAYnD,KAC9BtS,KAAK0V,QAAU7S,EAAI6S,QACnB7S,EAAI6S,QAAU1V,KAAKyV,UAGrB1V,SAASmH,GACPlH,KAAK4V,EAAiB1O,EAGxBnH,SACE,KAAOuP,EAAYtP,KAAK4V,IAAiB,CACvC,MAAMpK,EAAYxL,KAAK4V,EACvB5V,KAAK4V,EAAiB7F,EACtBvE,EAAUxL,MAEZ,MAAMkH,EAAQlH,KAAK4V,EACf1O,IAAU6I,IAGV4E,EAAYzN,GACVA,IAAUlH,KAAKkH,OACjBlH,KAAK6V,EAAa3O,GAEXA,aAAiB4M,EAC1B9T,KAAK8V,EAAuB5O,GACnBA,aAAiB6O,KAC1B/V,KAAKgW,EAAa9O,GACT0N,GAAW1N,GACpBlH,KAAKiW,EAAiB/O,GACbA,IAAU8I,GACnBhQ,KAAKkH,MAAQ8I,EACbhQ,KAAKkW,SAGLlW,KAAK6V,EAAa3O,IAIdnH,EAAS2B,GACf1B,KAAK0V,QAAQ5Q,WAAYQ,aAAa5D,EAAM1B,KAAK0V,SAG3C3V,EAAamH,GACflH,KAAKkH,QAAUA,IAGnBlH,KAAKkW,QACLlW,KAAK2V,EAASzO,GACdlH,KAAKkH,MAAQA,GAGPnH,EAAamH,GACnB,MAAMxF,EAAO1B,KAAKyV,UAAU5F,YAItBsG,EACe,iBAJrBjP,EAAiB,MAATA,EAAgB,GAAKA,GAIGA,EAAQgJ,OAAOhJ,GAC3CxF,IAAS1B,KAAK0V,QAAQnD,iBACJ,IAAlB7Q,EAAK8D,SAIN9D,EAAcyQ,KAAOgE,EAEtBnW,KAAKgW,EAAahQ,SAASM,eAAe6P,IAE5CnW,KAAKkH,MAAQA,EAGPnH,EAAuBmH,GAC7B,MAAM6L,EAAW/S,KAAKI,QAAQgW,gBAAgBlP,GAC9C,GAAIlH,KAAKkH,iBAAiB4L,GACtB9S,KAAKkH,MAAM6L,WAAaA,EAC1B/S,KAAKkH,MAAM3C,OAAO2C,EAAMkK,YACnB,CAKL,MAAMiF,EACF,IAAIvD,EAAiBC,EAAU7L,EAAM8L,UAAWhT,KAAKI,SACnDgT,EAAWiD,EAASC,SAC1BD,EAAS9R,OAAO2C,EAAMkK,QACtBpR,KAAKgW,EAAa5C,GAClBpT,KAAKkH,MAAQmP,GAITtW,EAAiBmH,GAWlB3D,MAAMC,QAAQxD,KAAKkH,SACtBlH,KAAKkH,MAAQ,GACblH,KAAKkW,SAKP,MAAMK,EAAYvW,KAAKkH,MACvB,IACIsP,EADAtF,EAAY,EAGhB,IAAK,MAAMpI,KAAQ5B,OAKAvD,KAHjB6S,EAAWD,EAAUrF,MAInBsF,EAAW,IAAIhB,GAASxV,KAAKI,SAC7BmW,EAAUlW,KAAKmW,GACG,IAAdtF,EACFsF,EAASC,eAAezW,MAExBwW,EAASE,gBAAgBH,EAAUrF,EAAY,KAGnDsF,EAAStD,SAASpK,GAClB0N,EAASrD,SACTjC,IAGEA,EAAYqF,EAAU3V,SAExB2V,EAAU3V,OAASsQ,EACnBlR,KAAKkW,MAAMM,GAAYA,EAASd,UAIpC3V,MAAM0V,EAAkBzV,KAAKyV,WAC3B3F,EACI9P,KAAKyV,UAAU3Q,WAAa2Q,EAAU5F,YAAc7P,KAAK0V,UAWjE,MAAaiB,GAOX5W,YAAYiD,EAAkB9C,EAAciR,GAC1C,GAJFnR,gBAAiB2D,EACT3D,YAA0B2D,EAGT,IAAnBwN,EAAQvQ,QAA+B,KAAfuQ,EAAQ,IAA4B,KAAfA,EAAQ,GACvD,MAAM,IAAIpN,MACN,2DAEN/D,KAAKgD,QAAUA,EACfhD,KAAKE,KAAOA,EACZF,KAAKmR,QAAUA,EAGjBpR,SAASmH,GACPlH,KAAK4V,EAAiB1O,EAGxBnH,SACE,KAAOuP,EAAYtP,KAAK4V,IAAiB,CACvC,MAAMpK,EAAYxL,KAAK4V,EACvB5V,KAAK4V,EAAiB7F,EACtBvE,EAAUxL,MAEZ,GAAIA,KAAK4V,IAAmB7F,EAC1B,OAEF,MAAM7I,IAAUlH,KAAK4V,EACjB5V,KAAKkH,QAAUA,IACbA,EACFlH,KAAKgD,QAAQ4E,aAAa5H,KAAKE,KAAM,IAErCF,KAAKgD,QAAQ6E,gBAAgB7H,KAAKE,MAEpCF,KAAKkH,MAAQA,GAEflH,KAAK4V,EAAiB7F,SAab6G,WAA0B7B,GAGrChV,YAAYiD,EAAkB9C,EAAciR,GAC1ChJ,MAAMnF,EAAS9C,EAAMiR,GACrBnR,KAAK6W,OACmB,IAAnB1F,EAAQvQ,QAA+B,KAAfuQ,EAAQ,IAA4B,KAAfA,EAAQ,GAGlDpR,cACR,OAAO,IAAI+W,GAAa9W,MAGhBD,YACR,OAAIC,KAAK6W,OACA7W,KAAKgS,MAAM,GAAG9K,MAEhBiB,MAAMmN,YAGfvV,SACMC,KAAKqV,QACPrV,KAAKqV,OAAQ,EAEZrV,KAAKgD,QAAgBhD,KAAKE,MAAQF,KAAKsV,oBAKjCwB,WAAqB7B,IAMlC,IAAI8B,IAAwB,EAE5B,IACE,MAAM3W,EAAU,CACd4W,cAEE,OADAD,IAAwB,GACjB,IAIXjP,OAAOmH,iBAAiB,OAAQ7O,EAAgBA,GAEhD0H,OAAOmP,oBAAoB,OAAQ7W,EAAgBA,GACnD,MAAO8W,IAMT,MAAaC,GASXpX,YAAYiD,EAAkBoU,EAAmBC,GALjDrX,gBAA2C2D,EAEnC3D,YAAoD2D,EAI1D3D,KAAKgD,QAAUA,EACfhD,KAAKoX,UAAYA,EACjBpX,KAAKqX,aAAeA,EACpBrX,KAAKsX,EAAsBxU,GAAM9C,KAAKuX,YAAYzU,GAGpD/C,SAASmH,GACPlH,KAAK4V,EAAiB1O,EAGxBnH,SACE,KAAOuP,EAAYtP,KAAK4V,IAAiB,CACvC,MAAMpK,EAAYxL,KAAK4V,EACvB5V,KAAK4V,EAAiB7F,EACtBvE,EAAUxL,MAEZ,GAAIA,KAAK4V,IAAmB7F,EAC1B,OAGF,MAAMyH,EAAcxX,KAAK4V,EACnB6B,EAAczX,KAAKkH,MACnBwQ,EAAsC,MAAfF,GACV,MAAfC,IACKD,EAAYR,UAAYS,EAAYT,SACpCQ,EAAY3W,OAAS4W,EAAY5W,MACjC2W,EAAYG,UAAYF,EAAYE,SACvCC,EACa,MAAfJ,IAAuC,MAAfC,GAAuBC,GAE/CA,GACF1X,KAAKgD,QAAQiU,oBACTjX,KAAKoX,UAAWpX,KAAKsX,EAAoBtX,KAAK6X,GAEhDD,IACF5X,KAAK6X,EAAYC,GAAWN,GAC5BxX,KAAKgD,QAAQiM,iBACTjP,KAAKoX,UAAWpX,KAAKsX,EAAoBtX,KAAK6X,IAEpD7X,KAAKkH,MAAQsQ,EACbxX,KAAK4V,EAAiB7F,EAGxBhQ,YAAYwK,GACgB,mBAAfvK,KAAKkH,MACdlH,KAAKkH,MAAM6Q,KAAK/X,KAAKqX,cAAgBrX,KAAKgD,QAASuH,GAElDvK,KAAKkH,MAA8BqQ,YAAYhN,IAQtD,MAAMuN,GAAc/M,GAAyCA,IACxDgM,GACI,CAACC,QAASjM,EAAEiM,QAASW,QAAS5M,EAAE4M,QAAS9W,KAAMkK,EAAElK,MACjDkK,EAAEiM;;;;;;;;;;;;;GCvcJ,MAAMgB,GAA2B,IApCxC,MAUEjY,2BACIiD,EAAkB9C,EAAciR,EAChC/Q,GACF,MAAM6X,EAAS/X,EAAK,GACpB,GAAe,MAAX+X,EAAgB,CAElB,OADkB,IAAIrB,GAAkB5T,EAAS9C,EAAKkQ,MAAM,GAAIe,GAC/Ca,MAEnB,MAAe,MAAXiG,EACK,CAAC,IAAId,GAAUnU,EAAS9C,EAAKkQ,MAAM,GAAIhQ,EAAQiX,eAEzC,MAAXY,EACK,CAAC,IAAItB,GAAqB3T,EAAS9C,EAAKkQ,MAAM,GAAIe,IAEzC,IAAI4D,GAAmB/R,EAAS9C,EAAMiR,GACvCa,MAMnBjS,qBAAqBK,GACnB,OAAO,IAAIoV,GAASpV;;;;;;;;;;;;;YCXRgW,GAAgB1F,GAC9B,IAAIwH,EAAgBC,GAAerO,IAAI4G,EAAOjG,WACxB9G,IAAlBuU,IACFA,EAAgB,CACdE,aAAc,IAAI5O,QAClB6O,UAAW,IAAIC,KAEjBH,GAAetO,IAAI6G,EAAOjG,KAAMyN,IAGlC,IAAInF,EAAWmF,EAAcE,aAAatO,IAAI4G,EAAOS,SACrD,QAAiBxN,IAAboP,EACF,OAAOA,EAKT,MAAM/Q,EAAM0O,EAAOS,QAAQoH,KAAKtI,GAahC,YATiBtM,KADjBoP,EAAWmF,EAAcG,UAAUvO,IAAI9H,MAGrC+Q,EAAW,IAAItC,EAASC,EAAQA,EAAO8D,sBAEvC0D,EAAcG,UAAUxO,IAAI7H,EAAK+Q,IAInCmF,EAAcE,aAAavO,IAAI6G,EAAOS,QAAS4B,GACxCA,EAkBF,MAAMoF,GAAiB,IAAIG,ICxErBtG,GAAQ,IAAIxI,QAiBZ/H,GACT,CAACiP,EACAhB,EACAtP,KACC,IAAIwS,EAAOZ,GAAMlI,IAAI4F,QACR/L,IAATiP,IACF9C,EAAYJ,EAAWA,EAAUgF,YACjC1C,GAAMnI,IAAI6F,EAAWkD,EAAO,IAAI4C,kBACTY,gBAAAA,IACGhW,KAE1BwS,EAAK4F,WAAW9I,IAElBkD,EAAKM,SAASxC,GACdkC,EAAKO;;;;;;;;;;;;;;;;;;;;;;;;;;;CCIVrL,OAAwB,kBAAMA,OAAwB,gBAAI,KAAKzH,KAAK,SAMrE,MAAaoL,GAAO,CAAC0F,KAAkCC,IACnD,IAAI0C,EAAe3C,EAASC,EAAQ,OAAQ4G,IAMnCS,GAAM,CAACtH,KAAkCC,IAClD,IAAImD,EAAkBpD,EAASC,EAAQ,MAAO4G,IC7C5CU,GAAiB,IAAIlP,QASdmP,GX+BY,CAA6BC,OAC7CnY,KACH,MAAMsF,EAAI6S,KAAKnY,GAEf,OADA4O,EAAWxF,IAAI9D,GAAG,GACXA,GWnCayF,CAAWtE,GAAoB0L,IACvD,KAAMA,aAAgB4C,IACpB,MAAM,IAAIzR,MAAM,gDAGlB,MAAM8U,EAAgBH,GAAe5O,IAAI8I,GAEzC,QAAsBjP,IAAlBkV,GAA+BlE,EAAYzN,IAC3CA,IAAU2R,EAAc3R,OAAS0L,EAAK1L,QAAU2R,EAAczF,SAChE,OAGF,MAAML,EAAW/M,SAAStC,cAAc,YACxCqP,EAASsB,UAAYnN,EACrB,MAAMkM,EAAWpN,SAASsN,WAAWP,EAAShC,SAAS,GACvD6B,EAAKM,SAASE,GACdsF,GAAe7O,IAAI+I,EAAM,CAAC1L,MAAAA,EAAOkM,SAAAA,MC3CnC/R,EAAIqC,cAAgBA,EACpBrC,EAAII,OCNJ,SAAiBuB,EAASN,EAAMf,GACV,iBAATe,EACTjB,GAAOgK,EAAI,GAAGkN,GAAWjW,KAASM,GACzBN,aAAgBoR,EACzBrS,GAAOiB,EAAMM,GAEbiB,EAAcjB,EAASN,EAAMf,IDCjCN,EAAI2G,SAAWA,EAIO,iBAAXF,SACTA,OAAa,KAAI2D,GACjB3D,OAAY,IAAI2Q"}