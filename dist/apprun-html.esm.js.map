{"version":3,"file":"apprun-html.esm.js","sources":["../src/app.ts","../src/vdom-my.ts","../src/web-component.ts","../src/decorator.ts","../src/directive.ts","../src/component.ts","../src/router.ts","../src/apprun.ts","../src/vdom.ts","../node_modules/lit-html/src/lib/directive.ts","../node_modules/lit-html/src/lib/dom.ts","../node_modules/lit-html/src/lib/part.ts","../node_modules/lit-html/src/lib/template.ts","../node_modules/lit-html/src/lib/template-instance.ts","../node_modules/lit-html/src/lib/template-result.ts","../node_modules/lit-html/src/lib/parts.ts","../node_modules/lit-html/src/lib/default-template-processor.ts","../node_modules/lit-html/src/lib/template-factory.ts","../node_modules/lit-html/src/lib/render.ts","../node_modules/lit-html/src/lit-html.ts","../node_modules/lit-html/src/directives/unsafe-html.ts","../src/vdom-lit-html.ts","../src/apprun-html.ts"],"sourcesContent":["import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = new WeakMap();\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  if (node['_op'] === 3) return;\n  // console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  !(node['_op'] & 2) && updateChildren(element, node.children, isSvg);\n  !(node['_op'] & 1) && updateProps(element, node.props, isSvg);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const old_len = element.childNodes?.length || 0;\n  const new_len = children?.length || 0;\n  const len = Math.min(old_len, new_len);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    if (child['_op'] === 3) continue;\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.nodeValue = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          // console.log(el.key, key);\n          const old = keyCache[key];\n          if (old) {\n            const temp = old.nextSibling;\n            element.insertBefore(old, el);\n            temp ? element.insertBefore(el, temp) : element.appendChild(el);\n          }\n          update(element.childNodes[i], child, isSvg);\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (new_len > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node?.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node??'');\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  // console.assert(node !== null && node !== undefined);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props, isSvg);\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nexport function updateProps(element: Element, props: {}, isSvg) {\n  // console.assert(!!element);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      if (typeof value === 'string') element.style.cssText = value;\n      else {\n        for (const s in value) {\n          if (element.style[s] !== value[s]) element.style[s] = value[s];\n        }\n      }\n    } else if (name.startsWith('xlink')) {\n      const xname = name.replace('xlink', '').toLowerCase();\n      if (value == null || value === false) {\n        element.removeAttributeNS('http://www.w3.org/1999/xlink', xname);\n      } else {\n        element.setAttributeNS('http://www.w3.org/1999/xlink', xname, value);\n      }\n    } else if (name.startsWith('on')) {\n      if (!value || typeof value === 'function') {\n        element[name] = value;\n      } else if (typeof value === 'string') {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (/^id$|^class$|^list$|^readonly$|^contenteditable$|^role|-/g.test(name) || isSvg) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(() => props['ref'](element));\n  }\n}\n\nfunction render_component(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  let asTag = 'section';\n  if (props && props['as']) {\n    asTag = props['as'];\n    delete props['as'];\n  }\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component || !(component instanceof tag) || !component.element) {\n    const element = document.createElement(asTag);\n    component = parent.__componentCache[key] = new tag({ ...props, children }).start(element);\n  }\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, component.state);\n    (typeof new_state !== 'undefined') && component.setState(new_state);\n  }\n  updateProps(component.element, props, false);\n  return component.element;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) {\n    vdom = render_component(node, parent, idx);\n  }\n  if (vdom && Array.isArray(vdom.children)) {\n    const new_parent = vdom.props?._component;\n    if (new_parent) {\n      let i = 0;\n      vdom.children = vdom.children.map(child => createComponent(child, new_parent, i++));\n    } else {\n      vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n    }\n  }\n  return vdom;\n}\n","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?: boolean;\n  shadow?: boolean;\n  history?: boolean;\n  global_event?: boolean;\n  observedAttributes?: string[];\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class CustomElement extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  private _attrMap: (arg0: string) => string;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    // attributes need to be set to lowercase in order to get observed\n    return (options.observedAttributes || []).map(attr => attr.toLowerCase());\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const observedAttributes = (opts.observedAttributes || [])\n\n      const attrMap = observedAttributes.reduce((map, name) => {\n        const lc = name.toLowerCase()\n        if (lc !== name) {\n          map[lc] = name\n        }\n        return map\n      }, {})\n      this._attrMap = (name: string) : string => attrMap[name] || name\n\n      const props = {};\n      Array.from(this.attributes).forEach(item => props[this._attrMap(item.name)] = item.value);\n\n      // add getters/ setters to allow observation on observedAttributes\n      observedAttributes.forEach(name => {\n        if (this[name] !== undefined) props[name] = this[name];\n        Object.defineProperty(this, name, {\n          get(): any {\n            return props[name];\n          },\n          set(this: CustomElement, value: unknown) {\n            // trigger change event\n            this.attributeChangedCallback(name, props[name], value)\n          },\n          configurable: true,\n          enumerable: true\n        });\n      })\n\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      // attach props to component\n      this._component._props = props;\n      // expose dispatchEvent\n      this._component.dispatchEvent = this.dispatchEvent.bind(this)\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(name: string, oldValue: unknown, value: unknown) {\n    if (this._component) {\n      // camelCase attributes arrive only in lowercase\n      const mappedName = this._attrMap(name);\n      // store the new property/ attribute\n      this._component._props[mappedName] = value;\n      this._component.run('attributeChanged', mappedName, oldValue, value);\n\n      if (value !== oldValue && !(options.render === false)) {\n        window.requestAnimationFrame(() => {\n          // re-render state with new combined props on next animation frame\n          this._component.run('.')\n        })\n      }\n    }\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}\n","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = component['state'] || {};\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: {}, tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    } else if (tag === 'textarea') {\n      props['innerHTML'] = getStateValue(component, name);\n      props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T = any, E = any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.h = app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.h = app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    let html = vdom || this._view(state);\r\n\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      _: html ? '.' : '-',\r\n      state,\r\n      vdom: html,\r\n      el: this.element\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if (!this.observer) this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom) {\r\n      this.render(el, html);\r\n    }\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false }) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      // Wait for previous promise to complete first\r\n      Promise.all([state, this._state]).then(v => {\r\n        if (v[0]) this.setState(v[0]);\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E> {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n\r\n    if (options.route) {\r\n      this.update = this.update || {};\r\n      this.update[options.route] = REFRESH;\r\n    }\r\n\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (typeof this.state === 'function') this.state = this.state();\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this._global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '>',\r\n        event: name, p,\r\n        current_state: this.state,\r\n        options\r\n      });\r\n\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '<',\r\n        event: name, p,\r\n        newState,\r\n        state: this.state,\r\n        options\r\n      });\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions, AppStartOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E = any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: AppStartOptions<T>): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: AppStartOptions<T>): Component<T, E> => {\n  const opts = { ...options, render: true, global_event: true };\n  const component = new Component<T, E>(model, view, update);\n  if (options && options.rendered) component.rendered = options.rendered;\n  component.mount(element, opts);\n  return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      if (!document.body.hasAttribute('apprun-no-init')) route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T = {}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions, AppStartOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport { html, render, TemplateResult, svg, directive, EventPart, parts } from 'lit-html';\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nfunction _render(element, vdom, parent?) {\n  if (typeof vdom === 'string') {\n    render(html`${unsafeHTML(vdom)}`, element);\n  } else if (vdom instanceof TemplateResult) {\n    render(vdom, element);\n  } else {\n    updateElement(element, vdom, parent);\n    parts.delete(element);\n  }\n}\n\nconst run = directive((event, ...args) => (part) => {\n  if (!(part instanceof EventPart)) {\n    throw new Error('${run} can only be used in event handlers');\n  }\n  let { element, eventName } = part;\n  const getComponent = () => {\n    let component = element['_component'];\n    while (!component && element) {\n      element = element.parentElement;\n      component = element && element['_component'];\n    }\n    console.assert(!!component, 'Component not found.');\n    return component;\n  }\n  if (typeof event === 'string') {\n    element[`on${eventName}`] = e => getComponent().run(event, ...args, e);\n  } else if (typeof event === 'function') {\n    element[`on${eventName}`] = e => getComponent().setState(event(getComponent().state, ...args, e));\n  }\n});\n\nexport { createElement, Fragment, html, svg, _render as render, run };\n\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment, html, svg, run } from './vdom-lit-html';\nexport { html, svg, render, run }\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n\nif (typeof window === 'object') {\n  window['html'] = html;\n  window['svg'] = svg;\n  window['run'] = run;\n}\n"],"names":["App","[object Object]","this","_events","name","fn","options","push","subscribers","filter","sub","args","console","assert","length","once","forEach","delay","apply","on","_t","clearTimeout","setTimeout","app","root","self","global","Fragment","props","children","collect","ch","c","Array","isArray","i","createElement","tag","undefined","Object","getPrototypeOf","__isAppRunComponent","Error","keyCache","WeakMap","updateElement","element","nodes","parent","createComponent","isSvg","nodeName","updateChildren","update","node","el","key1","key2","toUpperCase","same","parentNode","replaceChild","create","updateProps","old_len","childNodes","new_len","len","Math","min","child","textContent","nodeType","nodeValue","createText","HTMLElement","SVGElement","insertBefore","key","old","temp","nextSibling","appendChild","n","removeChild","lastChild","d","document","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","oldProps","newProps","keys","p","mergeProps","value","startsWith","cname","replace","match","dataset","style","cssText","s","xname","toLowerCase","removeAttributeNS","setAttributeNS","setAttribute","removeAttribute","test","getAttribute","window","requestAnimationFrame","idx","map","vdom","id","Date","now","asTag","__componentCache","component","start","mounted","new_state","state","setState","render_component","new_parent","_component","customElement","componentClass","super","observedAttributes","attr","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","attrMap","reduce","lc","_attrMap","from","attributes","item","defineProperty","get","attributeChangedCallback","configurable","enumerable","parentElement","mount","_props","dispatchEvent","bind","run","render","unload","unmount","oldValue","mappedName","customElements","define","Reflect","meta","metadataKey","metadataValue","target","has","set","events","descriptor","toString","defineMetadata","constructor","webComponent","getStateValue","setStateValue","componentCache","o","components","REFRESH","Component","view","_history_idx","_history","history","h","event","e","handler","type","checked","Number","multiple","selected","directive","html","_view","_","getElementById","tracking_attr","tracking_id","valueOf","MutationObserver","observer","changes","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","rendered","Promise","all","_state","then","v","catch","err","error","renderState","enable_history","callback","global_event","prev","_history_prev","next","_history_next","route","add_actions","_global_events","action","current_state","newState","actions","getMetadataKeys","getMetadata","act","split","trim","add_action","is_global_event","_app","_actions","off","ROUTER_EVENT","ROUTER_404_EVENT","url","rest","model","NOOP","addEventListener","onpopstate","location","hash","hasAttribute","directives","f","isDirective","isCEPolyfill","polyfillWrapFlushCallback","removeNodes","container","end","noChange","nothing","marker","String","random","slice","nodeMarker","markerRegex","RegExp","Template","result","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","nextNode","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","attributeValue","statics","parts","tagName","currentNode","data","lastIndex","insert","createMarker","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getHTML","innerHTML","SVGTemplateResult","getTemplateElement","svgElement","firstChild","before","reparentNodes","isPrimitive","isIterable","Symbol","iterator","AttributeCommitter","_createPart","AttributePart","text","t","dirty","_getValue","committer","NodePart","startNode","endNode","ref","__insert","__pendingValue","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","passive","shouldAddListener","__options","getOptions","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","join","appendInto","svg","previousValues","unsafeHTML","previousValue","_render","delete","getComponent"],"mappings":"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"}