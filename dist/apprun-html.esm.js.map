{"version":3,"file":"apprun-html.esm.js","sources":["../src/app.ts","../src/createComponent.tsx","../src/vdom-my.ts","../src/web-component.ts","../src/decorator.ts","../src/directive.ts","../src/component.ts","../src/router.ts","../src/apprun.ts","../src/vdom.ts","../node_modules/lit-html/src/lib/directive.ts","../node_modules/lit-html/src/lib/dom.ts","../node_modules/lit-html/src/lib/part.ts","../node_modules/lit-html/src/lib/template.ts","../node_modules/lit-html/src/lib/template-instance.ts","../node_modules/lit-html/src/lib/template-result.ts","../node_modules/lit-html/src/lib/parts.ts","../node_modules/lit-html/src/lib/default-template-processor.ts","../node_modules/lit-html/src/lib/template-factory.ts","../node_modules/lit-html/src/lib/render.ts","../node_modules/lit-html/src/lit-html.ts","../node_modules/lit-html/src/directives/unsafe-html.ts","../src/vdom-lit-html.ts","../src/apprun-html.ts"],"sourcesContent":["import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component || !(component instanceof tag)) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  let state = component.state;\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, component.state);\n    state = (typeof new_state !== 'undefined') ?  new_state : component.state;\n  }\n  if (state instanceof Promise) {\n    const render = el => {\n      component.element = el;\n      Promise.all([state]).then(v => {\n        if (v[0] != null) component.setState(v[0]);\n        else component.setState(component.state);\n      })\n    }\n    return <section {...props} ref={e => render(e)} _component={component}></section>;\n  } else if (state != null) {\n    const vdom = component._view(state, props);\n    const render = el => {\n      component.element = el;\n      component.state = state;\n      component.renderState(state, vdom);\n    }\n    return <section {...props} ref={e => render(e)} _component={component}>{vdom}</section>;\n  } else {\n    return <section {...props} _component={component}></section>;\n  }\n}\n\nexport default function createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) {\n    vdom = render(node, parent, idx);\n  }\n  if (vdom && Array.isArray(vdom.children)) {\n    const new_parent = vdom.props?._component;\n    if (new_parent) {\n      let i = 0;\n      vdom.children = vdom.children.map(child => createComponent(child, new_parent, i++));\n    } else {\n      vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n    }\n  }\n  return vdom;\n}\n","import createComponent from './createComponent';\nimport { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = new WeakMap();\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  if (node['_op'] === 3) return;\n  // console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  !(node['_op'] & 2) && updateChildren(element, node.children, isSvg);\n  !(node['_op'] & 1) && updateProps(element, node.props, isSvg);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const old_len = element.childNodes?.length || 0;\n  const new_len = children?.length || 0;\n  const len = Math.min(old_len, new_len);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    if (child['_op'] === 3) continue;\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.nodeValue = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          // console.log(el.key, key);\n          const old = keyCache[key];\n          if (old) {\n            const temp = old.nextSibling;\n            element.insertBefore(old, el);\n            temp ? element.insertBefore(el, temp) : element.appendChild(el);\n          }\n          update(element.childNodes[i], child, isSvg);\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (new_len > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  // console.assert(node !== null && node !== undefined);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props, isSvg);\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}, isSvg) {\n  // console.assert(!!element);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      if (typeof value === 'string') element.style.cssText = value;\n      else {\n        for (const s in value) {\n          if (element.style[s] !== value[s]) element.style[s] = value[s];\n        }\n      }\n    } else if (name.startsWith('xlink')) {\n      const xname = name.replace('xlink', '').toLowerCase();\n      if (value == null || value === false) {\n        element.removeAttributeNS('http://www.w3.org/1999/xlink', xname);\n      } else {\n        element.setAttributeNS('http://www.w3.org/1999/xlink', xname, value);\n      }\n    } else if (name.startsWith('on')) {\n      if (!value || typeof value === 'function') {\n        element[name] = value;\n      } else if (typeof value === 'string') {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (/^id$|^class$|^list$|^readonly$|^contenteditable$|^role|-/g.test(name) || isSvg) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(() => props['ref'](element));\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?: boolean;\n  shadow?: boolean;\n  history?: boolean;\n  global_event?: boolean;\n  observedAttributes?: string[];\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class CustomElement extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  private _attrMap: (arg0: string) => string;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    // attributes need to be set to lowercase in order to get observed\n    return (options.observedAttributes || []).map(attr => attr.toLowerCase());\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const observedAttributes = (opts.observedAttributes || [])\n\n      const attrMap = observedAttributes.reduce((map, name) => {\n        const lc = name.toLowerCase()\n        if (lc !== name) {\n          map[lc] = name\n        }\n        return map\n      }, {})\n      this._attrMap = (name: string) : string => attrMap[name] || name\n\n      const props = {};\n      Array.from(this.attributes).forEach(item => props[this._attrMap(item.name)] = item.value);\n\n      // add getters/ setters to allow observation on observedAttributes\n      observedAttributes.forEach(name => {\n        if (this[name] !== undefined) props[name] = this[name];\n        Object.defineProperty(this, name, {\n          get(): any {\n            return props[name];\n          },\n          set(this: CustomElement, value: unknown) {\n            // trigger change event\n            this.attributeChangedCallback(name, props[name], value)\n          },\n          configurable: true,\n          enumerable: true\n        });\n      })\n\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      // attach props to component\n      this._component._props = props;\n      // expose dispatchEvent\n      this._component.dispatchEvent = this.dispatchEvent.bind(this)\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(name: string, oldValue: unknown, value: unknown) {\n    if (this._component) {\n      // camelCase attributes arrive only in lowercase\n      const mappedName = this._attrMap(name);\n      // store the new property/ attribute\n      this._component._props[mappedName] = value;\n      this._component.run('attributeChanged', mappedName, oldValue, value);\n\n      if (value !== oldValue && !(options.render === false)) {\n        window.requestAnimationFrame(() => {\n          // re-render state with new combined props on next animation frame\n          this._component.run('.')\n        })\n      }\n    }\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}\n","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = component['state'] || {};\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: {}, tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    } else if (tag === 'textarea') {\n      props['innerHTML'] = getStateValue(component, name);\n      props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T = any, E = any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state, p = null) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.h = app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = p ? this.view(state, p) : this.view(state);\r\n    app.h = app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    let html = vdom || this._view(state);\r\n\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      _: html ? '.' : '-',\r\n      state,\r\n      vdom: html,\r\n      el: this.element\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if (!this.observer) this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom) {\r\n      this.render(el, html);\r\n    }\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false }) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      // Wait for previous promise to complete first\r\n      Promise.all([state, this._state]).then(v => {\r\n        if (v[0]) this.setState(v[0]);\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E> {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n\r\n    if (options.route) {\r\n      this.update = this.update || {};\r\n      this.update[options.route] = REFRESH;\r\n    }\r\n\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (typeof this.state === 'function') this.state = this.state();\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this._global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '>',\r\n        event: name, p,\r\n        current_state: this.state,\r\n        options\r\n      });\r\n\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '<',\r\n        event: name, p,\r\n        newState,\r\n        state: this.state,\r\n        options\r\n      });\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions, AppStartOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: AppStartOptions<T>): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: AppStartOptions<T>) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions, AppStartOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport { html, render, TemplateResult, svg, directive, EventPart, parts } from 'lit-html';\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nfunction _render(element, vdom, parent?) {\n  if (typeof vdom === 'string') {\n    render(html`${unsafeHTML(vdom)}`, element);\n  } else if (vdom instanceof TemplateResult) {\n    render(vdom, element);\n  } else {\n    updateElement(element, vdom, parent);\n    parts.delete(element);\n  }\n}\n\nconst run = directive((event, ...args) => (part) => {\n  if (!(part instanceof EventPart)) {\n    throw new Error('${run} can only be used in event handlers');\n  }\n  let { element, eventName } = part;\n  const getComponent = () => {\n    let component = element['_component'];\n    while (!component && element) {\n      element = element.parentElement;\n      component = element && element['_component'];\n    }\n    console.assert(!!component, 'Component not found.');\n    return component;\n  }\n  if (typeof event === 'string') {\n    element[`on${eventName}`] = e => getComponent().run(event, ...args, e);\n  } else if (typeof event === 'function') {\n    element[`on${eventName}`] = e => getComponent().setState(event(getComponent().state, ...args, e));\n  }\n});\n\nexport { createElement, Fragment, html, svg, _render as render, run };\n\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment, html, svg, run } from './vdom-lit-html';\nexport { html, svg, render, run }\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n\nif (typeof window === 'object') {\n  window['html'] = html;\n  window['svg'] = svg;\n  window['run'] = run;\n}\n"],"names":["App","[object Object]","this","_events","name","fn","options","push","subscribers","filter","sub","args","console","assert","length","once","forEach","delay","apply","on","_t","clearTimeout","setTimeout","app","root","self","global","createComponent","node","parent","idx","Array","isArray","map","child","vdom","tag","Object","getPrototypeOf","__isAppRunComponent","props","children","key","id","Date","now","__componentCache","component","mount","state","mounted","new_state","Promise","render","el","element","all","then","v","setState","ref","e","_component","_view","renderState","new_parent","i","collect","ch","c","createElement","undefined","Error","keyCache","WeakMap","updateElement","nodes","isSvg","nodeName","updateChildren","update","key1","key2","toUpperCase","same","parentNode","replaceChild","create","updateProps","old_len","childNodes","new_len","len","Math","min","textContent","nodeType","nodeValue","createText","HTMLElement","SVGElement","insertBefore","old","temp","nextSibling","appendChild","n","removeChild","lastChild","d","document","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","oldProps","newProps","keys","p","mergeProps","value","startsWith","cname","replace","match","dataset","style","cssText","s","xname","toLowerCase","removeAttributeNS","setAttributeNS","setAttribute","removeAttribute","test","getAttribute","window","requestAnimationFrame","Fragment","customElement","componentClass","super","observedAttributes","attr","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","attrMap","reduce","lc","_attrMap","from","attributes","item","defineProperty","get","attributeChangedCallback","configurable","enumerable","parentElement","_props","dispatchEvent","bind","run","unload","unmount","oldValue","mappedName","customElements","define","Reflect","meta","metadataKey","metadataValue","target","has","set","events","descriptor","toString","defineMetadata","constructor","webComponent","getStateValue","setStateValue","componentCache","o","components","REFRESH","Component","view","_history_idx","_history","history","h","event","handler","type","checked","Number","multiple","selected","directive","html","_","getElementById","tracking_attr","tracking_id","valueOf","MutationObserver","observer","changes","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","rendered","_state","catch","err","error","enable_history","callback","global_event","prev","_history_prev","next","_history_next","route","add_actions","_global_events","action","current_state","newState","actions","getMetadataKeys","getMetadata","act","split","trim","add_action","is_global_event","_app","_actions","off","ROUTER_EVENT","ROUTER_404_EVENT","url","rest","start","model","NOOP","addEventListener","onpopstate","location","hash","directives","f","isDirective","isCEPolyfill","polyfillWrapFlushCallback","removeNodes","container","end","noChange","nothing","marker","String","random","slice","nodeMarker","markerRegex","RegExp","Template","result","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","nextNode","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","attributeValue","statics","parts","tagName","currentNode","data","lastIndex","insert","createMarker","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getHTML","innerHTML","SVGTemplateResult","getTemplateElement","svgElement","firstChild","before","reparentNodes","isPrimitive","isIterable","Symbol","iterator","AttributeCommitter","_createPart","AttributePart","text","t","dirty","_getValue","committer","NodePart","startNode","endNode","__insert","__pendingValue","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","passive","shouldAddListener","__options","getOptions","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","join","appendInto","svg","previousValues","unsafeHTML","previousValue","_render","delete","getComponent"],"mappings":"MACaA,EAWXC,cACEC,KAAKC,QAAU,GAGjBF,GAAGG,EAAcC,EAAuBC,EAAwB,IAC9DJ,KAAKC,QAAQC,GAAQF,KAAKC,QAAQC,IAAS,GAC3CF,KAAKC,QAAQC,GAAMG,KAAK,CAAEF,GAAAA,EAAIC,QAAAA,IAGhCL,IAAIG,EAAcC,GAChB,MAAMG,EAAcN,KAAKC,QAAQC,IAAS,GAE1CF,KAAKC,QAAQC,GAAQI,EAAYC,QAAQC,GAAQA,EAAIL,KAAOA,IAG9DJ,KAAKG,GACH,OAAOF,KAAKC,QAAQC,GAGtBH,IAAIG,KAAiBO,GACnB,MAAMH,EAAcN,KAAKC,QAAQC,IAAS,GAqB1C,OAnBAQ,QAAQC,OAAOL,GAAeA,EAAYM,OAAS,EAAG,4BAA8BV,GAKpFF,KAAKC,QAAQC,GAAQI,EAAYC,QAAQC,IAC/BA,EAAIJ,QAAQS,OAGtBP,EAAYQ,SAASN,IACnB,MAAML,GAAEA,EAAEC,QAAEA,GAAYI,EAMxB,OALIJ,EAAQW,MACVf,KAAKe,MAAMb,EAAMC,EAAIM,EAAML,GAE3BD,EAAGa,MAAMhB,KAAMS,IAETD,EAAIJ,QAAQS,QAGfP,EAAYM,OAGrBb,KAAKG,EAAcC,EAAIC,EAAwB,IAC7CJ,KAAKiB,GAAGf,EAAMC,iCAASC,IAASS,MAAM,KAGhCd,MAAMG,EAAMC,EAAIM,EAAML,GACxBA,EAAQc,IAAIC,aAAaf,EAAQc,IACrCd,EAAQc,GAAKE,YAAW,KACtBD,aAAaf,EAAQc,IACrBf,EAAGa,MAAMhB,KAAMS,KACdL,EAAQW,QAKf,IAAIM,EACJ,MAAMC,EAAwB,iBAATC,MAAqBA,KAAKA,OAASA,MAAQA,MAC3C,iBAAXC,QAAuBA,OAAOA,SAAWA,QAAUA,OACzDF,EAAU,KAAKA,EAAsB,gBACvCD,EAAMC,EAAU,KAEhBD,EAAM,IAAIvB,EACVwB,EAAU,IAAID,EACdC,EAAsB,gBATD,YAWvB,MAAeD,WCxCSI,EAAgBC,EAAMC,EAAQC,EAAM,SAC1D,GAAoB,iBAATF,EAAmB,OAAOA,EACrC,GAAIG,MAAMC,QAAQJ,GAAO,OAAOA,EAAKK,KAAIC,GAASP,EAAgBO,EAAOL,EAAQC,OACjF,IAAIK,EAAOP,EAIX,GAHIA,GAA4B,mBAAbA,EAAKQ,KAAsBC,OAAOC,eAAeV,EAAKQ,KAAKG,IAC5EJ,EA3CJ,SAAgBP,EAAMC,EAAQC,GAC5B,MAAMM,IAAEA,EAAGI,MAAEA,EAAKC,SAAEA,GAAab,EACjC,IAAIc,EAAM,IAAIZ,IACVa,EAAKH,GAASA,EAAU,GACvBG,EACAD,EAAMC,EADFA,EAAK,IAAIb,IAAMc,KAAKC,QAExBhB,EAAOiB,IAAkBjB,EAAOiB,EAAmB,IACxD,IAAIC,EAAYlB,EAAOiB,EAAiBJ,GACnCK,GAAeA,aAAqBX,IACvCW,EAAYlB,EAAOiB,EAAiBJ,GAAO,IAAIN,iCAASI,IAAOC,SAAAA,KAAYO,MAAML,IAEnF,IAAIM,EAAQF,EAAUE,MACtB,GAAIF,EAAUG,QAAS,CACrB,MAAMC,EAAYJ,EAAUG,QAAQV,EAAOC,EAAUM,EAAUE,OAC/DA,OAA8B,IAAdE,EAA8BA,EAAYJ,EAAUE,MAEtE,GAAIA,aAAiBG,QAAS,CAC5B,MAAMC,EAASC,IACbP,EAAUQ,QAAUD,EACpBF,QAAQI,IAAI,CAACP,IAAQQ,MAAKC,IACZ,MAARA,EAAE,GAAYX,EAAUY,SAASD,EAAE,IAClCX,EAAUY,SAASZ,EAAUE,WAGtC,OAAO1B,+BAAaiB,GAAOoB,IAAKC,GAAKR,EAAOQ,GAAIC,WAAYf,KACvD,GAAa,MAATE,EAAe,CACxB,MAAMd,EAAOY,EAAUgB,MAAMd,EAAOT,GAC9Ba,EAASC,IACbP,EAAUQ,QAAUD,EACpBP,EAAUE,MAAQA,EAClBF,EAAUiB,YAAYf,EAAOd,IAE/B,OAAOZ,+BAAaiB,GAAOoB,IAAKC,GAAKR,EAAOQ,GAAIC,WAAYf,IAAYZ,GAExE,OAAOZ,+BAAaiB,GAAOsB,WAAYf,KAShCM,CAAOzB,EAAMC,EAAQC,IAE1BK,GAAQJ,MAAMC,QAAQG,EAAKM,UAAW,CACxC,MAAMwB,YAAa9B,EAAKK,4BAAOsB,WAC/B,GAAIG,EAAY,CACd,IAAIC,EAAI,EACR/B,EAAKM,SAAWN,EAAKM,SAASR,KAAIC,GAASP,EAAgBO,EAAO+B,EAAYC,YAE9E/B,EAAKM,SAAWN,EAAKM,SAASR,KAAIC,GAASP,EAAgBO,EAAOL,EAAQC,OAG9E,OAAOK,EClDT,SAASgC,EAAQ1B,GACf,MAAM2B,EAAK,GACL7D,EAAQ8D,IACRA,MAAAA,GAAuC,KAANA,IAAkB,IAANA,GAC/CD,EAAG7D,KAAmB,mBAAN8D,GAAiC,iBAANA,EAAkBA,EAAI,GAAGA,MAUxE,OAPA5B,GAAYA,EAASzB,SAAQqD,IACvBtC,MAAMC,QAAQqC,GAChBA,EAAErD,SAAQkD,GAAK3D,EAAK2D,KAEpB3D,EAAK8D,MAGFD,WAGOE,EAAclC,EAA6BI,KAAeC,GACxE,MAAM2B,EAAKD,EAAQ1B,GACnB,GAAmB,iBAARL,EAAkB,MAAO,CAAEA,IAAAA,EAAKI,MAAAA,EAAOC,SAAU2B,GACvD,GAAIrC,MAAMC,QAAQI,GAAM,OAAOA,EAC/B,QAAYmC,IAARnC,GAAqBK,EAAU,OAAO2B,EAC1C,GAAI/B,OAAOC,eAAeF,GAAKG,EAAqB,MAAO,CAAEH,IAAAA,EAAKI,MAAAA,EAAOC,SAAU2B,GACnF,GAAmB,mBAARhC,EAAoB,OAAOA,EAAII,EAAO4B,GACjD,MAAM,IAAII,MAAM,uBAAuBpC,KAG9C,MAAMqC,EAAW,IAAIC,QAERC,WAEUpB,EAAkBqB,EAAa/C,EAAS,IAG7D,GAAa,MAAT+C,IAA2B,IAAVA,EAAiB,OAEtCA,EAAQjD,EAAgBiD,EAAO/C,GAE/B,MAAMgD,EAA8B,SAAtBtB,MAAAA,SAAAA,EAASuB,UAEvB,IAAKvB,EAAS,OACVxB,MAAMC,QAAQ4C,GAChBG,EAAexB,EAASqB,EAAOC,GAE/BE,EAAexB,EAAS,CAACqB,GAAQC,IAWrC,SAASG,EAAOzB,EAAkB3B,EAAaiD,GACzB,IAAhBjD,EAAU,MAEdiD,EAAQA,GAAsB,QAAbjD,EAAKQ,KAVxB,SAAckB,EAAa1B,GAEzB,MAAMqD,EAAO3B,EAAGwB,SACVI,EAAO,GAAGtD,EAAKQ,KAAO,KAC5B,OAAO6C,EAAKE,gBAAkBD,EAAKC,cAO9BC,CAAK7B,EAAS3B,GACjB2B,EAAQ8B,WAAWC,aAAaC,EAAO3D,EAAMiD,GAAQtB,MAGvC,EAAd3B,EAAU,MAAUmD,EAAexB,EAAS3B,EAAKa,SAAUoC,KAC7C,EAAdjD,EAAU,MAAU4D,EAAYjC,EAAS3B,EAAKY,MAAOqC,KAGzD,SAASE,EAAexB,EAASd,EAAUoC,SACzC,MAAMY,aAAUlC,EAAQmC,iCAAY5E,SAAU,EACxC6E,GAAUlD,MAAAA,SAAAA,EAAU3B,SAAU,EAC9B8E,EAAMC,KAAKC,IAAIL,EAASE,GAC9B,IAAK,IAAIzB,EAAI,EAAGA,EAAI0B,EAAK1B,IAAK,CAC5B,MAAMhC,EAAQO,EAASyB,GACvB,GAAqB,IAAjBhC,EAAW,IAAS,SACxB,MAAMoB,EAAKC,EAAQmC,WAAWxB,GAC9B,GAAqB,iBAAVhC,EACLoB,EAAGyC,cAAgB7D,IACD,IAAhBoB,EAAG0C,SACL1C,EAAG2C,UAAY/D,EAEfqB,EAAQ+B,aAAaY,EAAWhE,GAAQoB,SAGvC,GAAIpB,aAAiBiE,aAAejE,aAAiBkE,WAC1D7C,EAAQ8C,aAAanE,EAAOoB,OACvB,CACL,MAAMZ,EAAMR,EAAMM,OAASN,EAAMM,MAAW,IAC5C,GAAIE,EACF,GAAIY,EAAGZ,MAAQA,EACbsC,EAAOzB,EAAQmC,WAAWxB,GAAIhC,EAAO2C,OAChC,CAEL,MAAMyB,EAAM7B,EAAS/B,GACrB,GAAI4D,EAAK,CACP,MAAMC,EAAOD,EAAIE,YACjBjD,EAAQ8C,aAAaC,EAAKhD,GAC1BiD,EAAOhD,EAAQ8C,aAAa/C,EAAIiD,GAAQhD,EAAQkD,YAAYnD,GAE9D0B,EAAOzB,EAAQmC,WAAWxB,GAAIhC,EAAO2C,QAGvCG,EAAOzB,EAAQmC,WAAWxB,GAAIhC,EAAO2C,IAK3C,IAAI6B,EAAInD,EAAQmC,WAAW5E,OAC3B,KAAO4F,EAAId,GACTrC,EAAQoD,YAAYpD,EAAQqD,WAC5BF,IAGF,GAAIf,EAAUC,EAAK,CACjB,MAAMiB,EAAIC,SAASC,yBACnB,IAAK,IAAI7C,EAAI0B,EAAK1B,EAAIzB,EAAS3B,OAAQoD,IACrC2C,EAAEJ,YAAYlB,EAAO9C,EAASyB,GAAIW,IAEpCtB,EAAQkD,YAAYI,IAIxB,SAASX,EAAWtE,GAClB,GAA+B,IAA3BA,EAAKoF,QAAQ,UAAiB,CAChC,MAAMC,EAAMH,SAASxC,cAAc,OAEnC,OADA2C,EAAIC,mBAAmB,aAActF,EAAKuF,UAAU,IAC7CF,EAEP,OAAOH,SAASM,eAAexF,GAInC,SAAS2D,EAAO3D,EAAiDiD,GAE/D,GAAKjD,aAAgBuE,aAAiBvE,aAAgBwE,WAAa,OAAOxE,EAC1E,GAAoB,iBAATA,EAAmB,OAAOsE,EAAWtE,GAChD,IAAKA,EAAKQ,KAA4B,mBAAbR,EAAKQ,IAAqB,OAAO8D,EAAWmB,KAAKC,UAAU1F,IAEpF,MAAM2B,GADNsB,EAAQA,GAAsB,QAAbjD,EAAKQ,KAElB0E,SAASS,gBAAgB,6BAA8B3F,EAAKQ,KAC5D0E,SAASxC,cAAc1C,EAAKQ,KAIhC,OAFAoD,EAAYjC,EAAS3B,EAAKY,MAAOqC,GAC7BjD,EAAKa,UAAUb,EAAKa,SAASzB,SAAQkB,GAASqB,EAAQkD,YAAYlB,EAAOrD,EAAO2C,MAC7EtB,EAYT,SAASiC,EAAYjC,EAAkBf,EAAWqC,GAEhD,MAAM2C,EAASjE,EAAkB,QAAK,GACtCf,EAZF,SAAoBiF,EAAcC,GAChCA,EAAgB,MAAIA,EAAgB,OAAKA,EAAoB,iBACtDA,EAAoB,UAC3B,MAAMlF,EAAQ,GAGd,OAFIiF,GAAUpF,OAAOsF,KAAKF,GAAUzG,SAAQ4G,GAAKpF,EAAMoF,GAAK,OACxDF,GAAUrF,OAAOsF,KAAKD,GAAU1G,SAAQ4G,GAAKpF,EAAMoF,GAAKF,EAASE,KAC9DpF,EAMCqF,CAAWL,EAAQhF,GAAS,IACpCe,EAAkB,OAAIf,EAEtB,IAAK,MAAMpC,KAAQoC,EAAO,CACxB,MAAMsF,EAAQtF,EAAMpC,GAGpB,GAAIA,EAAK2H,WAAW,SAAU,CAC5B,MACMC,EADQ5H,EAAK+G,UAAU,GACTc,QAAQ,UAAWC,GAAUA,EAAM,GAAG/C,gBACtD5B,EAAQ4E,QAAQH,KAAWF,IACzBA,GAAmB,KAAVA,EAAcvE,EAAQ4E,QAAQH,GAASF,SACxCvE,EAAQ4E,QAAQH,SAEzB,GAAa,UAAT5H,EAET,GADImD,EAAQ6E,MAAMC,UAAS9E,EAAQ6E,MAAMC,QAAU,IAC9B,iBAAVP,EAAoBvE,EAAQ6E,MAAMC,QAAUP,OAErD,IAAK,MAAMQ,KAAKR,EACVvE,EAAQ6E,MAAME,KAAOR,EAAMQ,KAAI/E,EAAQ6E,MAAME,GAAKR,EAAMQ,SAG3D,GAAIlI,EAAK2H,WAAW,SAAU,CACnC,MAAMQ,EAAQnI,EAAK6H,QAAQ,QAAS,IAAIO,cAC3B,MAATV,IAA2B,IAAVA,EACnBvE,EAAQkF,kBAAkB,+BAAgCF,GAE1DhF,EAAQmF,eAAe,+BAAgCH,EAAOT,QAEvD1H,EAAK2H,WAAW,MACpBD,GAA0B,mBAAVA,EAEO,iBAAVA,IACZA,EAAOvE,EAAQoF,aAAavI,EAAM0H,GACjCvE,EAAQqF,gBAAgBxI,IAH7BmD,EAAQnD,GAAQ0H,EAKT,4DAA4De,KAAKzI,IAASyE,EAC/EtB,EAAQuF,aAAa1I,KAAU0H,IAC7BA,EAAOvE,EAAQoF,aAAavI,EAAM0H,GACjCvE,EAAQqF,gBAAgBxI,IAEtBmD,EAAQnD,KAAU0H,IAC3BvE,EAAQnD,GAAQ0H,GAEL,QAAT1H,GAAkB0H,IAAOrD,EAASqD,GAASvE,GAE7Cf,GAAiC,mBAAjBA,EAAW,KAC7BuG,OAAOC,uBAAsB,IAAMxG,EAAW,IAAEe,cAIpC0F,EAASzG,KAAUC,GACjC,OAAO0B,EAAQ1B,GC9MV,MAAMyG,EAAgB,CAACC,EAAgB7I,EAAgC,KAAO,cAA4B6F,YAM/GlG,cACEmJ,QAEFrG,gBAAkB,OAAO7C,KAAK4D,WAC9Bb,YAAc,OAAO/C,KAAK4D,WAAWb,MAErCoG,gCAEE,OAAQ/I,EAAQ+I,oBAAsB,IAAIpH,KAAIqH,GAAQA,EAAKd,gBAG7DvI,oBACE,GAAIC,KAAKqJ,cAAgBrJ,KAAK4D,WAAY,CACxC,MAAM0F,EAAOlJ,GAAW,GACxBJ,KAAKuJ,YAAcD,EAAKE,OAASxJ,KAAKyJ,aAAa,CAAEC,KAAM,SAAY1J,KACvE,MAAMmJ,EAAsBG,EAAKH,oBAAsB,GAEjDQ,EAAUR,EAAmBS,QAAO,CAAC7H,EAAK7B,KAC9C,MAAM2J,EAAK3J,EAAKoI,cAIhB,OAHIuB,IAAO3J,IACT6B,EAAI8H,GAAM3J,GAEL6B,IACN,IACH/B,KAAK8J,SAAY5J,GAA0ByJ,EAAQzJ,IAASA,EAE5D,MAAMoC,EAAQ,GACdT,MAAMkI,KAAK/J,KAAKgK,YAAYlJ,SAAQmJ,GAAQ3H,EAAMtC,KAAK8J,SAASG,EAAK/J,OAAS+J,EAAKrC,QAGnFuB,EAAmBrI,SAAQZ,SACNmE,IAAfrE,KAAKE,KAAqBoC,EAAMpC,GAAQF,KAAKE,IACjDiC,OAAO+H,eAAelK,KAAME,EAAM,CAChCiK,IAAG,IACM7H,EAAMpC,GAEfH,IAAyB6H,GAEvB5H,KAAKoK,yBAAyBlK,EAAMoC,EAAMpC,GAAO0H,IAEnDyC,cAAc,EACdC,YAAY,OAIhB,MAAM/H,EAAWvC,KAAKuC,SAAWV,MAAMkI,KAAK/J,KAAKuC,UAAY,GAO7D,GANAA,EAASzB,SAAQsC,GAAMA,EAAGmH,cAAc9D,YAAYrD,KACpDpD,KAAK4D,WAAa,IAAIqF,iCAAoB3G,IAAOC,SAAAA,KAAYO,MAAM9C,KAAKuJ,YAAaD,GAErFtJ,KAAK4D,WAAW4G,OAASlI,EAEzBtC,KAAK4D,WAAW6G,cAAgBzK,KAAKyK,cAAcC,KAAK1K,MACpDA,KAAK4D,WAAWZ,QAAS,CAC3B,MAAMC,EAAYjD,KAAK4D,WAAWZ,QAAQV,EAAOC,EAAUvC,KAAK4D,WAAWb,YAClD,IAAdE,IAA2BjD,KAAK4D,WAAWb,MAAQE,GAEhEjD,KAAKiB,GAAKjB,KAAK4D,WAAW3C,GAAGyJ,KAAK1K,KAAK4D,YACvC5D,KAAK2K,IAAM3K,KAAK4D,WAAW+G,IAAID,KAAK1K,KAAK4D,aACrB,IAAd0F,EAAKnG,QAAiBnD,KAAK4D,WAAW+G,IAAI,MAIpD5K,uDACEC,KAAK4D,iCAAYgH,mDACjB5K,KAAK4D,iCAAYiH,gCACjB7K,KAAK4D,WAAa,KAGpB7D,yBAAyBG,EAAc4K,EAAmBlD,GACxD,GAAI5H,KAAK4D,WAAY,CAEnB,MAAMmH,EAAa/K,KAAK8J,SAAS5J,GAEjCF,KAAK4D,WAAW4G,OAAOO,GAAcnD,EACrC5H,KAAK4D,WAAW+G,IAAI,mBAAoBI,EAAYD,EAAUlD,GAE1DA,IAAUkD,IAAiC,IAAnB1K,EAAQ+C,QAClC0F,OAAOC,uBAAsB,KAE3B9I,KAAK4D,WAAW+G,IAAI,WAO9B,MAAe,CAACzK,EAAc+I,EAAgB7I,KACjB,oBAAnB4K,gBAAmCA,eAAeC,OAAO/K,EAAM8I,EAAcC,EAAgB7I,KCpGhG,MAAM8K,EAAU,CAErBC,KAAM,IAAI3G,QAEVzE,eAAeqL,EAAaC,EAAeC,GACpCtL,KAAKmL,KAAKI,IAAID,IAAStL,KAAKmL,KAAKK,IAAIF,EAAQ,IAClDtL,KAAKmL,KAAKhB,IAAImB,GAAQF,GAAeC,GAGvCtL,gBAAgBuL,GAEd,OADAA,EAASnJ,OAAOC,eAAekJ,GACxBtL,KAAKmL,KAAKhB,IAAImB,GAAUnJ,OAAOsF,KAAKzH,KAAKmL,KAAKhB,IAAImB,IAAW,IAGtEvL,YAAYqL,EAAaE,GAEvB,OADAA,EAASnJ,OAAOC,eAAekJ,GACxBtL,KAAKmL,KAAKhB,IAAImB,GAAUtL,KAAKmL,KAAKhB,IAAImB,GAAQF,GAAe,gBAIxDtG,EAAiB2G,EAAYrL,EAAe,IAC1D,MAAO,CAACkL,EAAa9I,EAAakJ,KAChC,MAAMxL,EAAOuL,EAASA,EAAOE,WAAanJ,EAG1C,OAFA0I,EAAQU,eAAe,iBAAiB1L,IACtC,CAAEA,KAAAA,EAAMsC,IAAAA,EAAKpC,QAAAA,GAAWkL,GACnBI,YAIKzK,EAAewK,EAAYrL,EAAe,IACxD,OAAO,SAAUkL,EAAa9I,GAC5B,MAAMtC,EAAOuL,EAASA,EAAOE,WAAanJ,EAC1C0I,EAAQU,eAAe,iBAAiB1L,IACtC,CAAEA,KAAAA,EAAMsC,IAAAA,EAAKpC,QAAAA,GAAWkL,aAIdtC,EAAc9I,EAAcE,GAC1C,OAAO,SAA+DyL,GAEpE,OADAC,EAAa5L,EAAM2L,EAAazL,GACzByL,GCzCX,MAAME,EAAgB,CAAClJ,EAAW3C,KACxBA,EAAO2C,EAAiB,MAAE3C,GAAQ2C,EAAiB,QAAM,GAG7DmJ,EAAgB,CAACnJ,EAAW3C,EAAM0H,KACtC,GAAI1H,EAAM,CACR,MAAM6C,EAAQF,EAAiB,OAAK,GACpCE,EAAM7C,GAAQ0H,EACd/E,EAAUY,SAASV,QAEnBF,EAAUY,SAASmE,ICNvB,MAAMqE,EAAiB,GACvB5K,EAAIJ,GAAG,kBAAkBiL,GAAKA,EAAEC,WAAaF,IAE7C,MAAMG,EAAUrJ,GAASA,QAEZsJ,EAkIXtM,YACYgD,EACAuJ,EACAxH,EACA1E,GAHAJ,WAAA+C,EACA/C,UAAAsM,EACAtM,YAAA8E,EACA9E,aAAAI,EApIJJ,UAAO,IAAIF,EACXE,cAAW,GACXA,oBAAiB,GAEjBA,cAAW,GACXA,mBAAgB,EAuGhBA,mBAAgB,KACtBA,KAAKuM,eACDvM,KAAKuM,cAAgB,EACvBvM,KAAKyD,SAASzD,KAAKwM,SAASxM,KAAKuM,cAAe,CAAEpJ,QAAQ,EAAMsJ,SAAS,IAGzEzM,KAAKuM,aAAe,GAIhBvM,mBAAgB,KACtBA,KAAKuM,eACDvM,KAAKuM,aAAevM,KAAKwM,SAAS5L,OACpCZ,KAAKyD,SAASzD,KAAKwM,SAASxM,KAAKuM,cAAe,CAAEpJ,QAAQ,EAAMsJ,SAAS,IAGzEzM,KAAKuM,aAAevM,KAAKwM,SAAS5L,OAAS,GAW/CZ,WAAQ,CAACqD,EAAU,KAAMjD,IAChBJ,KAAK8C,MAAMO,iCAAcjD,IAAS+C,QAAQ,KAzHnDpD,OAAOsD,EAAsB3B,GAC3BL,EAAI8B,OAAOE,EAAS3B,EAAM1B,MAGpBD,MAAMgD,EAAO2E,EAAI,MACvB,IAAK1H,KAAKsM,KAAM,OAChB,MAAMI,EAAIrL,EAAI+C,cACd/C,EAAIqL,EAAIrL,EAAI+C,cAAgB,CAAClC,EAAKI,KAAUC,KAC1CD,GAASH,OAAOsF,KAAKnF,GAAOxB,SAAQ0B,IAC9BA,EAAIqF,WAAW,ODrBZ,EAACrF,EAAaF,EAAWJ,EAAKW,KAC3C,GAAIL,EAAIqF,WAAW,OAAQ,CACzB,MAAM8E,EAAQrK,EAAME,GAEpB,GADAA,EAAMA,EAAIyE,UAAU,GACC,kBAAV0F,EACTrK,EAAME,GAAOmB,GAAKd,EAAU8H,IAAInI,EAAKmB,QAChC,GAAqB,iBAAVgJ,EAChBrK,EAAME,GAAOmB,GAAKd,EAAU8H,IAAIgC,EAAOhJ,QAClC,GAAqB,mBAAVgJ,EAChBrK,EAAME,GAAOmB,GAAKd,EAAUY,SAASkJ,EAAM9J,EAAUE,MAAOY,SACvD,GAAI9B,MAAMC,QAAQ6K,GAAQ,CAC/B,MAAOC,KAAYlF,GAAKiF,EACD,iBAAZC,EACTtK,EAAME,GAAOmB,GAAKd,EAAU8H,IAAIiC,KAAYlF,EAAG/D,GACnB,mBAAZiJ,IAChBtK,EAAME,GAAOmB,GAAKd,EAAUY,SAASmJ,EAAQ/J,EAAUE,SAAU2E,EAAG/D,WAInE,GAAY,UAARnB,EAAiB,CAC1B,MAAMqK,EAAOvK,EAAY,MAAK,OACxBpC,EAA6B,iBAAfoC,EAAME,GAAoBF,EAAME,GAAOF,EAAY,KACvE,GAAY,UAARJ,EACF,OAAQ2K,GACN,IAAK,WACHvK,EAAe,QAAIyJ,EAAclJ,EAAW3C,GAC5CoC,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAOwB,SACjF,MACF,IAAK,QACHxK,EAAe,QAAIyJ,EAAclJ,EAAW3C,KAAUoC,EAAa,MACnEA,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAO1D,OACjF,MACF,IAAK,SACL,IAAK,QACHtF,EAAa,MAAIyJ,EAAclJ,EAAW3C,GAC1CoC,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAM6M,OAAOpJ,EAAE2H,OAAO1D,QACxF,MACF,QACEtF,EAAa,MAAIyJ,EAAclJ,EAAW3C,GAC1CoC,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAO1D,WAEpE,WAAR1F,GACTI,EAAa,MAAIyJ,EAAclJ,EAAW3C,GAC1CoC,EAAgB,SAAIqB,IACbA,EAAE2H,OAAO0B,UACZhB,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAO1D,SAG5C,WAAR1F,GACTI,EAAgB,SAAIyJ,EAAclJ,EAAW3C,GAC7CoC,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAO2B,WAChE,aAAR/K,IACTI,EAAiB,UAAIyJ,EAAclJ,EAAW3C,GAC9CoC,EAAe,QAAIqB,GAAKqI,EAAcnJ,EAAW3C,GAAQyD,EAAE2H,OAAOpL,KAAMyD,EAAE2H,OAAO1D,aAGnFvG,EAAIsJ,IAAI,IAAK,CAAEnI,IAAAA,EAAKN,IAAAA,EAAKI,MAAAA,EAAOO,UAAAA,KClC1BqK,CAAU1K,EAAKF,EAAOJ,EAAKlC,aACpBsC,EAAME,OAGVkK,EAAExK,EAAKI,KAAUC,IAE1B,MAAM4K,EAAOzF,EAAI1H,KAAKsM,KAAKvJ,EAAO2E,GAAK1H,KAAKsM,KAAKvJ,GAEjD,OADA1B,EAAIqL,EAAIrL,EAAI+C,cAAgBsI,EACrBS,EAGDpN,YAAYgD,EAAUd,EAAO,MACnC,IAAKjC,KAAKsM,KAAM,OAChB,IAAIa,EAAOlL,GAAQjC,KAAK6D,MAAMd,GAU9B,GARA1B,EAAW,OAAKA,EAAIsJ,IAAI,QAAS,CAC/B9H,UAAW7C,KACXoN,EAAGD,EAAO,IAAM,IAChBpK,MAAAA,EACAd,KAAMkL,EACN/J,GAAIpD,KAAKqD,UAGa,iBAAbuD,SAAuB,OAElC,MAAMxD,EAA8B,iBAAjBpD,KAAKqD,QACtBuD,SAASyG,eAAerN,KAAKqD,SAAWrD,KAAKqD,QAE/C,GAAID,EAAI,CACN,MAAMkK,EAAgB,KACjBtN,KAAK4K,OAECxH,EAAe,aAAMpD,MAAQoD,EAAGwF,aAAa0E,KAAmBtN,KAAKuN,cAC9EvN,KAAKuN,aAAc,IAAI7K,MAAO8K,UAAU7B,WACxCvI,EAAGqF,aAAa6E,EAAetN,KAAKuN,aACJ,oBAArBE,mBACJzN,KAAK0N,WAAU1N,KAAK0N,SAAW,IAAID,kBAAiBE,IACnDA,EAAQ,GAAG7C,WAAa9K,KAAKuN,aAAgB3G,SAASgH,KAAKC,SAASzK,KACtEpD,KAAK4K,OAAO5K,KAAK+C,OACjB/C,KAAK0N,SAASI,aACd9N,KAAK0N,SAAW,UAGpB1N,KAAK0N,SAASK,QAAQnH,SAASgH,KAAM,CACnCI,WAAW,EAAMC,SAAS,EAC1BjE,YAAY,EAAMkE,mBAAmB,EAAMC,gBAAiB,CAACb,OAdjElK,EAAGsF,iBAAmBtF,EAAGsF,gBAAgB4E,GAkB3ClK,EAAe,WAAIpD,KAEhBiC,GACHjC,KAAKmD,OAAOC,EAAI+J,GAElBnN,KAAKoO,UAAYpO,KAAKoO,SAASpO,KAAK+C,OAG/BhD,SAASgD,EAAU3C,EACtB,CAAE+C,QAAQ,EAAMsJ,SAAS,IAC3B,GAAI1J,aAAiBG,QAInBA,QAAQI,IAAI,CAACP,EAAO/C,KAAKqO,SAAS9K,MAAKC,IACjCA,EAAE,IAAIxD,KAAKyD,SAASD,EAAE,OACzB8K,OAAMC,IAEP,MADA7N,QAAQ8N,MAAMD,GACRA,KAERvO,KAAKqO,OAAStL,MACT,CAEL,GADA/C,KAAKqO,OAAStL,EACD,MAATA,EAAe,OACnB/C,KAAK+C,MAAQA,GACU,IAAnB3C,EAAQ+C,QAAkBnD,KAAK8D,YAAYf,IACvB,IAApB3C,EAAQqM,SAAqBzM,KAAKyO,iBACpCzO,KAAKwM,SAAW,IAAIxM,KAAKwM,SAAUzJ,GACnC/C,KAAKuM,aAAevM,KAAKwM,SAAS5L,OAAS,GAEb,mBAArBR,EAAQsO,UAAyBtO,EAAQsO,SAAS1O,KAAK+C,QAmC/DhD,MAAMsD,EAAU,KAAMjD,WAyB3B,GAxBAM,QAAQC,QAAQX,KAAKqD,QAAS,8BAC9BrD,KAAKI,QAAUA,iCAAeJ,KAAKI,SAAYA,GAC/CJ,KAAKqD,QAAUA,EACfrD,KAAK2O,aAAevO,EAAQuO,aAC5B3O,KAAKyO,iBAAmBrO,EAAQqM,QAE5BzM,KAAKyO,iBACPzO,KAAKiB,GAAGb,EAAQqM,QAAQmC,MAAQ,eAAgB5O,KAAK6O,eACrD7O,KAAKiB,GAAGb,EAAQqM,QAAQqC,MAAQ,eAAgB9O,KAAK+O,gBAGnD3O,EAAQ4O,QACVhP,KAAK8E,OAAS9E,KAAK8E,QAAU,GAC7B9E,KAAK8E,OAAO1E,EAAQ4O,OAAS5C,GAG/BpM,KAAKiP,cACLjP,KAAK+C,0BAAQ/C,KAAK+C,qBAAS/C,KAAY,qBAAK,GAClB,mBAAfA,KAAK+C,QAAsB/C,KAAK+C,MAAQ/C,KAAK+C,SACpD3C,EAAQ+C,OACVnD,KAAKyD,SAASzD,KAAK+C,MAAO,CAAEI,QAAQ,EAAMsJ,SAAS,IAEnDzM,KAAKyD,SAASzD,KAAK+C,MAAO,CAAEI,QAAQ,EAAOsJ,SAAS,IAElDpL,EAAW,MAAG,CAChB,MAAMoB,EAAwB,iBAAZY,EAAuBA,EAAUA,EAAQZ,GAC3DwJ,EAAexJ,GAAMwJ,EAAexJ,IAAO,GAC3CwJ,EAAexJ,GAAIpC,KAAKL,MAE1B,OAAOA,KAGTD,gBAAgBG,GACd,OAAOA,IACLF,KAAK2O,cACL3O,KAAKkP,eAAepI,QAAQ5G,IAAS,GACrCA,EAAK2H,WAAW,MAAQ3H,EAAK2H,WAAW,MAAQ3H,EAAK2H,WAAW,MAGpE9H,WAAWG,EAAciP,EAAQ/O,EAAyB,IACnD+O,GAA4B,mBAAXA,IAClB/O,EAAQoB,QAAQxB,KAAKkP,eAAe7O,KAAKH,GAC7CF,KAAKiB,GAAGf,GAAa,IAAIwH,KAEvBrG,EAAW,OAAKA,EAAIsJ,IAAI,QAAS,CAC/B9H,UAAW7C,KACXoN,EAAG,IACHT,MAAOzM,EAAMwH,EAAAA,EACb0H,cAAepP,KAAK+C,MACpB3C,QAAAA,IAGF,MAAMiP,EAAWF,EAAOnP,KAAK+C,SAAU2E,GAEvCrG,EAAW,OAAKA,EAAIsJ,IAAI,QAAS,CAC/B9H,UAAW7C,KACXoN,EAAG,IACHT,MAAOzM,EAAMwH,EAAAA,EACb2H,SAAAA,EACAtM,MAAO/C,KAAK+C,MACZ3C,QAAAA,IAGFJ,KAAKyD,SAAS4L,EAAUjP,KACvBA,IAGLL,cACE,MAAMuP,EAAUtP,KAAK8E,QAAU,GAC/BoG,EAAQqE,gBAAgBvP,MAAMc,SAAQ0B,IACpC,GAAIA,EAAIqF,WAAW,kBAAmB,CACpC,MAAMsD,EAAOD,EAAQsE,YAAYhN,EAAKxC,MACtCsP,EAAQnE,EAAKjL,MAAQ,CAACF,KAAKmL,EAAK3I,KAAKkI,KAAK1K,MAAOmL,EAAK/K,aAI1D,MAAMkD,EAAM,GACRzB,MAAMC,QAAQwN,GAChBA,EAAQxO,SAAQ2O,IACd,MAAOvP,EAAMiP,EAAQ7F,GAAQmG,EACfvP,EAAKyL,WACb+D,MAAM,KAAK5O,SAAQ0F,GAAKlD,EAAIkD,EAAEmJ,QAAU,CAACR,EAAQ7F,QAGzDnH,OAAOsF,KAAK6H,GAASxO,SAAQZ,IAC3B,MAAMiP,EAASG,EAAQpP,IACD,mBAAXiP,GAAyBtN,MAAMC,QAAQqN,KAChDjP,EAAKwP,MAAM,KAAK5O,SAAQ0F,GAAKlD,EAAIkD,EAAEmJ,QAAUR,OAK9C7L,EAAI,OAAMA,EAAI,KAAO8I,GAC1BjK,OAAOsF,KAAKnE,GAAKxC,SAAQZ,IACvB,MAAMiP,EAAS7L,EAAIpD,GACG,mBAAXiP,EACTnP,KAAK4P,WAAW1P,EAAMiP,GACbtN,MAAMC,QAAQqN,IACvBnP,KAAK4P,WAAW1P,EAAMiP,EAAO,GAAIA,EAAO,OAKvCpP,IAAI4M,KAAalM,GACtB,MAAMP,EAAOyM,EAAMhB,WACnB,OAAO3L,KAAK6P,gBAAgB3P,GAC1BmB,EAAIsJ,IAAIzK,KAASO,GACjBT,KAAK8P,KAAKnF,IAAIzK,KAASO,GAGpBV,GAAG4M,EAAUxM,EAAuBC,GACzC,MAAMF,EAAOyM,EAAMhB,WAEnB,OADA3L,KAAK+P,SAAS1P,KAAK,CAAEH,KAAAA,EAAMC,GAAAA,IACpBH,KAAK6P,gBAAgB3P,GAC1BmB,EAAIJ,GAAGf,EAAMC,EAAIC,GACjBJ,KAAK8P,KAAK7O,GAAGf,EAAMC,EAAIC,GAGpBL,0BACLC,KAAK0N,yBAAUI,aACf9N,KAAK+P,SAASjP,SAAQqO,IACpB,MAAMjP,KAAEA,EAAIC,GAAEA,GAAOgP,EACrBnP,KAAK6P,gBAAgB3P,GACnBmB,EAAI2O,IAAI9P,EAAMC,GACdH,KAAK8P,KAAKE,IAAI9P,EAAMC,OAzQnBkM,KAAsB,QCRlB4D,EAAuB,KACvBC,EAA2B,MAE3BlB,EAAgBmB,IAE3B,GADKA,IAAKA,EAAM,KACZA,EAAItI,WAAW,KAAM,CACvB,MAAO3H,KAASkQ,GAAQD,EAAIT,MAAM,KAClCrO,EAAIsJ,IAAIzK,KAASkQ,IAAS/O,EAAIsJ,IANM,MAMgBzK,KAASkQ,GAC7D/O,EAAIsJ,IAR4B,KAQVzK,KAASkQ,QAC1B,GAAID,EAAItI,WAAW,KAAM,CAC9B,MAAOuF,EAAGlN,KAASkQ,GAAQD,EAAIT,MAAM,KACrCrO,EAAIsJ,IAAI,IAAMzK,KAASkQ,IAAS/O,EAAIsJ,IAVA,MAUsB,IAAMzK,KAASkQ,GACzE/O,EAAIsJ,IAZ4B,KAYV,IAAMzK,KAASkQ,QAErC/O,EAAIsJ,IAAIwF,IAAQ9O,EAAIsJ,IAbgB,MAaMwF,GAC1C9O,EAAIsJ,IAf4B,KAeVwF,ICG1B9O,EAAIqL,EAAIrL,EAAI+C,cAAgBA,EAC5B/C,EAAI8B,gBCtBmBE,EAAS8J,EAAMxL,GACpC8C,EAAcpB,EAAS8J,EAAMxL,IDsB/BN,EAAI0H,SAAWA,EACf1H,EAAIyK,aAAeA,EAEnBzK,EAAIgP,MAAQ,CAAahN,EAAmBiN,EAAWhE,EAAgBxH,EACrE1E,KACE,MAAMkJ,iCAAWlJ,IAAS+C,QAAQ,EAAMwL,cAAc,IAChD9L,EAAY,IAAIwJ,EAAgBiE,EAAOhE,EAAMxH,GAGnD,OAFI1E,GAAWA,EAAQgO,WAAUvL,EAAUuL,SAAWhO,EAAQgO,UAC9DvL,EAAUC,MAAMO,EAASiG,GAClBzG,GAGX,MAAM0N,EAAOnD,MACb/L,EAAIJ,GAAG,IAAKsP,GACZlP,EAAIJ,GAAG,SAASmM,GAAKmD,IACrBlP,EAAIJ,GDnCgC,KCmCfsP,GACrBlP,EAAIJ,GAAG,IAAKsP,GACZlP,EAAW,MAAI2N,EACf3N,EAAIJ,GAAG,SAASkP,GAAO9O,EAAW,OAAKA,EAAW,MAAE8O,KAE5B,iBAAbvJ,UACTA,SAAS4J,iBAAiB,oBAAoB,KACxCnP,EAAW,QAAM2N,IACnBnG,OAAO4H,WAAa,IAAMzB,EAAM0B,SAASC,MACzC3B,EAAM0B,SAASC,UAYC,iBAAX9H,SACTA,OAAkB,UAAIwD,EACtBxD,OAAc,MAAIxH,EAClBwH,OAAW,GAAI5H,EACf4H,OAAsB,cAAIG;;;;;;;;;;;;;IEhD5B,MAAM4H,EAAa,IAAIpM,QA+CV0I,EAAyC2D,OAC7CpQ,KACH,MAAMkG,EAAIkK,KAAKpQ,GAEf,OADAmQ,EAAWpF,IAAI7E,GAAG,GACXA,GAGAmK,EAAe5E,GACN,mBAANA,GAAoB0E,EAAWrF,IAAIW,GClDtC6E,EAAiC,oBAAXlI,QACN,MAAzBA,OAAOmC,qBAEH3G,IADHwE,OAAOmC,eAAqCgG,0BAwBpCC,EACT,CAACC,EAAiBb,EAAkBc,EAAiB,QACnD,KAAOd,IAAUc,GAAK,CACpB,MAAM3K,EAAI6J,EAAO/J,YACjB4K,EAAUzK,YAAY4J,GACtBA,EAAQ7J,ICRH4K,EAAW,GAKXC,EAAU,GC7BVC,EAAS,SAASC,OAAO5L,KAAK6L,UAAUC,MAAM,OAM9CC,EAAa,UAAOJ,UAEpBK,EAAc,IAAIC,OAAO,GAAGN,KAAUI,WAUtCG,EAIX9R,YAAY+R,EAAwBzO,GAH3BrD,WAAwB,GAI/BA,KAAKqD,QAAUA,EAEf,MAAM0O,EAAwB,GACxBC,EAAgB,GAEhBC,EAASrL,SAASsL,iBACpB7O,EAAQ8O,QACR,IACA,MACA,GAIJ,IAAIC,EAAgB,EAChBC,GAAS,EACTC,EAAY,EAChB,MAAMC,QAACA,EAASC,QAAQ5R,OAACA,IAAWkR,EACpC,KAAOQ,EAAY1R,GAAQ,CACzB,MAAMc,EAAOuQ,EAAOQ,WACpB,GAAa,OAAT/Q,GAUJ,GAFA2Q,IAEsB,IAAlB3Q,EAAKoE,SAAwC,CAC/C,GAAKpE,EAAiBgR,gBAAiB,CACrC,MAAM1I,EAActI,EAAiBsI,YAC/BpJ,OAACA,GAAUoJ,EAMjB,IAAI2I,EAAQ,EACZ,IAAK,IAAI3O,EAAI,EAAGA,EAAIpD,EAAQoD,IACtB4O,EAAS5I,EAAWhG,GAAG9D,KAlDH,UAmDtByS,IAGJ,KAAOA,KAAU,GAAG,CAGlB,MAAME,EAAgBN,EAAQD,GAExBpS,EAAO4S,EAAuBC,KAAKF,GAAgB,GAMnDG,EACF9S,EAAKoI,cAlEe,QAmElB2K,EACDvR,EAAiBkH,aAAaoK,GAClCtR,EAAiBgH,gBAAgBsK,GAClC,MAAME,EAAUD,EAAevD,MAAMiC,GACrC3R,KAAKmT,MAAM9S,KAAK,CAACwM,KAAM,YAAawF,MAAAA,EAAOnS,KAAAA,EAAMqS,QAASW,IAC1DZ,GAAaY,EAAQtS,OAAS,GAGA,aAA7Bc,EAAiB0R,UACpBpB,EAAM3R,KAAKqB,GACXuQ,EAAOoB,YAAe3R,EAA6ByQ,cAEhD,GAAsB,IAAlBzQ,EAAKoE,SAAqC,CACnD,MAAMwN,EAAQ5R,EAAc4R,KAC5B,GAAIA,EAAKxM,QAAQwK,IAAW,EAAG,CAC7B,MAAM3P,EAASD,EAAKyD,WACdoN,EAAUe,EAAK5D,MAAMiC,GACrB4B,EAAYhB,EAAQ3R,OAAS,EAGnC,IAAK,IAAIoD,EAAI,EAAGA,EAAIuP,EAAWvP,IAAK,CAClC,IAAIwP,EACApL,EAAImK,EAAQvO,GAChB,GAAU,KAANoE,EACFoL,EAASC,QACJ,CACL,MAAMzL,EAAQ8K,EAAuBC,KAAK3K,GAC5B,OAAVJ,GAAkB4K,EAAS5K,EAAM,GA9Ff,WA+FpBI,EAAIA,EAAEqJ,MAAM,EAAGzJ,EAAMqK,OAASrK,EAAM,GAChCA,EAAM,GAAGyJ,MAAM,GAhGC,QAgGwB7Q,QAAUoH,EAAM,IAE9DwL,EAAS5M,SAASM,eAAekB,GAEnCzG,EAAOwE,aAAaqN,EAAQ9R,GAC5B1B,KAAKmT,MAAM9S,KAAK,CAACwM,KAAM,OAAQwF,QAASA,IAIf,KAAvBE,EAAQgB,IACV5R,EAAOwE,aAAasN,IAAgB/R,GACpCqQ,EAAc1R,KAAKqB,IAElBA,EAAc4R,KAAOf,EAAQgB,GAGhCjB,GAAaiB,QAEV,GAAsB,IAAlB7R,EAAKoE,SACd,GAAKpE,EAAiB4R,OAAShC,EAAQ,CACrC,MAAM3P,EAASD,EAAKyD,WAKS,OAAzBzD,EAAKgS,iBAA4BrB,IAAUD,IAC7CC,IACA1Q,EAAOwE,aAAasN,IAAgB/R,IAEtC0Q,EAAgBC,EAChBrS,KAAKmT,MAAM9S,KAAK,CAACwM,KAAM,OAAQwF,MAAAA,IAGN,OAArB3Q,EAAK4E,YACN5E,EAAiB4R,KAAO,IAEzBvB,EAAc1R,KAAKqB,GACnB2Q,KAEFC,QACK,CACL,IAAItO,GAAK,EACT,MAAgE,KAAxDA,EAAKtC,EAAiB4R,KAAKxM,QAAQwK,EAAQtN,EAAI,KAKrDhE,KAAKmT,MAAM9S,KAAK,CAACwM,KAAM,OAAQwF,OAAQ,IACvCC,UA9GJL,EAAOoB,YAAcrB,EAAM2B,MAqH/B,IAAK,MAAMnN,KAAKuL,EACdvL,EAAErB,WAAYsB,YAAYD,IAKhC,MAAMoM,EAAW,CAACgB,EAAaC,KAC7B,MAAMxB,EAAQuB,EAAIhT,OAASiT,EAAOjT,OAClC,OAAOyR,GAAS,GAAKuB,EAAInC,MAAMY,KAAWwB,GA4B/BC,EAAwBC,IAAuC,IAAhBA,EAAK1B,MAIpDoB,EAAe,IAAM7M,SAASoN,cAAc,IA4B5ClB,EAET;;;;;;;;;;;;;;MCtOSmB,EAMXlU,YACImU,EAAoBC,EACpB/T,GAPaJ,OAAiC,GAQhDA,KAAKkU,SAAWA,EAChBlU,KAAKmU,UAAYA,EACjBnU,KAAKI,QAAUA,EAGjBL,OAAOyS,GACL,IAAIxO,EAAI,EACR,IAAK,MAAM+P,KAAQ/T,KAAKoU,OACT/P,IAAT0P,GACFA,EAAKM,SAAS7B,EAAOxO,IAEvBA,IAEF,IAAK,MAAM+P,KAAQ/T,KAAKoU,OACT/P,IAAT0P,GACFA,EAAKO,SAKXvU,SAuCE,MAAMwU,EAAWxD,EACb/Q,KAAKkU,SAAS7Q,QAAQ8O,QAAQqC,WAAU,GACxC5N,SAAS6N,WAAWzU,KAAKkU,SAAS7Q,QAAQ8O,SAAS,GAEjDH,EAAgB,GAChBmB,EAAQnT,KAAKkU,SAASf,MAEtBlB,EAASrL,SAASsL,iBACpBqC,EACA,IACA,MACA,GACJ,IAEIR,EAFAzB,EAAY,EACZoC,EAAY,EAEZhT,EAAOuQ,EAAOQ,WAElB,KAAOH,EAAYa,EAAMvS,QAEvB,GADAmT,EAAOZ,EAAMb,GACRwB,EAAqBC,GAA1B,CASA,KAAOW,EAAYX,EAAK1B,OACtBqC,IACuB,aAAnBhT,EAAMkD,WACRoN,EAAM3R,KAAKqB,GACXuQ,EAAOoB,YAAe3R,EAA6ByQ,SAElB,QAA9BzQ,EAAOuQ,EAAOQ,cAKjBR,EAAOoB,YAAcrB,EAAM2B,MAC3BjS,EAAOuQ,EAAOQ,YAKlB,GAAkB,SAAdsB,EAAKlH,KAAiB,CACxB,MAAMkH,EAAO/T,KAAKmU,UAAUQ,qBAAqB3U,KAAKI,SACtD2T,EAAKa,gBAAgBlT,EAAMgS,iBAC3B1T,KAAKoU,EAAQ/T,KAAK0T,QAElB/T,KAAKoU,EAAQ/T,QAAQL,KAAKmU,UAAUU,2BAChCnT,EAAiBqS,EAAK7T,KAAM6T,EAAKxB,QAASvS,KAAKI,UAErDkS,SAjCEtS,KAAKoU,EAAQ/T,UAAKgE,GAClBiO,IAuCJ,OAJIvB,IACFnK,SAASkO,UAAUP,GACnBvJ,eAAe+J,QAAQR,IAElBA;;;;;;;;;;;;;GCzHX,MAAMS,EAASnM,OAAOoM,cAClBA,aAAcC,aAAa,WAAY,CAACC,WAAa/M,GAAMA,IAEzDgN,EAAgB,IAAI9D,WAMb+D,EAMXtV,YACIwS,EAA+BC,EAA4B3F,EAC3DsH,GACFnU,KAAKuS,QAAUA,EACfvS,KAAKwS,OAASA,EACdxS,KAAK6M,KAAOA,EACZ7M,KAAKmU,UAAYA,EAMnBpU,UACE,MAAMuV,EAAItV,KAAKuS,QAAQ3R,OAAS,EAChC,IAAIuM,EAAO,GACPoI,GAAmB,EAEvB,IAAK,IAAIvR,EAAI,EAAGA,EAAIsR,EAAGtR,IAAK,CAC1B,MAAMoE,EAAIpI,KAAKuS,QAAQvO,GAkBjBwR,EAAcpN,EAAEqN,YAAY,WAIlCF,GAAoBC,GAAe,GAAKD,KACG,IAAvCnN,EAAEtB,QAAQ,SAAO0O,EAAc,GAInC,MAAME,EAAiB5C,EAAuBC,KAAK3K,GAOjD+E,GANqB,OAAnBuI,EAMMtN,GAAKmN,EAAmBH,EAAgB1D,GAKxCtJ,EAAEuN,OAAO,EAAGD,EAAerD,OAASqD,EAAe,GACvDA,EAAe,GFvES,QEuEmBA,EAAe,GAC1DpE,EAIR,OADAnE,GAAQnN,KAAKuS,QAAQ+C,GACdnI,EAGTpN,qBACE,MAAMmU,EAAWtN,SAASxC,cAAc,YACxC,IAAIwD,EAAQ5H,KAAK4V,UASjB,YARevR,IAAX2Q,IAKFpN,EAAQoN,EAAOG,WAAWvN,IAE5BsM,EAAS2B,UAAYjO,EACdsM,SAWE4B,UAA0BT,EACrCtV,UACE,MAAO,QAAQmJ,MAAM0M,kBAGvB7V,qBACE,MAAMmU,EAAWhL,MAAM6M,qBACjB5D,EAAU+B,EAAS/B,QACnB6D,EAAa7D,EAAQ8D,WAG3B,OAFA9D,EAAQ1L,YAAYuP,GJ/GpB,EAAC9E,EACAb,EACAc,EAAiB,KACjB+E,EAAoB,QACnB,KAAO7F,IAAUc,GAAK,CACpB,MAAM3K,EAAI6J,EAAO/J,YACjB4K,EAAU/K,aAAakK,EAAQ6F,GAC/B7F,EAAQ7J,IIyGZ2P,CAAchE,EAAS6D,EAAWC,YAC3B/B;;;;;;;;;;;;;GCzHJ,MAAMkC,EAAexO,GAEZ,OAAVA,KACmB,iBAAVA,GAAuC,mBAAVA,GAE/ByO,EAAczO,GAClB/F,MAAMC,QAAQ8F,OAEdA,IAAUA,EAAc0O,OAAOC,iBAQ3BC,EAOXzW,YAAYsD,EAAkBnD,EAAcqS,GAF5CvS,YAAQ,EAGNA,KAAKqD,QAAUA,EACfrD,KAAKE,KAAOA,EACZF,KAAKuS,QAAUA,EACfvS,KAAKmT,MAAQ,GACb,IAAK,IAAInP,EAAI,EAAGA,EAAIuO,EAAQ3R,OAAS,EAAGoD,IACrChE,KAAKmT,MAA0BnP,GAAKhE,KAAKyW,cAOpC1W,cACR,OAAO,IAAI2W,EAAc1W,MAGjBD,YACR,MAAMwS,EAAUvS,KAAKuS,QACf+C,EAAI/C,EAAQ3R,OAAS,EACrBuS,EAAQnT,KAAKmT,MAenB,GAAU,IAANmC,GAA0B,KAAf/C,EAAQ,IAA4B,KAAfA,EAAQ,GAAW,CACrD,MAAM/O,EAAI2P,EAAM,GAAGvL,MACnB,GAAiB,iBAANpE,EACT,OAAO+N,OAAO/N,GAEhB,GAAiB,iBAANA,IAAmB6S,EAAW7S,GACvC,OAAOA,EAGX,IAAImT,EAAO,GAEX,IAAK,IAAI3S,EAAI,EAAGA,EAAIsR,EAAGtR,IAAK,CAC1B2S,GAAQpE,EAAQvO,GAChB,MAAM+P,EAAOZ,EAAMnP,GACnB,QAAaK,IAAT0P,EAAoB,CACtB,MAAMvQ,EAAIuQ,EAAKnM,MACf,GAAIwO,EAAY5S,KAAO6S,EAAW7S,GAChCmT,GAAqB,iBAANnT,EAAiBA,EAAI+N,OAAO/N,QAE3C,IAAK,MAAMoT,KAAKpT,EACdmT,GAAqB,iBAANC,EAAiBA,EAAIrF,OAAOqF,IAOnD,OADAD,GAAQpE,EAAQ+C,GACTqB,EAGT5W,SACMC,KAAK6W,QACP7W,KAAK6W,OAAQ,EACb7W,KAAKqD,QAAQoF,aAAazI,KAAKE,KAAMF,KAAK8W,qBAQnCJ,EAIX3W,YAAYgX,GAFZ/W,gBAAiBqE,EAGfrE,KAAK+W,UAAYA,EAGnBhX,SAAS6H,GACHA,IAAUwJ,GAAcgF,EAAYxO,IAAUA,IAAU5H,KAAK4H,QAC/D5H,KAAK4H,MAAQA,EAIRkJ,EAAYlJ,KACf5H,KAAK+W,UAAUF,OAAQ,IAK7B9W,SACE,KAAO+Q,EAAY9Q,KAAK4H,QAAQ,CAC9B,MAAMsF,EAAYlN,KAAK4H,MACvB5H,KAAK4H,MAAQwJ,EACblE,EAAUlN,MAERA,KAAK4H,QAAUwJ,GAGnBpR,KAAK+W,UAAUzC,gBAYN0C,GAOXjX,YAAYK,GAHZJ,gBAAiBqE,EACTrE,YAA0BqE,EAGhCrE,KAAKI,QAAUA,EAQjBL,WAAWmR,GACTlR,KAAKiX,UAAY/F,EAAU3K,YAAYkN,KACvCzT,KAAKkX,QAAUhG,EAAU3K,YAAYkN,KAUvC1T,gBAAgB2D,GACd1D,KAAKiX,UAAYvT,EACjB1D,KAAKkX,QAAUxT,EAAI4C,YAQrBvG,eAAegU,GACbA,EAAKoD,EAASnX,KAAKiX,UAAYxD,KAC/BM,EAAKoD,EAASnX,KAAKkX,QAAUzD,KAQ/B1T,gBAAgB2D,GACdA,EAAIyT,EAASnX,KAAKiX,UAAYxD,KAC9BzT,KAAKkX,QAAUxT,EAAIwT,QACnBxT,EAAIwT,QAAUlX,KAAKiX,UAGrBlX,SAAS6H,GACP5H,KAAKoX,EAAiBxP,EAGxB7H,SACE,GAAkC,OAA9BC,KAAKiX,UAAU9R,WACjB,OAEF,KAAO2L,EAAY9Q,KAAKoX,IAAiB,CACvC,MAAMlK,EAAYlN,KAAKoX,EACvBpX,KAAKoX,EAAiBhG,EACtBlE,EAAUlN,MAEZ,MAAM4H,EAAQ5H,KAAKoX,EACfxP,IAAUwJ,IAGVgF,EAAYxO,GACVA,IAAU5H,KAAK4H,OACjB5H,KAAKqX,EAAazP,GAEXA,aAAiByN,EAC1BrV,KAAKsX,EAAuB1P,GACnBA,aAAiB2P,KAC1BvX,KAAKwX,EAAa5P,GACTyO,EAAWzO,GACpB5H,KAAKyX,EAAiB7P,GACbA,IAAUyJ,GACnBrR,KAAK4H,MAAQyJ,EACbrR,KAAK0X,SAGL1X,KAAKqX,EAAazP,IAId7H,EAAS2B,GACf1B,KAAKkX,QAAQ/R,WAAYgB,aAAazE,EAAM1B,KAAKkX,SAG3CnX,EAAa6H,GACf5H,KAAK4H,QAAUA,IAGnB5H,KAAK0X,QACL1X,KAAKmX,EAASvP,GACd5H,KAAK4H,MAAQA,GAGP7H,EAAa6H,GACnB,MAAMlG,EAAO1B,KAAKiX,UAAU3Q,YAItBqR,EACe,iBAJrB/P,EAAiB,MAATA,EAAgB,GAAKA,GAIGA,EAAQ2J,OAAO3J,GAC3ClG,IAAS1B,KAAKkX,QAAQxD,iBACJ,IAAlBhS,EAAKoE,SAINpE,EAAc4R,KAAOqE,EAEtB3X,KAAKwX,EAAa5Q,SAASM,eAAeyQ,IAE5C3X,KAAK4H,MAAQA,EAGP7H,EAAuB6H,GAC7B,MAAMsM,EAAWlU,KAAKI,QAAQwX,gBAAgBhQ,GAC9C,GAAI5H,KAAK4H,iBAAiBqM,GACtBjU,KAAK4H,MAAMsM,WAAaA,EAC1BlU,KAAK4H,MAAM9C,OAAO8C,EAAM4K,YACnB,CAKL,MAAMqF,EACF,IAAI5D,EAAiBC,EAAUtM,EAAMuM,UAAWnU,KAAKI,SACnDmU,EAAWsD,EAASC,SAC1BD,EAAS/S,OAAO8C,EAAM4K,QACtBxS,KAAKwX,EAAajD,GAClBvU,KAAK4H,MAAQiQ,GAIT9X,EAAiB6H,GAWlB/F,MAAMC,QAAQ9B,KAAK4H,SACtB5H,KAAK4H,MAAQ,GACb5H,KAAK0X,SAKP,MAAMK,EAAY/X,KAAK4H,MACvB,IACIoQ,EADA1F,EAAY,EAGhB,IAAK,MAAMrI,KAAQrC,EAEjBoQ,EAAWD,EAAUzF,QAGJjO,IAAb2T,IACFA,EAAW,IAAIhB,GAAShX,KAAKI,SAC7B2X,EAAU1X,KAAK2X,GACG,IAAd1F,EACF0F,EAASC,eAAejY,MAExBgY,EAASE,gBAAgBH,EAAUzF,EAAY,KAGnD0F,EAAS3D,SAASpK,GAClB+N,EAAS1D,SACThC,IAGEA,EAAYyF,EAAUnX,SAExBmX,EAAUnX,OAAS0R,EACnBtS,KAAK0X,MAAMM,GAAYA,EAASd,UAIpCnX,MAAMkX,EAAkBjX,KAAKiX,WAC3BhG,EACIjR,KAAKiX,UAAU9R,WAAa8R,EAAU3Q,YAActG,KAAKkX,gBAWpDiB,GAOXpY,YAAYsD,EAAkBnD,EAAcqS,GAC1C,GAJFvS,gBAAiBqE,EACTrE,YAA0BqE,EAGT,IAAnBkO,EAAQ3R,QAA+B,KAAf2R,EAAQ,IAA4B,KAAfA,EAAQ,GACvD,MAAM,IAAIjO,MACN,2DAENtE,KAAKqD,QAAUA,EACfrD,KAAKE,KAAOA,EACZF,KAAKuS,QAAUA,EAGjBxS,SAAS6H,GACP5H,KAAKoX,EAAiBxP,EAGxB7H,SACE,KAAO+Q,EAAY9Q,KAAKoX,IAAiB,CACvC,MAAMlK,EAAYlN,KAAKoX,EACvBpX,KAAKoX,EAAiBhG,EACtBlE,EAAUlN,MAEZ,GAAIA,KAAKoX,IAAmBhG,EAC1B,OAEF,MAAMxJ,IAAU5H,KAAKoX,EACjBpX,KAAK4H,QAAUA,IACbA,EACF5H,KAAKqD,QAAQoF,aAAazI,KAAKE,KAAM,IAErCF,KAAKqD,QAAQqF,gBAAgB1I,KAAKE,MAEpCF,KAAK4H,MAAQA,GAEf5H,KAAKoX,EAAiBhG,SAabgH,WAA0B5B,EAGrCzW,YAAYsD,EAAkBnD,EAAcqS,GAC1CrJ,MAAM7F,EAASnD,EAAMqS,GACrBvS,KAAKqY,OACmB,IAAnB9F,EAAQ3R,QAA+B,KAAf2R,EAAQ,IAA4B,KAAfA,EAAQ,GAGlDxS,cACR,OAAO,IAAIuY,GAAatY,MAGhBD,YACR,OAAIC,KAAKqY,OACArY,KAAKmT,MAAM,GAAGvL,MAEhBsB,MAAM4N,YAGf/W,SACMC,KAAK6W,QACP7W,KAAK6W,OAAQ,EAEZ7W,KAAKqD,QAAgBrD,KAAKE,MAAQF,KAAK8W,oBAKjCwB,WAAqB5B,GAMlC,IAAI6B,IAAwB,EAI5B,MACE,IACE,MAAMnY,EAAU,CACdoY,cAEE,OADAD,IAAwB,GACjB,IAIX1P,OAAO2H,iBAAiB,OAAQpQ,EAAgBA,GAEhDyI,OAAO4P,oBAAoB,OAAQrY,EAAgBA,GACnD,MAAOsY,MAZX,SAmBaC,GASX5Y,YAAYsD,EAAkBuV,EAAmBC,GALjD7Y,gBAA2CqE,EAEnCrE,YAAoDqE,EAI1DrE,KAAKqD,QAAUA,EACfrD,KAAK4Y,UAAYA,EACjB5Y,KAAK6Y,aAAeA,EACpB7Y,KAAK8Y,EAAsBnV,GAAM3D,KAAK+Y,YAAYpV,GAGpD5D,SAAS6H,GACP5H,KAAKoX,EAAiBxP,EAGxB7H,SACE,KAAO+Q,EAAY9Q,KAAKoX,IAAiB,CACvC,MAAMlK,EAAYlN,KAAKoX,EACvBpX,KAAKoX,EAAiBhG,EACtBlE,EAAUlN,MAEZ,GAAIA,KAAKoX,IAAmBhG,EAC1B,OAGF,MAAM4H,EAAchZ,KAAKoX,EACnB6B,EAAcjZ,KAAK4H,MACnBsR,EAAsC,MAAfF,GACV,MAAfC,IACKD,EAAYR,UAAYS,EAAYT,SACpCQ,EAAYnY,OAASoY,EAAYpY,MACjCmY,EAAYG,UAAYF,EAAYE,SACvCC,EACa,MAAfJ,IAAuC,MAAfC,GAAuBC,GAE/CA,GACFlZ,KAAKqD,QAAQoV,oBACTzY,KAAK4Y,UAAW5Y,KAAK8Y,EAAoB9Y,KAAKqZ,GAEhDD,IACFpZ,KAAKqZ,EAAYC,GAAWN,GAC5BhZ,KAAKqD,QAAQmN,iBACTxQ,KAAK4Y,UAAW5Y,KAAK8Y,EAAoB9Y,KAAKqZ,IAEpDrZ,KAAK4H,MAAQoR,EACbhZ,KAAKoX,EAAiBhG,EAGxBrR,YAAY4M,GACgB,mBAAf3M,KAAK4H,MACd5H,KAAK4H,MAAM2R,KAAKvZ,KAAK6Y,cAAgB7Y,KAAKqD,QAASsJ,GAElD3M,KAAK4H,MAA8BmR,YAAYpM,IAQtD,MAAM2M,GAAcpN,GAAyCA,IACxDqM,GACI,CAACC,QAAStM,EAAEsM,QAASW,QAASjN,EAAEiN,QAAStY,KAAMqL,EAAErL,MACjDqL,EAAEsM;;;;;;;;;;;;;ICteJ,MAAMgB,GAA2B,UA1BtCzZ,2BACIsD,EAAkBnD,EAAcqS,EAChCnS,GACF,MAAMqZ,EAASvZ,EAAK,GACpB,GAAe,MAAXuZ,EAAgB,CAElB,OADkB,IAAIrB,GAAkB/U,EAASnD,EAAKuR,MAAM,GAAIc,GAC/CY,MAEnB,GAAe,MAAXsG,EACF,MAAO,CAAC,IAAId,GAAUtV,EAASnD,EAAKuR,MAAM,GAAIrR,EAAQyY,eAExD,GAAe,MAAXY,EACF,MAAO,CAAC,IAAItB,GAAqB9U,EAASnD,EAAKuR,MAAM,GAAIc,IAG3D,OADkB,IAAIiE,EAAmBnT,EAASnD,EAAMqS,GACvCY,MAMnBpT,qBAAqBK,GACnB,OAAO,IAAI4W,GAAS5W;;;;;;;;;;;;;YCXRwX,GAAgB9F,GAC9B,IAAI4H,EAAgBC,GAAexP,IAAI2H,EAAOjF,WACxBxI,IAAlBqV,IACFA,EAAgB,CACdE,aAAc,IAAIpV,QAClBqV,UAAW,IAAIC,KAEjBH,GAAenO,IAAIsG,EAAOjF,KAAM6M,IAGlC,IAAIxF,EAAWwF,EAAcE,aAAazP,IAAI2H,EAAOS,SACrD,QAAiBlO,IAAb6P,EACF,OAAOA,EAKT,MAAM1R,EAAMsP,EAAOS,QAAQwH,KAAKzI,GAahC,OAVA4C,EAAWwF,EAAcG,UAAU1P,IAAI3H,QACtB6B,IAAb6P,IAEFA,EAAW,IAAIrC,EAASC,EAAQA,EAAOiE,sBAEvC2D,EAAcG,UAAUrO,IAAIhJ,EAAK0R,IAInCwF,EAAcE,aAAapO,IAAIsG,EAAOS,QAAS2B,GACxCA,EAkBF,MAAMyF,GAAiB,IAAIG,ICxErB3G,GAAQ,IAAI3O,QAiBZrB,GACT,CAAC2O,EACAZ,EACA9Q,KACC,IAAI2T,EAAOZ,GAAMhJ,IAAI+G,QACR7M,IAAT0P,IACF9C,EAAYC,EAAWA,EAAU+E,YACjC9C,GAAM3H,IAAI0F,EAAW6C,EAAO,IAAIiD,kBACTY,gBAAAA,IACGxX,KAE1B2T,EAAKiG,WAAW9I,IAElB6C,EAAKM,SAASvC,GACdiC,EAAKO;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOW,oBAAXzL,SACRA,OAAwB,kBAAMA,OAAwB,gBAAI,KAAKxI,KAAK,eAO1D8M,GAAO,CAACoF,KAAkCC,IACnD,IAAI6C,EAAe9C,EAASC,EAAQ,OAAQgH,IAMnCS,GAAM,CAAC1H,KAAkCC,IAClD,IAAIsD,EAAkBvD,EAASC,EAAQ,MAAOgH;;;;;;;;;;;;;IC9C5CU,GAAiB,IAAI1V,QASd2V,GAAajN,GAAWtF,GAAoBmM,IACvD,KAAMA,aAAgBiD,IACpB,MAAM,IAAI1S,MAAM,gDAGlB,MAAM8V,EAAgBF,GAAe/P,IAAI4J,GAEzC,QAAsB1P,IAAlB+V,GAA+BhE,EAAYxO,IAC3CA,IAAUwS,EAAcxS,OAASmM,EAAKnM,QAAUwS,EAAc7F,SAChE,OAGF,MAAML,EAAWtN,SAASxC,cAAc,YACxC8P,EAAS2B,UAAYjO,EACrB,MAAM2M,EAAW3N,SAAS6N,WAAWP,EAAS/B,SAAS,GACvD4B,EAAKM,SAASE,GACd2F,GAAe1O,IAAIuI,EAAM,CAACnM,MAAAA,EAAO2M,SAAAA,OChDnC,SAAS8F,GAAQhX,EAASpB,EAAMN,GACV,iBAATM,EACTkB,GAAOgK,EAAI,GAAGgN,GAAWlY,KAASoB,GACzBpB,aAAgBoT,EACzBlS,GAAOlB,EAAMoB,IAEboB,EAAcpB,EAASpB,EAAMN,GAC7BwR,GAAMmH,OAAOjX,UAIXsH,GAAMuC,GAAU,CAACP,KAAUlM,IAAUsT,IACzC,KAAMA,aAAgB4E,IACpB,MAAM,IAAIrU,MAAM,6CAElB,IAAIjB,QAAEA,EAAOuV,UAAEA,GAAc7E,EAC7B,MAAMwG,EAAe,KACnB,IAAI1X,EAAYQ,EAAoB,WACpC,MAAQR,GAAaQ,GACnBA,EAAUA,EAAQkH,cAClB1H,EAAYQ,GAAWA,EAAoB,WAG7C,OADA3C,QAAQC,SAASkC,EAAW,wBACrBA,GAEY,iBAAV8J,EACTtJ,EAAQ,KAAKuV,KAAejV,GAAK4W,IAAe5P,IAAIgC,KAAUlM,EAAMkD,GAC1C,mBAAVgJ,IAChBtJ,EAAQ,KAAKuV,KAAejV,GAAK4W,IAAe9W,SAASkJ,EAAM4N,IAAexX,SAAUtC,EAAMkD,QCvBlGtC,EAAI+C,cAAgBA,EACpB/C,EAAI8B,OAASA,GACb9B,EAAI0H,SAAWA,EAIO,iBAAXF,SACTA,OAAa,KAAIsE,GACjBtE,OAAY,IAAIoR,GAChBpR,OAAY,IAAI8B"}