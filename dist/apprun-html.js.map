{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/app.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app_1","__importDefault","app","default","vdom_1","component_1","Component","decorator_1","on","update","event","router_1","ROUTER_EVENT","ROUTER_404_EVENT","createElement","render","Fragment","start","element","model","view","options","opts","assign","global_event","component","rendered","mount","_","route","url","document","addEventListener","window","onpopstate","location","hash","props","startsWith","event_1","substring","e","run","name_1","state","__assign","target","setState","App","_events","fn","push","off","subscribers","filter","sub","length","_this","args","_i","arguments","console","assert","delay","apply","once","_t","clearTimeout","setTimeout","global","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","descriptor","g","Function","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","undefined","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","insertBefore","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","createTextNode","isSvg","JSON","stringify","createElementNS","cached","oldProps","newProps","mergeProps","style","cssText","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","removeAttribute","updateElement","vdom_my_1","html","_idx","createComponent","idx","map","vdom","id","__componentCache","mounted","Promise","__importStar","componentCache","components","_app","_actions","_history","_history_idx","renderState","h","concat","getElementById","unload","tracking_id","Date","valueOf","toString","observer_1","MutationObserver","changes","_a","removedNodes","oldValue","from","disconnect","observe","childList","subtree","attributes","attributeOldValue","attributeFilter","history","then","catch","err","error","_state","enable_history","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","split","trim","unmount","rest","slice","_b","name_2","apprun_1","vdom_html_1","morphdom_1","firstChild","cloneNode","innerHTML","range","__webpack_exports__","NS_XHTML","doc","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","selected","selectedIndex","INPUT","TEXTAREA","newValue","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphChildren","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","hasAttributeNS","removeAttributeNS"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import app from './app';\r\nimport { createElement, render, Fragment } from './vdom';\r\nimport { Component } from './component';\r\nimport { VNode, View, Action, Update } from './types';\r\nimport { on, update } from './decorator';\r\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\r\n\r\nexport interface IApp {\r\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\r\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\r\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\r\n  off(name: string, fn: (...args: any[]) => void): void;\r\n  run(name: string, ...args: any[]): number;\r\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\r\n  render(element: HTMLElement, node: VNode): void;\r\n  Fragment(props, ...children): any[];\r\n  route?: Route;\r\n}\r\n\r\napp.createElement = createElement;\r\napp.render = render;\r\napp.Fragment = Fragment;\r\n\r\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\r\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\r\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\r\n    const component = new Component<T>(model, view, update);\r\n    if (options && options.rendered) component.rendered = options.rendered;\r\n    component.mount(element, opts);\r\n    return component;\r\n};\r\n\r\napp.on(ROUTER_EVENT, _ => {/* Intentionally empty */});\r\napp.on('#', _ => {/* Intentionally empty */});\r\napp['route'] = route;\r\napp.on('route', url => app['route'] && app['route'](url));\r\n\r\nif (typeof document === 'object') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (app['route'] === route) {\r\n      window.onpopstate = () => route(location.hash);\r\n      route(location.hash);\r\n    }\r\n  });\r\n}\r\n\r\napp.on('$', (key:string, props:[], component: Component) => {\r\n  if (key.startsWith('$on')) {\r\n    const event = props[key];\r\n    key = key.substring(1)\r\n    if (typeof event === 'boolean') {\r\n      props[key] = e => component.run(key, e);\r\n    } else if (typeof event === 'string') {\r\n      props[key] = e => component.run(event, e)\r\n    }\r\n  } else if (key === '$bind') {\r\n    const name = props[key];\r\n    props['oninput'] = e => {\r\n      if (typeof name === 'string') {\r\n        const state = { ...component['state'] };\r\n        state[name] = e.target.value;\r\n        component.setState(state);\r\n      } else {\r\n        component.setState(e.target.value);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\r\nexport { app, Component, View, Action, Update, on, update };\r\nexport { update as event };\r\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\r\nexport default app as IApp;\r\n\r\nif (typeof window === 'object') {\r\n  window['Component'] = Component;\r\n}\r\n\r\napp.on('debug', _ => 0);\r\n","export class App {\r\n\r\n  private _events: Object;\r\n\r\n  public start;\r\n  public createElement;\r\n  public render;\r\n  public Fragment;\r\n\r\n  constructor() {\r\n    this._events = {};\r\n  }\r\n\r\n  on(name: string, fn: (...args) => void, options: any = {}): void {\r\n    this._events[name] = this._events[name] || [];\r\n    this._events[name].push({ fn: fn, options: options });\r\n  }\r\n\r\n  off(name: string, fn: (...args) => void): void {\r\n    let subscribers = this._events[name];\r\n    if (subscribers) {\r\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\r\n      if (subscribers.length) this._events[name] = subscribers;\r\n      else delete this._events[name]\r\n    }\r\n  }\r\n\r\n  run(name: string, ...args): number {\r\n    let subscribers = this._events[name];\r\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\r\n    if (subscribers) {\r\n      subscribers = subscribers.filter((sub) => {\r\n        const { fn, options } = sub;\r\n        if (options.delay) {\r\n          this.delay(name, fn, args, options);\r\n        } else {\r\n          fn.apply(this, args);\r\n        }\r\n        return !sub.options.once;\r\n      });\r\n      if (subscribers.length) this._events[name] = subscribers;\r\n      else delete this._events[name]\r\n    }\r\n\r\n    return subscribers ? subscribers.length : 0;\r\n  }\r\n\r\n  once(name: string, fn, options: any = {}): void {\r\n    this.on(name, fn, { ...options, once: true });\r\n  }\r\n\r\n  private delay(name, fn, args, options): void {\r\n    if (options._t) clearTimeout(options._t);\r\n    options._t = setTimeout(() => {\r\n      clearTimeout(options._t);\r\n      fn.apply(this, args);\r\n    }, options.delay);\r\n  }\r\n}\r\n\r\nlet app: App;\r\ndeclare var global;\r\nconst root = global || window;\r\nif (root['app'] && root['app']['start']) {\r\n  app = root['app'];\r\n} else {\r\n  app = new App();\r\n  root['app'] = app;\r\n}\r\nexport default app;\r\n","export const Reflect = {\r\n\r\n  meta: new WeakMap(),\r\n\r\n  defineMetadata(metadataKey, metadataValue, target) {\r\n    if (!this.meta.has(target)) this.meta.set(target, {});\r\n    this.meta.get(target)[metadataKey] = metadataValue;\r\n  },\r\n\r\n  getMetadataKeys(target) {\r\n    target = Object.getPrototypeOf(target);\r\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\r\n  },\r\n\r\n  getMetadata(metadataKey, target) {\r\n    target = Object.getPrototypeOf(target);\r\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\r\n  }\r\n}\r\n\r\nexport function update(name?: string, options: any = {}) {\r\n  return (target: any, key: string, descriptor: any) => {\r\n    name = name || key;\r\n    Reflect.defineMetadata(`apprun-update:${name}`,\r\n      { name, key, options }, target);\r\n    return descriptor;\r\n  }\r\n}\r\n\r\nexport function on(name?: string, options: any = {}) {\r\n  return function (target: any, key: string) {\r\n    name = name || key;\r\n    Reflect.defineMetadata(`apprun-update:${name}`,\r\n        { name, key, options }, target)\r\n  }\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\r\nimport { VNode } from './types';\r\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\r\n\r\nconst ATTR_PROPS = '_props';\r\n\r\nfunction collect(children) {\r\n  const ch = [];\r\n  const push = (c) => {\r\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\r\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\r\n    }\r\n  }\r\n  children && children.forEach(c => {\r\n    if (Array.isArray(c)) {\r\n      c.forEach(i => push(i));\r\n    } else {\r\n      push(c);\r\n    }\r\n  });\r\n  return ch;\r\n}\r\n\r\nexport function createElement(tag: string | Function, props?: {}, ...children) {\r\n  const ch = collect(children);\r\n  if (typeof tag === 'string') return { tag, props, children: ch };\r\n  else if (tag === undefined && children) return ch; // JSX fragments\r\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\r\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\r\n  }\r\n  else\r\n    return tag(props, ch);\r\n};\r\n\r\nconst keyCache = {};\r\n\r\nexport const updateElement = render;\r\n\r\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\r\n  // console.log('render', element, node);\r\n  // tslint:disable-next-line\r\n  if (nodes == null) return;\r\n\r\n  nodes = createComponent(nodes, parent);\r\n\r\n  if (!element) return;\r\n  if (Array.isArray(nodes)) {\r\n    updateChildren(element, nodes);\r\n  } else {\r\n    updateChildren(element, [nodes]);\r\n  }\r\n}\r\n\r\nfunction same(el: Element, node: VNode) {\r\n  // if (!el || !node) return false;\r\n  const key1 = el.nodeName;\r\n  const key2 = `${node.tag || ''}`;\r\n  return key1.toUpperCase() === key2.toUpperCase();\r\n}\r\n\r\nfunction update(element: Element, node: VNode) {\r\n  console.assert(!!element);\r\n  //console.log('update', element, node);\r\n  if (!same(element, node)) {\r\n    element.parentNode.replaceChild(create(node), element);\r\n    return;\r\n  }\r\n  updateChildren(element, node.children);\r\n  updateProps(element, node.props);\r\n}\r\n\r\nfunction updateChildren(element, children) {\r\n  const len = Math.min(element.childNodes.length, children.length);\r\n  for (let i = 0; i < len; i++) {\r\n    const child = children[i];\r\n    const el = element.childNodes[i];\r\n    if (typeof child === 'string') {\r\n      if (el.textContent !== child) {\r\n        if (el.nodeType === 3) {\r\n          el.textContent = child\r\n        } else {\r\n          element.replaceChild(createText(child), el);\r\n        }\r\n      }\r\n    } else {\r\n      const key = child.props && child.props['key'];\r\n      if (key) {\r\n        if (el.key === key) {\r\n          update(element.childNodes[i], child);\r\n        } else {\r\n          const old = keyCache[key];\r\n          if (old) {\r\n            element.insertBefore(old, el);\r\n            element.appendChild(el);\r\n            update(element.childNodes[i], child);\r\n          } else {\r\n            element.insertBefore(create(child), el);\r\n          }\r\n        }\r\n      } else {\r\n        update(element.childNodes[i], child);\r\n      }\r\n    }\r\n  }\r\n\r\n  let n = element.childNodes.length;\r\n  while (n > len) {\r\n    element.removeChild(element.lastChild);\r\n    n--;\r\n  }\r\n\r\n  if (children.length > len) {\r\n    const d = document.createDocumentFragment();\r\n    for (let i = len; i < children.length; i++) {\r\n      d.appendChild(create(children[i]));\r\n    }\r\n    element.appendChild(d);\r\n  }\r\n}\r\n\r\nfunction createText(node) {\r\n  if (node.indexOf('_html:') === 0) { // ?\r\n    const div = document.createElement('div');\r\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\r\n    return div;\r\n  } else {\r\n    return document.createTextNode(node);\r\n  }\r\n}\r\n\r\nfunction create(node: VNode | string, isSvg = false): Element {\r\n  console.assert(node !== null && node !== undefined);\r\n  // console.log('create', node, typeof node);\r\n\r\n  if (typeof node === \"string\") return createText(node);\r\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\r\n  isSvg = isSvg || node.tag === \"svg\";\r\n  const element = isSvg\r\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\r\n    : document.createElement(node.tag);\r\n\r\n  updateProps(element, node.props);\r\n\r\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\r\n\r\n  return element\r\n}\r\n\r\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\r\n  newProps['class'] = newProps['class'] || newProps['className'];\r\n  delete newProps['className'];\r\n  const props = {};\r\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\r\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\r\n  return props;\r\n}\r\n\r\nfunction updateProps(element: Element, props: {}) {\r\n  console.assert(!!element);\r\n  // console.log('updateProps', element, props);\r\n  const cached = element[ATTR_PROPS] || {};\r\n  props = mergeProps(cached, props || {});\r\n  element[ATTR_PROPS] = props;\r\n  for (const name in props) {\r\n    const value = props[name];\r\n    // if (cached[name] === value) continue;\r\n    // console.log('updateProps', name, value);\r\n    if (name === 'style') {\r\n      if (element.style.cssText) element.style.cssText = '';\r\n      for (const s in value) {\r\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\r\n      }\r\n    } else if (name.startsWith('data-')) {\r\n      const dname = name.substring(5);\r\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\r\n      if (element.dataset[cname] !== value) {\r\n        if (value || value === \"\") element.dataset[cname] = value;\r\n        else delete element.dataset[cname];\r\n      }\r\n    } else if (name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\r\n      element instanceof SVGElement) {\r\n      if (element.getAttribute(name) !== value) {\r\n        if (value) element.setAttribute(name, value);\r\n        else element.removeAttribute(name);\r\n      }\r\n    } else if (element[name] !== value) {\r\n      element[name] = value;\r\n    }\r\n    if (name === 'key' && value) keyCache[value] = element;\r\n  }\r\n}\r\n\r\nexport function Fragment(props, ...children): any[] {\r\n  return collect(children);\r\n}","import { createElement, updateElement, Fragment } from './vdom-my';\r\nexport function render(element, html, parent?) {\r\n  updateElement(element, html, parent);\r\n}\r\nexport { createElement, Fragment };\r\n\r\n\r\n","import app from './app';\r\n\r\nfunction render(node, parent, idx) {\r\n  const { tag, props, children } = node;\r\n\r\n  let id = props && props['id'];\r\n  let key = `_${idx}_`\r\n  if (!id) {\r\n    id = `_${idx}_`;\r\n  } else {\r\n    key = `_${id}_`;\r\n  }\r\n\r\n  if (!parent.__componentCache) parent.__componentCache = {};\r\n  let component = parent.__componentCache[key];\r\n  if (!component) {\r\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\r\n  }\r\n  component.mounted && component.mounted(props, children);\r\n  const state = component.state;\r\n  let vdom = '';\r\n  if (!(state instanceof Promise) && component.view) {\r\n    vdom = component.view(state, props);\r\n    component.rendered && setTimeout(() => component.rendered(state, props));\r\n  }\r\n  return <section {...props} id={id}>{vdom}</section>;\r\n}\r\n\r\nlet _idx = 0;\r\nfunction createComponent(node, parent, idx = 0) {\r\n  if (idx === 0) _idx = 0;\r\n  if (typeof node === 'string') return node;\r\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx++));\r\n  let vdom = node;\r\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, _idx++);\r\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, _idx++));\r\n  return vdom;\r\n }\r\n\r\nexport default createComponent;\r\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          app.run('$', key, props, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.createElement = h;\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        const observer = new MutationObserver(changes => {\r\n          const { removedNodes, oldValue } = changes[0];\r\n          if (oldValue === this.tracking_id || Array.from(removedNodes).indexOf(el) >=0){\r\n            this.unload();\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        if (el.parentNode) observer.observe(el.parentNode, {\r\n          childList: true, subtree: true,\r\n          attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n        });\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] != null ? this['model'] : {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\r\n\r\nexport type Route = (url: string, ...args: any[]) => any;\r\n\r\nexport const ROUTER_EVENT: string = '//';\r\nexport const ROUTER_404_EVENT: string = '///';\r\n\r\nexport const route: Route = (url: string) => {\r\n  if (!url) url = '#';\r\n  if (url.startsWith('#')) {\r\n    const [name, ...rest] = url.split('/');\r\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\r\n    app.run(ROUTER_EVENT, name, ...rest);\r\n  } else if (url.startsWith('/')) {\r\n    const [_, name, ...rest] = url.split('/');\r\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\r\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\r\n  } else {\r\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\r\n    app.run(ROUTER_EVENT, url);\r\n  }\r\n}\r\nexport default route;","import app, { Component, View, Action, Update, on, update } from './apprun'\r\nimport { createElement, render, Fragment } from './vdom-html';\r\n\r\napp.createElement = createElement;\r\napp.render = render;\r\napp.Fragment = Fragment;\r\n\r\nexport default app;\r\nexport { app, Component, View, Action, Update, on, update };","import { createElement, updateElement, Fragment } from './vdom-my';\r\nimport morphdom from 'morphdom';\r\n\r\nexport function render(element, html, parent?) {\r\n  if (typeof html === 'string') {\r\n    html = html.trim();\r\n    if (element.firstChild) {\r\n      const el = element.cloneNode(false);\r\n      el.innerHTML = html;\r\n      morphdom(element, el);\r\n    } else {\r\n      element.innerHTML = html;\r\n    }\r\n  } else {\r\n    updateElement(element, html, parent);\r\n  }\r\n}\r\nexport { createElement, Fragment };\r\n\r\n","function morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // update attributes on original DOM element\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!toNode.hasAttribute(attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphChildren(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphChildren(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                // walk the children\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    // walk the fromNode children all the way through\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (fromNextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's move the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    // MORPH\n                                    morphChildren(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    } // END: while(curFromNodeChild) {}\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        // MORPH\n                        morphChildren(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphChildren(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n"],"sourceRoot":""}