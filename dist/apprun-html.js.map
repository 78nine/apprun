{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","App","_events","on","fn","options","push","run","_this","args","_i","arguments","length","subscribers","console","assert","filter","sub","delay","apply","once","_t","clearTimeout","setTimeout","default","app_1","vdom_1","component_1","Component","router_1","decorator_1","update","event","createElement","render","Fragment","start","element","model","view","opts","assign","global_event","component","rendered","mount","_app","global","window","document","addEventListener","_","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","key","descriptor","action","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","id","idx","keyCache","nodes","updateChildren","node","firstChild","appendChild","create","el","nodeName","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","name_1","a","b","mergeProps","style","cssText","startsWith","dname","dataset","updateElement","ROUTER_EVENT","Router","hash","route","onpopstate","e","location","url","_a","split","rest","slice","concat","state","_history","_history_idx","__assign","renderState","html","vdom","getElementById","setState","Promise","then","catch","err","error","history","enable_history","callback","prev","next","add_actions","is_global_event","add_action","newState","actions","all","trim","cache","componentClass","vdom_my_1","g","Function","eval","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","setAttribute","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","attributes","localName","getAttributeNS","setAttributeNS","getAttribute","specified","removeAttributeNS","morph","apprun_1","vdom_html_1"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    // if (options.debug) console.log('on: ' + name);\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  run(name: string, ...args) {\n    const subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) this._events[name] = subscribers.filter((sub) => {\n      let { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        // if (options.debug) console.log('run: ' + name, args);\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n  }\n\n  once(name: string, fn) { this.on(name, fn); }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      // if (options.debug) console.log(`run-delay ${options.delay}:` + name, args);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nexport default new App();\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport Router from './router';\nimport { on, update } from './decorator';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nlet _app: IApp = app;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  _app = root['app'];\n} else {\n  root['app'] = _app;\n  if (typeof document === 'object') document.addEventListener(\"DOMContentLoaded\", () => new Router());\n}\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport { update as event };\nexport default _app;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = `${key}${name ? ',' + name : ''}`;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, action: [descriptor.value, options] }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = `${key}${name ? ',' + name : ''}`;    \n    Reflect.defineMetadata(`apprun-update:${name}`, { name, key }, target)\n  }\n}\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '') {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    const id = props && props['id'] || `_${tag.name}_${++idx}`;\n    return createComponent(tag, id, props);\n  }\n  else\n    return tag(props, ch);\n};\n\nlet idx = 0;\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[]) {\n  // console.log('render', element, node);\n  idx = 0;\n  if (nodes==null || !element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    const node = nodes;\n    if (!element.firstChild) {\n      element.appendChild(create(node));\n    } else {\n      update(element.firstChild, node);\n    }\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(child), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n        if (element.dataset[dname] !== value) element.dataset[dname] = value;\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\napp.on('//', _ => { });\napp.on('#', _ => { });\n\nexport default class Router {\n\n  route(url: string) {\n    if (!url) url = '#';\n    if (url.indexOf('/') > 0) {\n      const [name, ...rest] = url.split('/');\n      app.run(name, ...rest);\n      app.run(ROUTER_EVENT, name, ...rest);\n    } else {\n      app.run(url);\n      app.run(ROUTER_EVENT, url);\n    }\n  }\n\n  constructor() {\n    app.on('route', hash => this.route(hash));\n    window.onpopstate = e => this.route(location.hash);\n    this.route(location.hash);\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    })\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    if (el && app.render) {\r\n      app.render(el, html);\r\n      if (this.rendered) (this.rendered(this.state));\r\n    }\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}) {\r\n\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n    } else {\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = meta.action || this[meta.key]\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  render = () => this.view(this.state);\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n}\r\n","import app from './app';\n\nconst cache = {}\n\nexport default function (componentClass, id, props) {\n  const component = cache[id] ? cache[id] :\n    (cache[id] = new componentClass(props).mount(id))\n  return <div id={id}>\n    {component.render && component.render()}\n  </div>\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html) {\n  console.assert(!!element);\n  updateElement(element, html);\n}\nexport { createElement, Fragment };\n\n\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morph = require('morphdom')\n\nexport function render(element, html) {\n  console.assert(!!element);\n  if (typeof html === 'string') {\n    if (element.firstChild) {\n      morph(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html);\n  }\n}\nexport { createElement, Fragment };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}"],"sourceRoot":""}