{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","App","[object Object]","_events","fn","options","push","args","subscribers","console","assert","filter","sub","delay","apply","once","on","_t","clearTimeout","setTimeout","default","app_1","vdom_1","component_1","Component","router_1","decorator_1","update","event","web_component_1","createElement","render","Fragment","webComponent","start","element","model","view","opts","assign","global_event","component","rendered","mount","_app","global","window","document","addEventListener","_","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","key","descriptor","defineMetadata","action","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","id","idx","keyCache","nodes","updateChildren","node","firstElementChild","appendChild","create","el","nodeName","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","length","child","textContent","nodeType","createText","old","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","a","b","mergeProps","style","cssText","startsWith","dname","dataset","updateElement","customElement","componentClass","HTMLElement","super","shadow","_shadowRoot","attachShadow","mode","from","attributes","item","parentElement","_component","bind","run","state","customElements","ROUTER_EVENT","url","rest","split","hash","route","onpopstate","e","location","_history","_history_idx","html","vdom","getElementById","Promise","then","setState","catch","err","error","renderState","history","enable_history","callback","prev","next","add_actions","newState","actions","getMetadataKeys","getMetadata","all","trim","add_action","is_global_event","cache","vdom_my_1","g","Function","eval","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","setAttribute","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","firstChild","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","getAttribute","specified","removeAttributeNS","apprun_1","vdom_html_1"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    // if (options.debug) console.log('on: ' + name);\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  run(name: string, ...args) {\n    const subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) this._events[name] = subscribers.filter((sub) => {\n      let { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        // if (options.debug) console.log('run: ' + name, args);\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n  }\n\n  once(name: string, fn) { this.on(name, fn); }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      // if (options.debug) console.log(`run-delay ${options.delay}:` + name, args);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nexport default new App();\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport Router from './router';\nimport { on, update } from './decorator';\nimport webComponent from './web-component';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nlet _app: IApp = app;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  _app = root['app'];\n} else {\n  root['app'] = _app;\n  if (typeof document === 'object') document.addEventListener(\"DOMContentLoaded\", () => new Router());\n}\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport { update as event };\nexport default _app;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = `${key}${name ? ',' + name : ''}`;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, action: [descriptor.value, options] }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = `${key}${name ? ',' + name : ''}`;    \n    Reflect.defineMetadata(`apprun-update:${name}`, { name, key }, target)\n  }\n}\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '') {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    const id = props && props['id'] || `_${tag.name}_${++idx}`;\n    return createComponent(tag, id, props);\n  }\n  else\n    return tag(props, ch);\n};\n\nlet idx = 0;\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[]) {\n  // console.log('render', element, node);\n  idx = 0;\n  if (nodes==null || !element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    const node = nodes;\n    if (!element.firstElementChild) {\n      element.appendChild(create(node));\n    } else {\n      update(element.firstElementChild, node);\n    }\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(child), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n        if (element.dataset[dname] !== value) element.dataset[dname] = value;\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { Component } from './component';\ndeclare var customElements;\n\nexport const customElement = (componentClass, options={}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n    const opts = { global_event: true, render: true, shadow: false, ...options };\n    this._shadowRoot = opts.shadow ?\n      this.attachShadow({ mode: 'open' }) : this;\n    const props = {}\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    if (this.children) {\n      props['children'] = Array.from(this.children);\n      props['children'].forEach(el => el.parentElement.removeChild(el));\n    }\n    this._component = new componentClass(props).mount(this._shadowRoot, opts);\n    this.on = this._component.on.bind(this._component);\n    this.run = this._component.run.bind(this._component);\n  }\n  get state() { return this._component.state; }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\napp.on('//', _ => { });\napp.on('#', _ => { });\n\nexport default class Router {\n\n  route(url: string) {\n    if (!url) url = '#';\n    if (url.indexOf('/') > 0) {\n      const [name, ...rest] = url.split('/');\n      app.run(name, ...rest);\n      app.run(ROUTER_EVENT, name, ...rest);\n    } else {\n      app.run(url);\n      app.run(ROUTER_EVENT, url);\n    }\n  }\n\n  constructor() {\n    app.on('route', hash => this.route(hash));\n    window.onpopstate = e => this.route(location.hash);\n    this.route(location.hash);\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    })\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    if (el && app.render) {\r\n      app.render(el, html);\r\n      if (this.rendered) (this.rendered(this.state));\r\n    }\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}) {\r\n\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n    } else {\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = meta.action || this[meta.key]\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  render = () => this.view(this.state);\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n}\r\n","import app from './app';\n\nconst cache = {}\n\nexport default function (componentClass, id, props) {\n  const component = cache[id] ? cache[id] :\n    (cache[id] = new componentClass(props).mount(id))\n  return <div id={id}>\n    {component.render && component.render()}\n  </div>\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html) {\n  console.assert(!!element);\n  updateElement(element, html);\n}\nexport { createElement, Fragment };\n\n\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport * as morphdom from 'morphdom';\n\nexport function render(element, html) {\n  console.assert(!!element);\n  if (typeof html === 'string') {\n    if (element.firstChild) {\n      morphdom(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html);\n  }\n}\nexport { createElement, Fragment };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}"],"sourceRoot":""}