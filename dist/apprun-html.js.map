{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","App","_events","on","fn","options","push","off","subscribers","filter","sub","length","run","_this","args","_i","arguments","console","assert","delay","apply","once","__assign","_t","clearTimeout","setTimeout","global","window","default","app_1","__importDefault","vdom_1","component_1","Component","decorator_1","update","event","router_1","ROUTER_EVENT","ROUTER_404_EVENT","createElement","render","Fragment","start","element","model","view","opts","assign","global_event","component","rendered","mount","_","route","url","document","addEventListener","onpopstate","location","hash","props","startsWith","event_1","substring","e","name_1","state","target","setState","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","descriptor","g","Function","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","undefined","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","insertBefore","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","createTextNode","isSvg","JSON","stringify","createElementNS","cached","oldProps","newProps","mergeProps","style","cssText","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","removeAttribute","updateElement","vdom_my_1","html","_idx","createComponent","idx","map","vdom","id","__componentCache","mounted","Promise","__importStar","componentCache","components","_app","_actions","_history","_history_idx","renderState","h","concat","getElementById","unload","tracking_id","Date","valueOf","toString","observer_1","MutationObserver","changes","_a","removedNodes","oldValue","from","disconnect","observe","childList","subtree","attributes","attributeOldValue","attributeFilter","history","then","catch","err","error","_state","enable_history","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","split","trim","unmount","rest","slice","_b","name_2","apprun_1","vdom_html_1","morphdom_1","firstChild","cloneNode","innerHTML","range","__webpack_exports__","NS_XHTML","doc","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","selected","selectedIndex","INPUT","TEXTAREA","newValue","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphChildren","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","hasAttributeNS","removeAttributeNS"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args): number {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n\n    return subscribers ? subscribers.length : 0;\n  }\n\n  once(name: string, fn, options: any = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\napp.on(ROUTER_EVENT, _ => {/* Intentionally empty */});\napp.on('#', _ => {/* Intentionally empty */});\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\napp.on('$', (key:string, props:[], component: Component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e)\n    }\n  } else if (key === '$bind') {\n    const name = props[key];\n    props['oninput'] = e => {\n      if (typeof name === 'string') {\n        const state = { ...component['state'] };\n        state[name] = e.target.value;\n        component.setState(state);\n      } else {\n        component.setState(e.target.value);\n      }\n    }\n  }\n});\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update };\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}\n\napp.on('debug', _ => 0);\n","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function, props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${idx}_`\n  if (!id) {\n    id = `_${idx}_`;\n  } else {\n    key = `_${id}_`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state, props);\n    component.rendered && setTimeout(() => component.rendered(state, props));\n  }\n  return <section {...props} id={id}>{vdom}</section>;\n}\n\nlet _idx = 0;\nfunction createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx++));\n  let vdom = node;\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, _idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, _idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          app.run('$', key, props, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.createElement = h;\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        const observer = new MutationObserver(changes => {\r\n          const { removedNodes, oldValue } = changes[0];\r\n          if (oldValue === this.tracking_id || Array.from(removedNodes).indexOf(el) >=0){\r\n            this.unload();\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        if (el.parentNode) observer.observe(el.parentNode, {\r\n          childList: true, subtree: true,\r\n          attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n        });\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] != null ? this['model'] : {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { app, Component, View, Action, Update, on, update };","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","function morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // update attributes on original DOM element\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!toNode.hasAttribute(attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphChildren(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphChildren(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                // walk the children\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    // walk the fromNode children all the way through\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (fromNextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's move the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    // MORPH\n                                    morphChildren(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    } // END: while(curFromNodeChild) {}\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        // MORPH\n                        morphChildren(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphChildren(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n"],"sourceRoot":""}