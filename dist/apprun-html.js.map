{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","App","_events","on","fn","options","push","off","subscribers","filter","sub","length","run","_this","args","_i","arguments","console","assert","delay","apply","once","__assign","_t","clearTimeout","setTimeout","global","window","default","app_1","vdom_1","component_1","Component","decorator_1","update","event","router_1","createElement","render","Fragment","start","element","model","view","opts","assign","global_event","component","rendered","mount","_","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","descriptor","g","Function","e","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","props","undefined","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","insertBefore","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","isSvg","JSON","stringify","createElementNS","cached","name_1","a","b","mergeProps","style","cssText","startsWith","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","updateElement","vdom_my_1","html","createComponent","idx","map","vdom","id","__componentCache","mounted","state","Promise","componentCache","components","_app","_actions","_history","_history_idx","renderState","getElementById","setState","history","then","catch","err","error","_state","enable_history","concat","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","split","trim","_a","unmount","ROUTER_EVENT","rest","slice","_b","name_2","apprun_1","vdom_html_1","morph","firstChild","innerHTML","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","attributes","localName","getAttributeNS","setAttributeNS","specified","removeAttributeNS"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,OAAAD,IAEAD,EAAA,OAAAC,IARA,CASCK,KAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,wUClFA,IA0DIC,EA1DJC,EAAA,WASE,SAAAA,IACErC,KAAKsC,QAAU,GA8CnB,OA3CED,EAAAL,UAAAO,GAAA,SAAG5B,EAAc6B,EAAuBC,QAAA,IAAAA,MAAA,IACtCzC,KAAKsC,QAAQ3B,GAAQX,KAAKsC,QAAQ3B,IAAS,GAC3CX,KAAKsC,QAAQ3B,GAAM+B,KAAK,CAAEF,GAAIA,EAAIC,QAASA,KAG7CJ,EAAAL,UAAAW,IAAA,SAAIhC,EAAc6B,GAChB,IAAII,EAAc5C,KAAKsC,QAAQ3B,GAC3BiC,KACFA,EAAcA,EAAYC,OAAO,SAACC,GAAQ,OAAAA,EAAIN,KAAOA,KACrCO,OAAQ/C,KAAKsC,QAAQ3B,GAAQiC,SACjC5C,KAAKsC,QAAQ3B,KAI7B0B,EAAAL,UAAAgB,IAAA,SAAIrC,OAAJ,IAAAsC,EAAAjD,KAAkBkD,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAL,OAAAI,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GAChB,IAAIP,EAAc5C,KAAKsC,QAAQ3B,GAC/B0C,QAAQC,SAASV,EAAa,4BAA8BjC,GACxDiC,KACFA,EAAcA,EAAYC,OAAO,SAACC,GACxB,IAAAN,EAAAM,EAAAN,GAAIC,EAAAK,EAAAL,QAMZ,OALIA,EAAQc,MACVN,EAAKM,MAAM5C,EAAM6B,EAAIU,EAAMT,GAE3BD,EAAGgB,MAAMP,EAAMC,IAETJ,EAAIL,QAAQgB,QAENV,OAAQ/C,KAAKsC,QAAQ3B,GAAQiC,SACjC5C,KAAKsC,QAAQ3B,KAI7B0B,EAAAL,UAAAyB,KAAA,SAAK9C,EAAc6B,EAAIC,QAAA,IAAAA,MAAA,IACrBzC,KAAKuC,GAAG5B,EAAM6B,EAAEkB,EAAA,GAAOjB,EAAO,CAAEgB,MAAM,MAGhCpB,EAAAL,UAAAuB,MAAR,SAAc5C,EAAM6B,EAAIU,EAAMT,GAA9B,IAAAQ,EAAAjD,KACMyC,EAAQkB,IAAIC,aAAanB,EAAQkB,IACrClB,EAAQkB,GAAKE,WAAW,WACtBD,aAAanB,EAAQkB,IACrBnB,EAAGgB,MAAMP,EAAMC,IACdT,EAAQc,QAEflB,EAxDA,GAAazC,EAAAyC,MA4Db,IAAM3C,EAAOoE,GAAUC,OACnBrE,EAAU,KAAKA,EAAU,IAAS,MACpC0C,EAAM1C,EAAU,KAEhB0C,EAAM,IAAIC,EACV3C,EAAU,IAAI0C,GAEhBxC,EAAAoE,QAAe5B,mGCnEf,IAAA6B,EAAA/D,EAAA,GA6CSN,EAAAwC,IA7CF6B,EAAAD,QACP,IAAAE,EAAAhE,EAAA,GACAiE,EAAAjE,EAAA,GA2CcN,EAAAwE,UA3CLD,EAAAC,UAET,IAAAC,EAAAnE,EAAA,GAyC+CN,EAAA2C,GAzCtC8B,EAAA9B,GAyC0C3C,EAAA0E,OAzCtCD,EAAAC,OA0CM1E,EAAA2E,MA1CNF,EAAAC,OACb,IAAAE,EAAAtE,EAAA,GAaA+D,EAAAD,QAAIS,cAAgBP,EAAAO,cACpBR,EAAAD,QAAIU,OAASR,EAAAQ,OACbT,EAAAD,QAAIW,SAAWT,EAAAS,SAEfV,EAAAD,QAAIY,MAAQ,SAAIC,EAAgCC,EAAYC,EAAgBT,EAC1E7B,GACE,IAAMuC,EAAOlE,OAAOmE,OAAOxC,GAAW,GAAI,CAAEiC,QAAQ,EAAMQ,cAAc,IAClEC,EAAY,IAAIhB,EAAAC,UAAaU,EAAOC,EAAMT,GAGhD,OAFI7B,GAAWA,EAAQ2C,WAAUD,EAAUC,SAAW3C,EAAQ2C,UAC9DD,EAAUE,MAAMR,EAASG,GAClBG,GAGNlB,EAAAD,QAAW,QACdC,EAAAD,QAAW,MAAIQ,EAAAR,QACfC,EAAAD,QAAIzB,GAAG,KAAM,SAAA+C,MACbrB,EAAAD,QAAIzB,GAAG,IAAK,SAAA+C,MACZrB,EAAAD,QAAIzB,GAAG,QAAS,SAAAgD,GAAO,OAAAf,EAAAR,QAAMuB,KACL,iBAAbC,UACTA,SAASC,iBAAiB,mBAAoB,WAC5C1B,OAAO2B,WAAa,WAAM,OAAAlB,EAAAR,QAAM2B,SAASC,OACzCpB,EAAAR,QAAM2B,SAASC,SAQrBhG,EAAAoE,QAAeC,EAAAD,QAEfC,EAAAD,QAAIzB,GAAG,QAAS,SAAA+C,GAAK,0FCjDR1F,EAAAiG,QAAU,CAErBC,KAAM,IAAIC,QAEVC,eAAc,SAACC,EAAaC,EAAeC,GACpCnG,KAAK8F,KAAKM,IAAID,IAASnG,KAAK8F,KAAKO,IAAIF,EAAQ,IAClDnG,KAAK8F,KAAK7E,IAAIkF,GAAQF,GAAeC,GAGvCI,gBAAe,SAACH,GAEd,OADAA,EAASrF,OAAOyF,eAAeJ,GACxBnG,KAAK8F,KAAK7E,IAAIkF,GAAUrF,OAAO0F,KAAKxG,KAAK8F,KAAK7E,IAAIkF,IAAW,IAGtEM,YAAW,SAACR,EAAaE,GAEvB,OADAA,EAASrF,OAAOyF,eAAeJ,GACxBnG,KAAK8F,KAAK7E,IAAIkF,GAAUnG,KAAK8F,KAAK7E,IAAIkF,GAAQF,GAAe,OAIxErG,EAAA0E,OAAA,SAAuB3D,EAAe8B,GACpC,YADoC,IAAAA,MAAA,IAC7B,SAAC0D,EAAaxE,EAAa+E,GAIhC,OAHA/F,EAAOA,GAAQgB,EACf/B,EAAAiG,QAAQG,eAAe,iBAAiBrF,EACtC,CAAEA,KAAIA,EAAEgB,IAAGA,EAAEc,QAAOA,GAAI0D,GACnBO,IAIX9G,EAAA2C,GAAA,SAAmB5B,EAAe8B,GAChC,YADgC,IAAAA,MAAA,IACzB,SAAU0D,EAAaxE,GAC5BhB,EAAOA,GAAQgB,EACf/B,EAAAiG,QAAQG,eAAe,iBAAiBrF,EACpC,CAAEA,KAAIA,EAAEgB,IAAGA,EAAEc,QAAOA,GAAI0D,oBCjChC,IAAAQ,EAGAA,EAAA,WACA,OAAA3G,KADA,GAIA,IAEA2G,KAAA,IAAAC,SAAA,iBACC,MAAAC,GAED,iBAAA9C,SAAA4C,EAAA5C,QAOAlE,EAAAD,QAAA+G,iFCnBA,IAAAG,EAAA5G,EAAA,GAIM6G,EAAa,SAEnB,SAASC,EAAQC,GACf,IAAMC,EAAK,GACLxE,EAAO,SAACjC,GACRA,SAAuC,KAANA,IAAkB,IAANA,GAC/CyG,EAAGxE,KAAmB,mBAANjC,GAAiC,iBAANA,EAAkBA,EAAI,GAAGA,IAUxE,OAPAwG,GAAYA,EAASE,QAAQ,SAAA1G,GACvB2G,MAAMC,QAAQ5G,GAChBA,EAAE0G,QAAQ,SAAA/G,GAAK,OAAAsC,EAAKtC,KAEpBsC,EAAKjC,KAGFyG,EAGTtH,EAAA6E,cAAA,SAA8B6C,EAAwBC,OAAW,IAAAN,EAAA,GAAA9D,EAAA,EAAAA,EAAAC,UAAAL,OAAAI,IAAA8D,EAAA9D,EAAA,GAAAC,UAAAD,GAC/D,IAAM+D,EAAKF,EAAQC,GACnB,MAAmB,iBAARK,EAAyB,CAAEA,IAAGA,EAAEC,MAAKA,EAAEN,SAAUC,QAC3CM,IAARF,GAAqBL,EAAiBC,EACtCpG,OAAOyF,eAAee,GAAKG,oBAC3B,CAAEH,IAAGA,EAAEC,MAAKA,EAAEN,SAAUC,GAGxBI,EAAIC,EAAOL,IAGtB,IAAMQ,EAAW,GAIjB,SAAgBhD,EAAOG,EAAkB8C,EAAwBC,QAAA,IAAAA,MAAA,IAElD,MAATD,IAEJA,EAAQb,EAAA9C,QAAgB2D,EAAOC,GAE1B/C,IACDuC,MAAMC,QAAQM,GAChBE,EAAehD,EAAS8C,GAExBE,EAAehD,EAAS,CAAC8C,MAW7B,SAASrD,EAAOO,EAAkBiD,GAChCzE,QAAQC,SAASuB,GARnB,SAAckD,EAAaD,GAEzB,IAAME,EAAOD,EAAGE,SACVC,EAAO,IAAGJ,EAAKR,KAAO,IAC5B,OAAOU,EAAKG,gBAAkBD,EAAKC,cAM9BC,CAAKvD,EAASiD,IAInBD,EAAehD,EAASiD,EAAKb,UAC7BoB,EAAYxD,EAASiD,EAAKP,QAJxB1C,EAAQyD,WAAWC,aAAa7G,EAAOoG,GAAOjD,GAOlD,SAASgD,EAAehD,EAASoC,GAE/B,IADA,IAAMuB,EAAMC,KAAKC,IAAI7D,EAAQ8D,WAAW5F,OAAQkE,EAASlE,QAChD3C,EAAI,EAAGA,EAAIoI,EAAKpI,IAAK,CAC5B,IAAMwI,EAAQ3B,EAAS7G,GACjB2H,EAAKlD,EAAQ8D,WAAWvI,GAC9B,GAAqB,iBAAVwI,EACLb,EAAGc,cAAgBD,IACD,IAAhBb,EAAGe,SACLf,EAAGc,YAAcD,EAEjB/D,EAAQ0D,aAAaQ,EAAWH,GAAQb,QAGvC,CACL,IAAMpG,EAAMiH,EAAMrB,OAASqB,EAAMrB,MAAW,IAC5C,GAAI5F,EACF,GAAIoG,EAAGpG,MAAQA,EACb2C,EAAOO,EAAQ8D,WAAWvI,GAAIwI,OACzB,CACL,IAAMI,EAAMtB,EAAS/F,GACjBqH,GACFnE,EAAQoE,aAAaD,EAAKjB,GAC1BlD,EAAQqE,YAAYnB,GACpBzD,EAAOO,EAAQ8D,WAAWvI,GAAIwI,IAE9B/D,EAAQoE,aAAavH,EAAOkH,GAAQb,QAIxCzD,EAAOO,EAAQ8D,WAAWvI,GAAIwI,IAMpC,IADA,IAAI/G,EAAIgD,EAAQ8D,WAAW5F,OACpBlB,EAAI2G,GACT3D,EAAQsE,YAAYtE,EAAQuE,WAC5BvH,IAGF,GAAIoF,EAASlE,OAASyF,EAAK,CACzB,IAAM9H,EAAI8E,SAAS6D,yBACnB,IAASjJ,EAAIoI,EAAKpI,EAAI6G,EAASlE,OAAQ3C,IACrCM,EAAEwI,YAAYxH,EAAOuF,EAAS7G,KAEhCyE,EAAQqE,YAAYxI,IAIxB,SAASqI,EAAWjB,GAClB,GAA+B,IAA3BA,EAAKwB,QAAQ,UAAiB,CAChC,IAAMC,EAAM/D,SAASf,cAAc,OAEnC,OADA8E,EAAIC,mBAAmB,aAAc1B,EAAK2B,UAAU,IAC7CF,EAEP,OAAO/D,SAASkE,eAAe5B,GAInC,SAASpG,EAAOoG,EAAsB6B,GAIpC,QAJoC,IAAAA,OAAA,GACpCtG,QAAQC,OAAOwE,SAGK,iBAATA,EAAmB,OAAOiB,EAAWjB,GAChD,IAAKA,EAAKR,KAA2B,mBAAZQ,EAAKR,IAAoB,OAAOyB,EAAWa,KAAKC,UAAU/B,IAEnF,IAAMjD,GADN8E,EAAQA,GAAsB,QAAb7B,EAAKR,KAElB9B,SAASsE,gBAAgB,6BAA8BhC,EAAKR,KAC5D9B,SAASf,cAAcqD,EAAKR,KAMhC,OAJAe,EAAYxD,EAASiD,EAAKP,OAEtBO,EAAKb,UAAUa,EAAKb,SAASE,QAAQ,SAAAyB,GAAS,OAAA/D,EAAQqE,YAAYxH,EAAOkH,EAAOe,MAE7E9E,EAUT,SAASwD,EAAYxD,EAAkB0C,GACrClE,QAAQC,SAASuB,GAGjB,IAAMkF,EAASlF,EAAQkC,IAAe,GAGtC,IAAK,IAAIiD,KAFTzC,EAZF,SAAoB0C,EAAOC,GACzB,IAAM3C,EAAQ,GAGd,OAFI0C,GAAGnJ,OAAO0F,KAAKyD,GAAG9C,QAAQ,SAAAjF,GAAK,OAAAqF,EAAMrF,GAAK,KAC1CgI,GAAGpJ,OAAO0F,KAAK0D,GAAG/C,QAAQ,SAAAjF,GAAK,OAAAqF,EAAMrF,GAAKgI,EAAEhI,KACzCqF,EAQC4C,CAAWJ,EAAQxC,GAC3B1C,EAAQkC,GAAcQ,EACLA,EAAO,CACtB,IAAMlG,EAAQkG,EAAMyC,GAIpB,GADa,UAATA,IAAkBA,EAAO,aAChB,UAATA,EAEF,IAAK,IAAI7H,KADL0C,EAAQuF,MAAMC,UAASxF,EAAQuF,MAAMC,QAAU,IACrChJ,EACRwD,EAAQuF,MAAMjI,KAAOd,EAAMc,KAAI0C,EAAQuF,MAAMjI,GAAKd,EAAMc,SAEzD,GAAI6H,EAAKM,WAAW,SAAU,CACnC,IACMC,EADQP,EAAKP,UAAU,GACTe,QAAQ,SAAU,SAACC,GAAU,OAAAA,EAAM,GAAGtC,gBACtDtD,EAAQ6F,QAAQH,KAAWlJ,IAAOwD,EAAQ6F,QAAQH,GAASlJ,QACtDwD,aAAmB8F,YAC5BX,EAAKM,WAAW,SAAWN,EAAKM,WAAW,SACvCzF,EAAQ+F,aAAaZ,KAAU3I,GAAOwD,EAAQgG,aAAab,EAAM3I,IAEjEwD,EAAQmF,KAAU3I,IAAOwD,EAAQmF,GAAQ3I,GAChC,QAAT2I,GAAkB3I,IAAOqG,EAASrG,GAASwD,KAhJxCjF,EAAAkL,cAAgBpG,EAE7B9E,EAAA8E,SAmJA9E,EAAA+E,SAAA,SAAyB4C,OAAO,IAAAN,EAAA,GAAA9D,EAAA,EAAAA,EAAAC,UAAAL,OAAAI,IAAA8D,EAAA9D,EAAA,GAAAC,UAAAD,GAC9B,OAAO6D,EAAQC,mFC1LjB,IAAA8D,EAAA7K,EAAA,GAISN,EAAA6E,cAJAsG,EAAAtG,cAIe7E,EAAA+E,SAJeoG,EAAApG,SACvC/E,EAAA8E,OAAA,SAAuBG,EAASmG,EAAMpD,GACpCmD,EAAAD,cAAcjG,EAASmG,EAAMpD,2TCF/B,IAAA3D,EAAA/D,EAAA,GAqCAN,EAAAoE,QATA,SAASiH,EAAgBnD,EAAMF,EAAQsD,GACrC,QADqC,IAAAA,MAAA,GACjB,iBAATpD,EAAmB,OAAOA,EACrC,GAAIV,MAAMC,QAAQS,GAAO,OAAOA,EAAKqD,IAAI,SAAAvC,GAAS,OAAAqC,EAAgBrC,EAAOhB,EAAQsD,OACjF,IAAIE,EAAOtD,EAGX,OAFIA,GAAQA,EAAKR,KAAOxG,OAAOyF,eAAeuB,EAAKR,KAAKG,sBAAqB2D,EA9B/E,SAAgBtD,EAAMF,EAAQsD,GACpB,IAAA5D,EAAAQ,EAAAR,IAAKC,EAAAO,EAAAP,MAAON,EAAAa,EAAAb,SAEhBoE,EAAK9D,GAASA,EAAU,GACxB5F,EAAM,IAAI2F,EAAI3G,KAAI,IAAIuK,EACrBG,EAGH1J,EAAM,IAAI2F,EAAI3G,KAAI,IAAI0K,EAFtBA,EAAK,IAAI/D,EAAI3G,KAAI,IAAIuK,EAKlBtD,EAAO0D,mBAAkB1D,EAAO0D,iBAAmB,IACxD,IAAInG,EAAYyC,EAAO0D,iBAAiB3J,GACnCwD,IACHA,EAAYyC,EAAO0D,iBAAiB3J,GAAO,IAAI2F,EAAG5D,EAAA,GAAM6D,EAAK,CAAEN,SAAQA,KAAI5B,MAAMgG,IAEnFlG,EAAUoG,SAAWpG,EAAUoG,QAAQhE,EAAON,GAC9C,IAAMuE,EAAQrG,EAAUqG,MACpBJ,EAAO,GAKX,OAJMI,aAAiBC,UAAYtG,EAAUJ,OAC3CqG,EAAOjG,EAAUJ,KAAKyG,GACtBrG,EAAUC,UAAYvB,WAAW,WAAM,OAAAsB,EAAUC,SAASoG,MAErDvH,EAAAD,QAAAS,cAAA,OAAK4G,GAAIA,GAAKD,GAO+D1G,CAAOoD,EAAMF,EAAQsD,MACrGE,GAAQA,EAAKnE,WAAUmE,EAAKnE,SAAWmE,EAAKnE,SAASkE,IAAI,SAAAvC,GAAS,OAAAqC,EAAgBrC,EAAOhB,EAAQsD,QAC9FE,0TCjCT,IAAAnH,EAAA/D,EAAA,GACAmE,EAAAnE,EAAA,GAGMwL,EAAiB,GACvBzH,EAAAD,QAAIzB,GAAG,iBAAkB,SAAA1B,GAAK,OAAAA,EAAE8K,WAAaD,IAE7C,IAAAtH,EAAA,WAyDE,SAAAA,EACYoH,EACAzG,EACAT,EACA7B,GAJZ,IAAAQ,EAAAjD,KACYA,KAAAwL,QACAxL,KAAA+E,OACA/E,KAAAsE,SACAtE,KAAAyC,UA3DJzC,KAAA4L,KAAO,IAAI3H,EAAA5B,IACXrC,KAAA6L,SAAW,GAGX7L,KAAA8L,SAAW,GACX9L,KAAA+L,cAAgB,EAyDxB/L,KAAA4E,MAAQ,SAACC,EACPpC,GACA,YAFO,IAAAoC,MAAA,WACP,IAAApC,MAAA,CAAoEiC,QAAQ,IACrEzB,EAAKoC,MAAMR,EAAOnB,EAAA,GAAOjB,EAAO,CAAEiC,QAAQ,MAoHrD,OAzKUN,EAAApC,UAAAgK,YAAR,SAAoBR,GAClB,GAAKxL,KAAK+E,KAAV,CACA,IAAMiG,EAAOhL,KAAK+E,KAAKyG,GAQvB,GANAvH,EAAAD,QAAIhB,IAAI,QAAS,CACfmC,UAAWnF,KACXwL,MAAKA,EACLJ,KAAMJ,GAAQ,+BAGQ,iBAAbxF,SAAX,CAEA,IAAMuC,EAA8B,iBAAjB/H,KAAK6E,QACtBW,SAASyG,eAAejM,KAAK6E,SAAW7E,KAAK6E,QAC3CkD,IAAIA,EAAe,WAAI/H,MAC3BiE,EAAAD,QAAIU,OAAOqD,EAAIiD,EAAMhL,MACjBA,KAAKoF,UAAWpF,KAAKoF,SAASpF,KAAKwL,UAGlCpH,EAAApC,UAAAkK,SAAP,SAAgBV,EAAU/I,GAA1B,IAAAQ,EAAAjD,KAEE,QAFwB,IAAAyC,MAAA,CACpBiC,QAAQ,EAAMyH,SAAS,IACvBX,aAAiBC,QAGnBD,EAAMY,KAAK,SAAAjK,GACTc,EAAKiJ,SAAS/J,EAAGM,KAChB4J,MAAM,SAAAC,GAEP,MADAjJ,QAAQkJ,MAAMD,GACRA,IAERtM,KAAKwM,OAAShB,MACT,CAEL,GADAxL,KAAKwM,OAAShB,EACD,MAATA,EAAe,OACnBxL,KAAKwL,MAAQA,GACU,IAAnB/I,EAAQiC,QAAkB1E,KAAKgM,YAAYR,IACvB,IAApB/I,EAAQ0J,SAAqBnM,KAAKyM,iBACpCzM,KAAK8L,SAAe9L,KAAK8L,SAAQY,OAAA,CAAElB,IACnCxL,KAAK+L,aAAe/L,KAAK8L,SAAS/I,OAAS,GAEb,mBAArBN,EAAQkK,UAAyBlK,EAAQkK,SAAS3M,KAAKwL,SAgB/DpH,EAAApC,UAAAqD,MAAP,SAAaR,EAAgBpC,GAA7B,IAAAQ,EAAAjD,KAQE,QARW,IAAA6E,MAAA,MAEXxB,QAAQC,QAAQtD,KAAK6E,QAAS,8BAC9B7E,KAAKyC,QAAUA,EAAU3B,OAAOmE,OAAOjF,KAAKyC,SAAW,GAAIA,GAC3DzC,KAAK6E,QAAUA,EACf7E,KAAKkF,aAAezC,EAAQyC,aAC5BlF,KAAKyM,iBAAmBhK,EAAQ0J,QAE5BnM,KAAKyM,eAAgB,CAoBvBzM,KAAKuC,GAAGE,EAAQ0J,QAAQS,MAAQ,eAnBnB,WACX3J,EAAK8I,eACD9I,EAAK8I,cAAe,EACtB9I,EAAKiJ,SAASjJ,EAAK6I,SAAS7I,EAAK8I,cAAe,CAAErH,QAAQ,EAAMyH,SAAS,IAGzElJ,EAAK8I,aAAe,IAcxB/L,KAAKuC,GAAGE,EAAQ0J,QAAQU,MAAQ,eAVnB,WACX5J,EAAK8I,eACD9I,EAAK8I,aAAe9I,EAAK6I,SAAS/I,OACpCE,EAAKiJ,SAASjJ,EAAK6I,SAAS7I,EAAK8I,cAAe,CAAErH,QAAQ,EAAMyH,SAAS,IAGzElJ,EAAK8I,aAAe9I,EAAK6I,SAAS/I,OAAS,IAgBjD,OAVA/C,KAAK8M,mBACctF,IAAfxH,KAAKwL,QAAqBxL,KAAKwL,MAAQxL,KAAY,OAAK,IACxDyC,EAAQiC,OACV1E,KAAKkM,SAASlM,KAAKwL,MAAO,CAAE9G,QAAQ,EAAMyH,SAAS,IAEnDnM,KAAKkM,SAASlM,KAAKwL,MAAO,CAAE9G,QAAQ,EAAOyH,SAAS,IAGtDT,EAAe7G,GAAW6G,EAAe7G,IAAY,GACrD6G,EAAe7G,GAASnC,KAAK1C,MACtBA,MAGToE,EAAApC,UAAA+K,gBAAA,SAAgBpM,GACd,OAAOA,IAASA,EAAK2J,WAAW,MAAQ3J,EAAK2J,WAAW,OAG1DlG,EAAApC,UAAAgL,WAAA,SAAWrM,EAAcsM,EAAQxK,GAAjC,IAAAQ,EAAAjD,UAAiC,IAAAyC,MAAA,IAC1BwK,GAA4B,mBAAXA,GACtBjN,KAAKuC,GAAG5B,EAAM,eAAC,IAAAuB,EAAA,GAAAiB,EAAA,EAAAA,EAAAC,UAAAL,OAAAI,IAAAjB,EAAAiB,GAAAC,UAAAD,GACb,IAAM+J,EAAWD,EAAMzJ,WAAA,GAACP,EAAKuI,OAAKkB,OAAKxK,IAEvC+B,EAAAD,QAAIhB,IAAI,QAAS,CACfmC,UAAWlC,EACXsB,MAAS5D,EACTkG,EAAG3E,EACHsJ,MAAOvI,EAAKuI,MACZ0B,SAAQA,EACRzK,QAAOA,IAGTQ,EAAKiJ,SAASgB,EAAUzK,IACvBA,IAGL2B,EAAApC,UAAA8K,YAAA,eAAA7J,EAAAjD,KACQmN,EAAUnN,KAAKsE,QAAU,GAC/BD,EAAAwB,QAAQS,gBAAgBtG,MAAMmH,QAAQ,SAAAxF,GACpC,GAAIA,EAAI2I,WAAW,kBAAmB,CACpC,IAAMxE,EAAOzB,EAAAwB,QAAQY,YAAY9E,EAAKsB,GACtCkK,EAAQrH,EAAKnF,MAAQ,CAACsC,EAAK6C,EAAKnE,KAAKC,KAAKqB,GAAO6C,EAAKrD,YAG1D,IAAM2K,EAAM,GACZtM,OAAO0F,KAAK2G,GAAShG,QAAQ,SAAAxG,GAC3B,IAAMsM,EAASE,EAAQxM,IACD,mBAAXsM,GAAyB7F,MAAMC,QAAQ4F,KAChDtM,EAAK0M,MAAM,KAAKlG,QAAQ,SAAAtF,GAAK,OAAAuL,EAAIvL,EAAEyL,QAAUL,MAIjDnM,OAAO0F,KAAK4G,GAAKjG,QAAQ,SAAAxG,GACvB,IAAMsM,EAASG,EAAIzM,GACG,mBAAXsM,EACThK,EAAK+J,WAAWrM,EAAMsM,GACb7F,MAAMC,QAAQ4F,IACvBhK,EAAK+J,WAAWrM,EAAMsM,EAAO,GAAIA,EAAO,OAKvC7I,EAAApC,UAAAgB,IAAP,SAAWrC,OAAc,MAAAuC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAL,OAAAI,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GACvB,OAAOnD,KAAKkF,cAAgBlF,KAAK+M,gBAAgBpM,GAC/CsD,EAAAD,QAAIhB,IAAGQ,MAAPS,EAAAD,QAAG,CAAKrD,GAAI+L,OAAKxJ,KACjBqK,EAAAvN,KAAK4L,MAAK5I,IAAGQ,MAAA+J,EAAA,CAAC5M,GAAI+L,OAAKxJ,KAGpBkB,EAAApC,UAAAO,GAAP,SAAU5B,EAAc6B,EAAuBC,GAE7C,OADAzC,KAAK6L,SAASnJ,KAAK,CAAE/B,KAAIA,EAAE6B,GAAEA,IACtBxC,KAAKkF,cAAgBlF,KAAK+M,gBAAgBpM,GAC/CsD,EAAAD,QAAIzB,GAAG5B,EAAM6B,EAAIC,GACjBzC,KAAK4L,KAAKrJ,GAAG5B,EAAM6B,EAAIC,IAGpB2B,EAAApC,UAAAwL,QAAP,eAAAvK,EAAAjD,KACEA,KAAK6L,SAAS1E,QAAQ,SAAA8F,GACZ,IAAAtM,EAAAsM,EAAAtM,KAAM6B,EAAAyK,EAAAzK,GACdS,EAAKiC,cAAgBjC,EAAK8J,gBAAgBpM,GACxCsD,EAAAD,QAAIrB,IAAIhC,EAAM6B,GACdS,EAAK2I,KAAKjJ,IAAIhC,EAAM6B,MAlLnB4B,EAAAqD,qBAAsB,EAqL/BrD,EAtLA,GAAaxE,EAAAwE,2FCRb,IAAAH,EAAA/D,EAAA,GAEMuN,EAAe,KAErB7N,EAAAoE,QAAA,SAA8BuB,GAE5B,GADKA,IAAKA,EAAM,KACZA,EAAI+E,WAAW,KAAM,CACjB,IAAAiD,EAAAhI,EAAA8H,MAAA,KAACrD,EAAAuD,EAAA,GAAMG,EAAAH,EAAAI,MAAA,GACb1J,EAAAD,QAAIhB,IAAGQ,MAAPS,EAAAD,QAAG,CAAKgG,GAAI0C,OAAKgB,IACjBzJ,EAAAD,QAAIhB,IAAGQ,MAAPS,EAAAD,QAAG,CAAKyJ,EAAczD,GAAI0C,OAAKgB,SAC1B,GAAInI,EAAI+E,WAAW,KAAM,CACxB,IAAAsD,EAAArI,EAAA8H,MAAA,KAAIQ,GAAHD,EAAA,GAAGA,EAAA,IAAMF,EAAAE,EAAAD,MAAA,GAChB1J,EAAAD,QAAIhB,IAAGQ,MAAPS,EAAAD,QAAG,CAAK,IAAM6J,GAAInB,OAAKgB,IACvBzJ,EAAAD,QAAIhB,IAAGQ,MAAPS,EAAAD,QAAG,CAAKyJ,EAAc,IAAMI,GAAInB,OAAKgB,SAErCzJ,EAAAD,QAAIhB,IAAIuC,GACRtB,EAAAD,QAAIhB,IAAIyK,EAAclI,mFChB1B,IAAAuI,EAAA5N,EAAA,GAQSN,EAAAwC,IARF0L,EAAA9J,QAQOpE,EAAAwE,UARA0J,EAAA1J,UAQiCxE,EAAA2C,GARAuL,EAAAvL,GAQI3C,EAAA0E,OARAwJ,EAAAxJ,OACnD,IAAAyJ,EAAA7N,EAAA,IAEA4N,EAAA9J,QAAIS,cAAgBsJ,EAAAtJ,cACpBqJ,EAAA9J,QAAIU,OAASqJ,EAAArJ,OACboJ,EAAA9J,QAAIW,SAAWoJ,EAAApJ,SAEf/E,EAAAoE,QAAe8J,EAAA9J,QAGO,iBAAXD,SACTA,OAAkB,UAAI+J,EAAA1J,0FCXxB,IAAA2G,EAAA7K,EAAA,GAeSN,EAAA6E,cAfAsG,EAAAtG,cAee7E,EAAA+E,SAfeoG,EAAApG,SACvC,IAAAqJ,EAAA9N,EAAA,IAEAN,EAAA8E,OAAA,SAAuBG,EAASmG,EAAMpD,GAChB,iBAAToD,GACTA,EAAOA,EAAKsC,OACRzI,EAAQoJ,WACVD,EAAMnJ,EAAQoJ,WAAYjD,GAE1BnG,EAAQqJ,UAAYlD,GAGtBD,EAAAD,cAAcjG,EAASmG,EAAMpD,kCCVjC,IAAAuG,EACAC,EAAA,+BAEAC,EAAA,oBAAA7I,cAAAgC,EAAAhC,SAEA8I,EAAAD,EACAA,EAAAE,MAAAF,EAAA5J,cAAA,OACA,GAoBA+J,EAdAF,EAAAE,eACA,SAAAzG,EAAA0G,EAAA9N,GACA,OAAAoH,EAAAyG,eAAAC,EAAA9N,IAEC2N,EAAAI,aACD,SAAA3G,EAAA0G,EAAA9N,GACA,OAAAoH,EAAA2G,aAAA/N,IAGA,SAAAoH,EAAA0G,EAAA9N,GACA,aAAAoH,EAAA4G,iBAAAF,EAAA9N,IAiCA,SAAAiO,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA5G,SACA+G,EAAAF,EAAA7G,SAEA,OAAA8G,IAAAC,MAIAF,EAAAG,WACAF,EAAAG,WAAA,OACAF,EAAAE,WAAA,QAIAH,IAAAC,EAAA7G,cA0FA,SAAAgH,EAAAN,EAAAC,EAAAnO,GACAkO,EAAAlO,KAAAmO,EAAAnO,KACAkO,EAAAlO,GAAAmO,EAAAnO,GACAkO,EAAAlO,GACAkO,EAAAhE,aAAAlK,EAAA,IAEAkO,EAAAO,gBAAAzO,EAAA,KAKA,IAAA0O,EAAA,CAKAC,OAAA,SAAAT,EAAAC,GACAK,EAAAN,EAAAC,EAAA,aAQAS,MAAA,SAAAV,EAAAC,GACAK,EAAAN,EAAAC,EAAA,WACAK,EAAAN,EAAAC,EAAA,YAEAD,EAAAxN,QAAAyN,EAAAzN,QACAwN,EAAAxN,MAAAyN,EAAAzN,OAGAmN,EAAAM,EAAA,eACAD,EAAAO,gBAAA,UAIAI,SAAA,SAAAX,EAAAC,GACA,IAAAW,EAAAX,EAAAzN,MACAwN,EAAAxN,QAAAoO,IACAZ,EAAAxN,MAAAoO,GAGA,IAAAxB,EAAAY,EAAAZ,WACA,GAAAA,EAAA,CAGA,IAAAyB,EAAAzB,EAAA0B,UAEA,GAAAD,GAAAD,OAAAC,GAAAb,EAAAe,YACA,OAGA3B,EAAA0B,UAAAF,IAGAI,OAAA,SAAAhB,EAAAC,GACA,IAAAN,EAAAM,EAAA,kBAIA,IAHA,IACA1O,EAAA,EACA0P,EAAAhB,EAAAb,WACA6B,GAAA,CACA,IAAA7H,EAAA6H,EAAA7H,SACA,GAAAA,GAAA,WAAAA,EAAAE,cAAA,CACA,GAAAqG,EAAAsB,EAAA,kBACA1P,EACA,MAEAA,IAEA0P,IAAAC,YAGAlB,EAAAmB,cAAA5P,KAKA6P,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,SAAAC,KAEA,SAAAC,EAAAvI,GACA,OAAAA,EAAAuD,GA+aA,IAAAiF,EA5aA,SAAAC,GAEA,gBAAAC,EAAAC,EAAAhO,GAKA,GAJAA,IACAA,EAAA,IAGA,iBAAAgO,EACA,iBAAAD,EAAAvI,UAAA,SAAAuI,EAAAvI,SAAA,CACA,IAAAyI,EAAAD,GACAA,EAAApC,EAAA5J,cAAA,SACAyJ,UAAAwC,OAtOAC,EAwOAF,GAvOAtC,GAAAE,EAAAuC,cACAzC,EAAAE,EAAAuC,eACAC,WAAAxC,EAAAE,MAIAJ,KAAA2C,yBACAC,EAAA5C,EAAA2C,yBAAAH,IAEAI,EAAA1C,EAAA5J,cAAA,SACAyJ,UAAAyC,EA6NAF,EA3NAM,EAAApI,WAAA,GAbA,IAAAgI,EAMAI,EAkPAC,EAZAC,EAAAxO,EAAAwO,YAAAZ,EACAa,EAAAzO,EAAAyO,mBAAAd,EACAe,EAAA1O,EAAA0O,aAAAf,EACAgB,EAAA3O,EAAA2O,mBAAAhB,EACAiB,EAAA5O,EAAA4O,aAAAjB,EACAkB,EAAA7O,EAAA6O,uBAAAlB,EACAmB,EAAA9O,EAAA8O,iBAAAnB,EACAoB,EAAA/O,EAAA+O,2BAAApB,EACAqB,GAAA,IAAAhP,EAAAgP,aAGAC,EAAA,GAGA,SAAAC,EAAAhQ,GACAqP,EACAA,EAAAtO,KAAAf,GAEAqP,EAAA,CAAArP,GAsCA,SAAAiQ,EAAA9J,EAAAQ,EAAAuJ,IACA,IAAAP,EAAAxJ,KAIAQ,GACAA,EAAAa,YAAArB,GAGAyJ,EAAAzJ,GA3CA,SAAAgK,EAAAhK,EAAA+J,GACA,GAAA/J,EAAAgB,WAAAmH,EAEA,IADA,IAAAH,EAAAhI,EAAAmG,WACA6B,GAAA,CAEA,IAAAnO,OAAA6F,EAEAqK,IAAAlQ,EAAAsP,EAAAnB,IAGA6B,EAAAhQ,IAKA4P,EAAAzB,GACAA,EAAA7B,YACA6D,EAAAhC,EAAA+B,IAIA/B,IAAAC,aAuBA+B,CAAAhK,EAAA+J,IAkDA,SAAAE,EAAAhK,GACAoJ,EAAApJ,GAGA,IADA,IAAA+H,EAAA/H,EAAAkG,WACA6B,GAAA,CACA,IAAAC,EAAAD,EAAAC,YAEApO,EAAAsP,EAAAnB,GACA,GAAAnO,EAAA,CACA,IAAAqQ,EAAAN,EAAA/P,GACAqQ,GAAApD,EAAAkB,EAAAkC,KACAlC,EAAAxH,WAAAC,aAAAyJ,EAAAlC,GACAmC,EAAAD,EAAAlC,IAIAiC,EAAAjC,GACAA,EAAAC,GAIA,SAAAkC,EAAApD,EAAAC,EAAA2C,GACA,IACAS,EADAC,EAAAlB,EAAAnC,GASA,GANAqD,UAGAT,EAAAS,IAGA1B,EAAA2B,aAAA3B,EAAA2B,WAAA5B,GAAA,CAIA,IAAAiB,EAAA,CACA,QAAAL,EAAAvC,EAAAC,GACA,OAMA,GAHAyB,EAAA1B,EAAAC,GACAuC,EAAAxC,IAEA,IAAA2C,EAAA3C,EAAAC,GACA,OAIA,gBAAAD,EAAA5G,SAAA,CACA,IAEAoK,EAEAC,EACAC,EACAC,EANAC,EAAA3D,EAAAb,WACAyE,EAAA7D,EAAAZ,WAOA0E,EAAA,KAAAF,GAAA,CAIA,IAHAF,EAAAE,EAAA1C,YACAsC,EAAApB,EAAAwB,GAEAC,GAAA,CAGA,GAFAJ,EAAAI,EAAA3C,YAEA0C,EAAAL,YAAAK,EAAAL,WAAAM,GAAA,CACAD,EAAAF,EACAG,EAAAJ,EACA,SAAAK,EAGAT,EAAAjB,EAAAyB,GAEA,IAAAE,EAAAF,EAAA5J,SAEA+J,OAAArL,EA4EA,GA1EAoL,IAAAH,EAAA3J,WACA8J,IAAA3C,GAGAoC,EAGAA,IAAAH,KAIAM,EAAAd,EAAAW,IACAK,EAAA3C,cAAAyC,EAMAK,GAAA,GASAhE,EAAA5F,aAAAuJ,EAAAE,GAEAJ,EAAAI,EAAA3C,YAEAmC,EAGAP,EAAAO,GAIAN,EAAAc,EAAA7D,GAAA,GAGA6D,EAAAF,GAKAK,GAAA,GAGiCX,IAEjCW,GAAA,IAGAA,GAAA,IAAAA,GAAAjE,EAAA8D,EAAAD,KAKAR,EAAAS,EAAAD,IAG6BG,IAAA1C,GAAA0C,GAAAzC,IAE7B0C,GAAA,EAGAH,EAAA/C,YAAA8C,EAAA9C,YACA+C,EAAA/C,UAAA8C,EAAA9C,aAMAkD,EAAA,CAEAJ,EAAAF,EACAG,EAAAJ,EACA,SAAAK,EASAT,EAGAP,EAAAO,GAIAN,EAAAc,EAAA7D,GAAA,GAGA6D,EAAAJ,EAOA,GAAAD,IAAAG,EAAAd,EAAAW,KAAAzD,EAAA4D,EAAAC,GACA5D,EAAA3F,YAAAsJ,GACAP,EAAAO,EAAAC,OACqB,CACrB,IAAAK,EAAA5B,EAAAuB,IACA,IAAAK,IACAA,IACAL,EAAAK,GAGAL,EAAAxD,YACAwD,IAAAxD,UAAAJ,EAAAkE,eAAA1E,IAEAQ,EAAA3F,YAAAuJ,GACAV,EAAAU,IAIAA,EAAAF,EACAG,EAAAJ,EAMA,KAAAI,GACAJ,EAAAI,EAAA3C,aACAmC,EAAAjB,EAAAyB,IAGAf,EAAAO,GAIAN,EAAAc,EAAA7D,GAAA,GAEA6D,EAAAJ,EAIA,IAAAU,EAAA3D,EAAAR,EAAA5G,UACA+K,GACAA,EAAAnE,EAAAC,KAjPA,SAAAmE,EAAAnL,GACA,GAAAA,EAAAgB,WAAAmH,EAEA,IADA,IAAAH,EAAAhI,EAAAmG,WACA6B,GAAA,CACA,IAAAnO,EAAAsP,EAAAnB,GACAnO,IACA+P,EAAA/P,GAAAmO,GAIAmD,EAAAnD,GAEAA,IAAAC,aAKAkD,CAAAzC,GAoOA,IA3gBA7P,EAAA8N,EA2gBAyE,EAAA1C,EACA2C,EAAAD,EAAApK,SACAsK,EAAA3C,EAAA3H,SAEA,IAAA2I,EAGA,GAAA0B,IAAAlD,EACAmD,IAAAnD,EACArB,EAAA4B,EAAAC,KACAc,EAAAf,GACA0C,EA7gBA,SAAArE,EAAAC,GAEA,IADA,IAAAgB,EAAAjB,EAAAZ,WACA6B,GAAA,CACA,IAAAuD,EAAAvD,EAAAC,YACAjB,EAAA5F,YAAA4G,GACAA,EAAAuD,EAEA,OAAAvE,EAsgBAwE,CAAA9C,GAthBA7P,EAshBA8P,EAAAxI,UAthBAwG,EAshBAgC,EAAAhC,eArhBAA,IAAAL,EAEAC,EAAAvE,gBAAA2E,EAAA9N,GADA0N,EAAA5J,cAAA9D,MAwhBAuS,EAAAzC,OAEa,GAAA0C,IAAAjD,GAAAiD,IAAAhD,EAAA,CACb,GAAAiD,IAAAD,EAKA,OAJAD,EAAAvD,YAAAc,EAAAd,YACAuD,EAAAvD,UAAAc,EAAAd,WAGAuD,EAGAA,EAAAzC,EAKA,GAAAyC,IAAAzC,EAGAc,EAAAf,QASA,GAPAyB,EAAAiB,EAAAzC,EAAAgB,GAOAT,EACA,QAAA5Q,EAAA,EAAAoI,EAAAwI,EAAAjO,OAA0D3C,EAAAoI,EAAOpI,IAAA,CACjE,IAAAmT,EAAA7B,EAAAV,EAAA5Q,IACAmT,GACA3B,EAAA2B,IAAAjL,YAAA,GAkBA,OAZAmJ,GAAAyB,IAAA1C,KAAAlI,aACA4K,EAAAjE,YACAiE,IAAAjE,UAAAuB,EAAAuC,eAAA1E,IAOAmC,EAAAlI,WAAAC,aAAA2K,EAAA1C,IAGA0C,GAIAM,CA7jBA,SAAAhD,EAAAC,GACA,IACArQ,EACAqT,EACAC,EACAC,EACAC,EALAC,EAAApD,EAAAqD,WAQA,IAAA1T,EAAAyT,EAAA9Q,OAAA,EAA8B3C,GAAA,IAAQA,EAEtCsT,GADAD,EAAAI,EAAAzT,IACAO,KACAgT,EAAAF,EAAAhF,aACAmF,EAAAH,EAAApS,MAEAsS,GACAD,EAAAD,EAAAM,WAAAL,EACAlD,EAAAwD,eAAAL,EAAAD,KAEAE,GACApD,EAAAyD,eAAAN,EAAAD,EAAAE,IAGApD,EAAA5F,aAAA8I,KAEAE,GACApD,EAAA3F,aAAA6I,EAAAE,GASA,IAAAxT,GAFAyT,EAAArD,EAAAsD,YAEA/Q,OAAA,EAA8B3C,GAAA,IAAQA,GAEtC,KADAqT,EAAAI,EAAAzT,IACA8T,YACAR,EAAAD,EAAA9S,MACAgT,EAAAF,EAAAhF,eAGAiF,EAAAD,EAAAM,WAAAL,EAEAlF,EAAAiC,EAAAkD,EAAAD,IACAlD,EAAA2D,kBAAAR,EAAAD,IAGAlF,EAAAiC,EAAA,KAAAiD,IACAlD,EAAApB,gBAAAsE,MA8gBA7T,EAAAD,QAAA0Q","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void) {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args) {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  once(name: string, fn, options: any = {}) {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport route from './router';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nif (!app['route']) {\n  app['route'] = route;\n  app.on('//', _ => { });\n  app.on('#', _ => { });\n  app.on('route', url => route(url));\n  if (typeof document === 'object') {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    });\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update };\nexport { update as event };\nexport default app as IApp;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag == 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'class') name = 'className';\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) element.dataset[cname] = value;\n    } else if (element instanceof SVGElement ||\n      name.startsWith(\"role\") || name.startsWith(\"aria-\")) {\n      if (element.getAttribute(name) !== value) element.setAttribute(name, value)\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${tag.name}_${idx}`\n  if (!id) {\n    id = `_${tag.name}_${idx}`;\n  } else {\n    key = `_${tag.name}_${id}`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state);\n    component.rendered && setTimeout(() => component.rendered(state));\n  }\n  return <div id={id}>{vdom}</div>;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && node.tag && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n  public mounted;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default function route(url: string) {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { app, Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morph = require('morphdom')\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      morph(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n"],"sourceRoot":""}