{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/router.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","App","_events","on","fn","options","push","off","subscribers","filter","sub","length","run","_this","args","_i","arguments","console","assert","delay","apply","once","__assign","_t","clearTimeout","setTimeout","global","window","default","g","Function","eval","e","app_1","vdom_1","component_1","Component","decorator_1","update","event","router_1","createElement","render","Fragment","start","element","model","view","opts","assign","global_event","component","rendered","mount","_","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","descriptor","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","firstChild","appendChild","el","nodeName","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","name_1","a","b","mergeProps","style","cssText","startsWith","dname","dataset","getAttribute","setAttribute","updateElement","ROUTER_EVENT","_a","split","rest","slice","concat","_b","name_2","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","id","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","fragment","createRange","selectNode","createContextualFragment","toElement","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","attributes","localName","getAttributeNS","setAttributeNS","specified","removeAttributeNS","vdom_my_1","morph","html","trim","apprun_1","vdom_html_1","componentCache","components","state","_app","_actions","_history","_history_idx","renderState","vdom","getElementById","setState","history","Promise","then","catch","err","error","_state","enable_history","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","unmount","createComponent","idx","map","__componentCache","mounted"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void) {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args) {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  once(name: string, fn, options: any = {}) {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport route from './router';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nif (!app['route']) {\n  app['route'] = route;\n  app.on('//', _ => { });\n  app.on('#', _ => { });\n  app.on('route', url => route(url));\n  if (typeof document === 'object') {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    });\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport { update as event };\nexport default app as IApp;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children:ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    const node = nodes;\n    if (!element.firstChild) {\n      element.appendChild(create(node));\n    } else {\n      update(element.firstChild, node);\n    }\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(child), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag == 'function')) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n        if (element.dataset[dname] !== value) element.dataset[dname] = value;\n    } else if (name.startsWith(\"role\") || name.startsWith(\"aria-\")) {\n      if (element.getAttribute(name) !== value) element.setAttribute(name, value)\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default function route(url: string) {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morph = require('morphdom')\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      morph(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n  public mounted;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${tag.name}_${idx}`\n  if (!id) {\n    id = `_${tag.name}_${idx}`;\n  } else {\n    key = `_${tag.name}_${id}`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state);\n    component.rendered && setTimeout(() => component.rendered(state));\n  }\n  return <div id={id}>{vdom}</div>;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && node.tag && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n"],"sourceRoot":""}