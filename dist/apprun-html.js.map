{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","[object Object]","_events","fn","options","push","subscribers","filter","sub","length","args","console","assert","delay","apply","once","on","assign","_t","clearTimeout","setTimeout","app","global","window","default","app_1","vdom_1","component_1","Component","decorator_1","update","event","router_1","web_component_1","createElement","render","Fragment","webComponent","start","element","model","view","opts","global_event","component","rendered","mount","_","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","descriptor","defineMetadata","g","Function","e","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","props","undefined","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","insertBefore","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","isSvg","JSON","stringify","createElementNS","a","b","mergeProps","style","cssText","startsWith","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","updateElement","vdom_my_1","html","createComponent","idx","map","vdom","id","__componentCache","mounted","state","Promise","componentCache","components","_app","_actions","_history","_history_idx","run","getElementById","history","then","setState","catch","err","error","_state","renderState","enable_history","callback","prev","next","add_actions","action","newState","actions","getMetadataKeys","getMetadata","all","split","trim","add_action","is_global_event","off","ROUTER_EVENT","rest","customElement","componentClass","HTMLElement","super","shadow","_shadowRoot","attachShadow","from","attributes","item","parentElement","_component","customElements","apprun_1","vdom_html_1","morphdom","firstChild","innerHTML","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","removeAttributeNS"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void) {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args) {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  once(name: string, fn, options: any = {}) {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport route from './router';\nimport webComponent from './web-component';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nif (!app['route']) {\n  app['route'] = route;\n  app.on('//', _ => { });\n  app.on('#', _ => { });\n  app.on('route', url => route(url));\n  if (typeof document === 'object') {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    });\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update };\nexport { update as event };\nexport default app as IApp;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag == 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) element.dataset[cname] = value;\n    } else if (element instanceof SVGElement ||\n      name.startsWith(\"role\") || name.indexOf(\"-\")>=0) {\n      if (name === 'className') name = 'class';\n      if (element.getAttribute(name) !== value) element.setAttribute(name, value)\n    } else {\n      if (name === 'class') name = 'className';\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${tag.name}_${idx}`\n  if (!id) {\n    id = `_${tag.name}_${idx}`;\n  } else {\n    key = `_${tag.name}_${id}`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state);\n    component.rendered && setTimeout(() => component.rendered(state));\n  }\n  return <div id={id}>{vdom}</div>;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n  public mounted;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default function route(url: string) {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\n","import { Component } from './component';\ndeclare var customElements;\n\nexport const customElement = (componentClass, options={}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n    const opts = { render: true, shadow: false, ...options };\n    this._shadowRoot = opts.shadow ?\n      this.attachShadow({ mode: 'open' }) : this;\n    const props = {}\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    if (this.children) {\n      props['children'] = Array.from(this.children);\n      props['children'].forEach(el => el.parentElement.removeChild(el));\n    }\n    this._component = new componentClass(props).mount(this._shadowRoot, opts);\n    this.on = this._component.on.bind(this._component);\n    this.run = this._component.run.bind(this._component);\n  }\n  get state() { return this._component.state; }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { app, Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nimport * as morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      morphdom(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n"],"sourceRoot":""}