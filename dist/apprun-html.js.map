{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","App","this","_events","on","fn","options","debug","console","log","push","run","_this","args","_i","arguments","length","subscribers","assert","filter","sub","delay","apply","once","_t","clearTimeout","setTimeout","default","app_1","vdom_1","component_1","Component","router_1","decorator_1","update","createElement","render","start","element","model","view","opts","assign","global_event","component","mount","_app","document","addEventListener","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","key","descriptor","action","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","id","idx","keyCache","node","firstChild","el","key1","nodeName","key2","toUpperCase","same","parentNode","replaceChild","create","len","Math","min","childNodes","child","textContent","nodeType","createText","old","appendChild","removeChild","lastChild","createDocumentFragment","updateProps","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","name_1","a","b","mergeProps","style","cssText","updateElement","Fragment","ROUTER_EVENT","Router","hash","route","onpopstate","e","location","url","_a","split","rest","slice","concat","state","_history","_history_idx","__assign","renderState","html","getElementById","rendered","setState","Promise","then","catch","err","error","history","enable_history","callback","prev","next","add_actions","is_global_event","startsWith","add_action","newState","actions","all","trim","cache","componentClass","vdom_my_1","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","setAttribute","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","attributes","localName","getAttributeNS","setAttributeNS","getAttribute","specified","removeAttributeNS","morph","apprun_1","vdom_html_1"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    if (options.debug) console.log('on: ' + name);\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  run(name: string, ...args) {\n    const subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) this._events[name] = subscribers.filter((sub) => {\n      let { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        if (options.debug) console.log('run: ' + name, args);\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n  }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      if (options.debug) console.log(`run-delay ${options.delay}:` + name, args);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nexport default new App();\n","import app from './app';\nimport { createElement, render } from './vdom';\nimport { Component, View, Action, Update } from './component';\nimport Router from './router';\nimport { on, update } from './decorator';\n\nexport type VNode = {\n  tag: string,\n  props: {},\n  children: Array<VNode>\n} | string;\n\nexport interface IApp {\n  start<T>(element: Element, model: T, view: View<T>, update: Update<T>, options?: { history }): void;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode;\n  render(element: HTMLElement, node: VNode): void;\n}\n\napp.createElement = createElement;\napp.render = render;\n\napp.start = <T>(element: HTMLElement | string, model: T, view: View<T>, update: Update<T>, options?: { history }) => {\n  const opts = Object.assign(options || {}, { render: true, global_event: true })\n  const component = new Component(model, view, update);\n  component.mount(element, opts);\n  return component;\n};\n\nlet _app: IApp = app;\nif (typeof window === 'object') {\n  if (window['app'] && window['app']['start']) {\n    _app = window['app'];\n  } else {\n    window['app'] = _app;\n    document.addEventListener(\"DOMContentLoaded\", () => new Router());\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport default _app;\n","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = `${key}${name ? ',' + name : ''}`;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, action: [descriptor.value, options] }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = `${key}${name ? ',' + name : ''}`;    \n    Reflect.defineMetadata(`apprun-update:${name}`, { name, key }, target)\n  }\n}\n","import createComponent from './createComponent';\n\nexport type VNode = {\n  tag: string,\n  props: {},\n  children: Array<VNode | string>\n}\n\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '') {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    const id = props && props['id'] || `_${tag.name}_${++idx}`;\n    return createComponent(tag, id, props);\n  }\n  else\n    return tag(props, ch);\n};\n\nlet idx = 0;\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, node: VNode) {\n  // console.log('render', element, node);\n  idx = 0;\n\n  if (!node || !element) return;\n  if (!element.firstChild) {\n    element.appendChild(create(node));\n  } else {\n    update(element.firstChild, node);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n\n  const len = Math.min(element.childNodes.length, node.children.length);\n  for (let i = 0; i < len; i++) {\n    const child = node.children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(node), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (node.children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < node.children.length; i++) {\n      d.appendChild(create(node.children[i]));\n    }\n    element.appendChild(d);\n  }\n\n  updateProps(element, node.props);\n\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children) {\n  return collect(children);\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default class Router {\n\n  route(url: string) {\n    if (!url) url = '#';\n    if (url.indexOf('/') > 0) {\n      const [name, ...rest] = url.split('/');\n      app.run(name, ...rest);\n      app.run(ROUTER_EVENT, name, ...rest);\n    } else {\n      app.run(url);\n      app.run(ROUTER_EVENT, url);\n    }\n  }\n\n  constructor() {\n    app.on('route', hash => this.route(hash));\n    window.onpopstate = e => this.route(location.hash);\n    this.route(location.hash);\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nexport type View<T> = (state: T) => string | Function | void;\r\nexport type Action<T> = (state: T, ...p: any[]) => T | Promise<T>;\r\nexport type Update<T> = { [name: string]: Action<T> | {}[] | void; };\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  protected rendered;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    if (el && app.render) {\r\n      app.render(el, html);\r\n      if (this.rendered) (this.rendered(this.state));\r\n    }\r\n  }\r\n\r\n  public setState(state: T, options: {render:boolean, history:boolean, callback?}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved nor rendered saved\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n    } else {\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n        this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = meta.action || this[meta.key]\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  render = () => this.view(this.state);\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n}\r\n","import app from './app';\n\nconst cache = {}\n\nexport default function (componentClass, id, props) {\n  const component = cache[id] ? cache[id] :\n    (cache[id] = new componentClass(props).mount(id))\n  return <div id={id}>\n    {component.render && component.render()}\n  </div>\n}","import { createElement, updateElement } from './vdom-my';\nexport function render(element, html) {\n  console.assert(!!element);\n  updateElement(element, html);\n}\nexport { createElement };\n\n\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement } from './vdom-my';\nimport morph = require('morphdom')\n\nexport function render(element, html) {\n  console.assert(!!element);\n  if (typeof html === 'string') {\n    if (element.firstChild) {\n      morph(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html);\n  }\n}\nexport { createElement };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };"],"sourceRoot":""}