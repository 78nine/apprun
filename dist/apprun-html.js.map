{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","[object Object]","_events","fn","options","push","subscribers","filter","sub","length","args","console","assert","delay","apply","once","on","assign","_t","clearTimeout","setTimeout","app","global","window","default","app_1","__importDefault","vdom_1","component_1","Component","decorator_1","update","event","web_component_1","router_1","ROUTER_EVENT","ROUTER_404_EVENT","createElement","render","Fragment","webComponent","start","element","model","view","opts","global_event","component","rendered","mount","_","route","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","descriptor","defineMetadata","g","Function","e","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","props","undefined","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","insertBefore","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","isSvg","JSON","stringify","createElementNS","oldProps","newProps","mergeProps","style","cssText","startsWith","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","removeAttribute","updateElement","vdom_my_1","html","_idx","createComponent","idx","map","vdom","id","__componentCache","mounted","state","Promise","__importStar","directive_1","componentCache","components","_app","_actions","_history","_history_idx","h","run","getElementById","tracking_attr","unload","tracking_id","Date","valueOf","toString","observer","MutationObserver","changes","removedNodes","oldValue","from","disconnect","observe","childList","subtree","attributes","attributeOldValue","attributeFilter","history","then","setState","catch","err","error","_state","renderState","enable_history","callback","prev","next","add_actions","action","newState","actions","getMetadataKeys","getMetadata","all","split","trim","add_action","is_global_event","off","getStateValue","setStateValue","type","checked","Number","multiple","selectedIndex","selected","customElement","componentClass","HTMLElement","super","shadow","_shadowRoot","attachShadow","item","parentElement","_component","customElements","rest","apprun_1","vdom_html_1","morphdom_1","firstChild","cloneNode","innerHTML","range","__webpack_exports__","NS_XHTML","doc","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","INPUT","TEXTAREA","newValue","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphChildren","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","hasAttributeNS","removeAttributeNS"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args): number {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n\n    return subscribers ? subscribers.length : 0;\n  }\n\n  once(name: string, fn, options: any = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport webComponent from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\napp.on(ROUTER_EVENT, _ => {/* Intentionally empty */});\napp.on('#', _ => {/* Intentionally empty */});\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update };\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}\n\napp.on('debug', _ => 0);\n","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function, props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${idx}_`\n  if (!id) {\n    id = `_${idx}_`;\n  } else {\n    key = `_${id}_`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state, props);\n    component.rendered && setTimeout(() => component.rendered(state, props));\n  }\n  return <section {...props} id={id}>{vdom}</section>;\n}\n\nlet _idx = 0;\nfunction createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx++));\n  let vdom = node;\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, _idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, _idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.createElement = h;\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        const observer = new MutationObserver(changes => {\r\n          const { removedNodes, oldValue } = changes[0];\r\n          if (oldValue === this.tracking_id || Array.from(removedNodes).indexOf(el) >=0){\r\n            this.unload();\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        if (el.parentNode) observer.observe(el.parentNode, {\r\n          childList: true, subtree: true,\r\n          attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n        });\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] != null ? this['model'] : {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","app.on('$', () => { });\n\nconst getStateValue = (component, name) => {\n  return name ? component['state'][name] : component['state'];\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = { ...component['state'] };\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e)\n    }\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['selectedIndex'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.selectedIndex);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","declare var customElements;\n\nexport const customElement = (componentClass, options={}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n    const opts = { render: true, shadow: false, ...options };\n    this._shadowRoot = opts.shadow ?\n      this.attachShadow({ mode: 'open' }) : this;\n    const props = {}\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    if (this.children) {\n      props['children'] = Array.from(this.children);\n      props['children'].forEach(el => el.parentElement.removeChild(el));\n    }\n    this._component = new componentClass(props).mount(this._shadowRoot, opts);\n    this.on = this._component.on.bind(this._component);\n    this.run = this._component.run.bind(this._component);\n  }\n  get state() { return this._component.state; }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { app, Component, View, Action, Update, on, update };","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","function morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // update attributes on original DOM element\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!toNode.hasAttribute(attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphChildren(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphChildren(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                // walk the children\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    // walk the fromNode children all the way through\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (fromNextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's move the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    // MORPH\n                                    morphChildren(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    } // END: while(curFromNodeChild) {}\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        // MORPH\n                        morphChildren(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphChildren(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n"],"sourceRoot":""}