{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/component.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","_events","on","fn","options","push","off","subscribers","filter","sub","length","run","_this","args","_i","arguments","console","assert","delay","apply","once","__assign","_t","clearTimeout","setTimeout","app","self","global","default","app_1","__importDefault","vdom_1","component_1","Component","decorator_1","update","event","router_1","ROUTER_EVENT","ROUTER_404_EVENT","createElement","render","Fragment","start","element","model","view","opts","global_event","component","rendered","mount","NOOP","_","route","url","document","addEventListener","window","onpopstate","location","hash","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","events","descriptor","toString","g","Function","e","createComponent_1","ATTR_PROPS","collect","children","ch","forEach","Array","isArray","tag","props","undefined","__isAppRunComponent","Error","keyCache","nodes","parent","updateChildren","node","el","key1","nodeName","key2","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","HTMLElement","insertBefore","textContent","nodeType","createText","old","appendChild","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","isSvg","JSON","stringify","createElementNS","cached","name_1","oldProps","newProps","mergeProps","style","cssText","startsWith","cname","replace","match","dataset","SVGElement","getAttribute","setAttribute","removeAttribute","updateElement","vdom_my_1","html","_idx","createComponent","idx","map","vdom","id","__componentCache","mounted","state","Promise","__importStar","directive_1","componentCache","components","REFRESH","_app","_actions","_global_events","_history","_history_idx","_history_prev","setState","history","_history_next","renderState","h","concat","getElementById","unload","tracking_id","Date","valueOf","observer_1","MutationObserver","changes","_a","removedNodes","oldValue","from","disconnect","observe","childList","subtree","attributes","attributeOldValue","attributeFilter","then","catch","err","error","_state","enable_history","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","act","split","trim","unmount","getStateValue","setStateValue","event_1","handler_1","p_1","slice","type","checked","Number","multiple","selectedIndex","selected","rest","_b","name_2","apprun_1","apprun_2","vdom_html_1","morphdom_1","firstChild","cloneNode","innerHTML","range","__webpack_exports__","NS_XHTML","doc","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","INPUT","TEXTAREA","newValue","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","str","createRange","selectNode","body","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","toElKey","isSameNode","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","hasAttributeNS","removeAttributeNS"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args): number {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n\n    return subscribers ? subscribers.length : 0;\n  }\n\n  once(name: string, fn, options: any = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-1';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions } from './types';\nimport { on, update } from './decorator';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\napp.start = <T, E=any>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T, E>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions };\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n}\n\n\n","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (child instanceof HTMLElement) {\n      element.insertBefore(child, el);\n    }\n    else if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${idx}_`\n  if (!id) {\n    id = `_${idx}_`;\n  } else {\n    key = `_${id}_`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state, props);\n    component.rendered && setTimeout(() => component.rendered(state, props));\n  }\n  return <section {...props} id={id}>{vdom}</section>;\n}\n\nlet _idx = 0;\nfunction createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx++));\n  let vdom = node;\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent)\n    vdom = render(node, parent, _idx++);\n  if (vdom && Array.isArray(vdom.children))\n    vdom.children = vdom.children.map(child => createComponent(child, parent, _idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, EventOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T=any, E=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.createElement = h;\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        const observer = new MutationObserver(changes => {\r\n          const { removedNodes, oldValue } = changes[0];\r\n          if (oldValue === this.tracking_id || Array.from(removedNodes).indexOf(el) >=0){\r\n            this.unload();\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        if (el.parentNode) observer.observe(el.parentNode, {\r\n          childList: true, subtree: true,\r\n          attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n        });\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    this.render(el, html);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: EventOptions\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] != null ? this['model'] : {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: EventOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this. _global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","const getStateValue = (component, name) => {\n  return name ? component['state'][name] : component['state'];\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = { ...component['state'] };\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['selectedIndex'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.selectedIndex);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","function morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // update attributes on original DOM element\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!toNode.hasAttribute(attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n"],"sourceRoot":""}