{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/./node_modules/lit-html/lib/default-template-processor.js","webpack://apprun/./node_modules/lit-html/lib/directive.js","webpack://apprun/./node_modules/lit-html/lib/dom.js","webpack://apprun/./node_modules/lit-html/lib/part.js","webpack://apprun/./node_modules/lit-html/lib/parts.js","webpack://apprun/./node_modules/lit-html/lib/render.js","webpack://apprun/./node_modules/lit-html/lib/template-factory.js","webpack://apprun/./node_modules/lit-html/lib/template-instance.js","webpack://apprun/./node_modules/lit-html/lib/template-result.js","webpack://apprun/./node_modules/lit-html/lib/template.js","webpack://apprun/./node_modules/lit-html/lit-html.js","webpack://apprun/./node_modules/lit-html/directives/unsafe-html.js","webpack://apprun/./src/vdom-lit-html.ts","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/app.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/webpack/bootstrap","webpack://apprun/webpack/startup","webpack://apprun/webpack/runtime/define property getters","webpack://apprun/webpack/runtime/global","webpack://apprun/webpack/runtime/hasOwnProperty shorthand","webpack://apprun/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","this","defaultTemplateProcessor","element","name","strings","options","prefix","slice","parts","eventContext","directives","WeakMap","directive","f","args","d","set","isDirective","o","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","i","length","_createPart","AttributePart","l","v","String","text","part","t","setAttribute","_getValue","committer","commit","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","parentNode","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","node","valueAsString","previousSibling","nodeType","data","document","createTextNode","template","templateFactory","update","values","instance","processor","fragment","_clone","itemParts","itemPart","partIndex","item","push","appendIntoPart","insertAfterPart","setValue","BooleanAttributePart","Error","removeAttribute","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","render","result","get","firstChild","Object","assign","appendInto","templateCache","templateCaches","type","stringsArray","keyString","Map","key","join","getTemplateElement","TemplateInstance","__parts","content","cloneNode","importNode","stack","walker","createTreeWalker","nodeIndex","nextNode","index","nodeName","currentNode","pop","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","s","commentMarker","TemplateResult","html","isCommentBinding","commentOpen","lastIndexOf","indexOf","attributeMatch","substr","createElement","getHTML","innerHTML","SVGTemplateResult","svgElement","marker","Math","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","nodesToRemove","lastPartIndex","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","statics","split","tagName","parent","lastIndex","insert","createMarker","match","str","suffix","isTemplatePartActive","createComment","svg","previousValues","unsafeHTML","previousValue","_render","vdom","run","getComponent","component","parentElement","console","assert","setState","state","App","_events","fn","subscribers","filter","sub","forEach","delay","apply","on","_t","clearTimeout","setTimeout","app","self","g","global","customElement","componentClass","HTMLElement","_component","observedAttributes","map","attr","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","attrMap","reduce","lc","_attrMap","props","from","defineProperty","attributeChangedCallback","configurable","enumerable","children","el","mount","_props","dispatchEvent","bind","mounted","new_state","unload","unmount","oldValue","mappedName","requestAnimationFrame","Reflect","meta","metadataKey","metadataValue","target","getPrototypeOf","keys","events","descriptor","toString","defineMetadata","constructor","getStateValue","setStateValue","componentCache","components","REFRESH","Component","view","_app","_actions","_global_events","_history","_history_idx","_history_prev","history","_history_next","h","tag","startsWith","substring","handler","p","checked","Number","multiple","selected","_view","_","getElementById","tracking_attr","tracking_id","Date","valueOf","MutationObserver","observer","changes","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","rendered","Promise","all","_state","then","catch","err","error","renderState","enable_history","callback","global_event","prev","next","route","add_actions","id","action","current_state","newState","actions","getMetadataKeys","getMetadata","act","trim","add_action","is_global_event","off","__isAppRunComponent","ROUTER_EVENT","ROUTER_404_EVENT","url","rest","model","NOOP","onpopstate","location","hash","hasAttribute","Fragment","collect","ch","c","keyCache","updateElement","nodes","createComponent","isSvg","updateChildren","key1","key2","toUpperCase","same","updateProps","replaceChild","create","old_len","childNodes","new_len","len","min","child","textContent","nodeValue","createText","SVGElement","old","temp","lastChild","createDocumentFragment","div","insertAdjacentHTML","JSON","stringify","createElementNS","cached","oldProps","newProps","mergeProps","cname","replace","dataset","style","cssText","xname","removeAttributeNS","setAttributeNS","test","idx","now","asTag","__componentCache","render_component","new_parent","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","toStringTag"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,MAAM,WACT,M,sECwCO,MAAMC,EAA2B,IAjCjC,MAUH,2BAA2BC,EAASC,EAAMC,EAASC,GAC/C,MAAMC,EAASH,EAAK,GACpB,MAAe,MAAXG,EACkB,IAAI,IAAkBJ,EAASC,EAAKI,MAAM,GAAIH,GAC/CI,MAEN,MAAXF,EACO,CAAC,IAAI,KAAUJ,EAASC,EAAKI,MAAM,GAAIF,EAAQI,eAE3C,MAAXH,EACO,CAAC,IAAI,KAAqBJ,EAASC,EAAKI,MAAM,GAAIH,IAE3C,IAAI,KAAmBF,EAASC,EAAMC,GACvCI,MAMrB,qBAAqBH,GACjB,OAAO,IAAI,KAASA,M,uCClC5B,MAAMK,EAAa,IAAIC,QAyCVC,EAAaC,GAAM,IAAKC,KACjC,MAAMC,EAAIF,KAAKC,GAEf,OADAJ,EAAWM,IAAID,GAAG,GACXA,GAEEE,EAAeC,GACJ,mBAANA,GAAoBR,EAAWS,IAAID,I,iDC5C9C,MAAME,EAAiC,oBAAXC,QACN,MAAzBA,OAAOC,qBAEHC,IADJF,OAAOC,eAAeE,0BAObC,EAAgB,CAACC,EAAWC,EAAOC,EAAM,KAAMC,EAAS,QACjE,KAAOF,IAAUC,GAAK,CAClB,MAAME,EAAIH,EAAMI,YAChBL,EAAUM,aAAaL,EAAOE,GAC9BF,EAAQG,IAOHG,EAAc,CAACP,EAAWC,EAAOC,EAAM,QAChD,KAAOD,IAAUC,GAAK,CAClB,MAAME,EAAIH,EAAMI,YAChBL,EAAUQ,YAAYP,GACtBA,EAAQG,K,uCCvBT,MAAMK,EAAW,GAIXC,EAAU,I,sICFhB,MAAMC,EAAeC,GACN,OAAVA,KACe,iBAAVA,GAAuC,mBAAVA,GAEjCC,EAAcD,GAChBE,MAAMC,QAAQH,OAEdA,IAASA,EAAMI,OAAOC,WAO1B,MAAMC,EACT,YAAY1C,EAASC,EAAMC,GACvBJ,KAAK6C,OAAQ,EACb7C,KAAKE,QAAUA,EACfF,KAAKG,KAAOA,EACZH,KAAKI,QAAUA,EACfJ,KAAKQ,MAAQ,GACb,IAAK,IAAIsC,EAAI,EAAGA,EAAI1C,EAAQ2C,OAAS,EAAGD,IACpC9C,KAAKQ,MAAMsC,GAAK9C,KAAKgD,cAM7B,cACI,OAAO,IAAIC,EAAcjD,MAE7B,YACI,MAAMI,EAAUJ,KAAKI,QACf8C,EAAI9C,EAAQ2C,OAAS,EACrBvC,EAAQR,KAAKQ,MAcnB,GAAU,IAAN0C,GAA0B,KAAf9C,EAAQ,IAA4B,KAAfA,EAAQ,GAAW,CACnD,MAAM+C,EAAI3C,EAAM,GAAG8B,MACnB,GAAiB,iBAANa,EACP,OAAOC,OAAOD,GAElB,GAAiB,iBAANA,IAAmBZ,EAAWY,GACrC,OAAOA,EAGf,IAAIE,EAAO,GACX,IAAK,IAAIP,EAAI,EAAGA,EAAII,EAAGJ,IAAK,CACxBO,GAAQjD,EAAQ0C,GAChB,MAAMQ,EAAO9C,EAAMsC,GACnB,QAAavB,IAAT+B,EAAoB,CACpB,MAAMH,EAAIG,EAAKhB,MACf,GAAID,EAAYc,KAAOZ,EAAWY,GAC9BE,GAAqB,iBAANF,EAAiBA,EAAIC,OAAOD,QAG3C,IAAK,MAAMI,KAAKJ,EACZE,GAAqB,iBAANE,EAAiBA,EAAIH,OAAOG,IAM3D,OADAF,GAAQjD,EAAQ8C,GACTG,EAEX,SACQrD,KAAK6C,QACL7C,KAAK6C,OAAQ,EACb7C,KAAKE,QAAQsD,aAAaxD,KAAKG,KAAMH,KAAKyD,eAO/C,MAAMR,EACT,YAAYS,GACR1D,KAAKsC,WAAQf,EACbvB,KAAK0D,UAAYA,EAErB,SAASpB,GACDA,IAAU,KAAcD,EAAYC,IAAUA,IAAUtC,KAAKsC,QAC7DtC,KAAKsC,MAAQA,GAIR,OAAYA,KACbtC,KAAK0D,UAAUb,OAAQ,IAInC,SACI,MAAO,OAAY7C,KAAKsC,QAAQ,CAC5B,MAAM1B,EAAYZ,KAAKsC,MACvBtC,KAAKsC,MAAQ,IACb1B,EAAUZ,MAEVA,KAAKsC,QAAU,KAGnBtC,KAAK0D,UAAUC,UAWhB,MAAMC,EACT,YAAYvD,GACRL,KAAKsC,WAAQf,EACbvB,KAAK6D,oBAAiBtC,EACtBvB,KAAKK,QAAUA,EAOnB,WAAWqB,GACP1B,KAAK8D,UAAYpC,EAAUqC,aAAY,WACvC/D,KAAKgE,QAAUtC,EAAUqC,aAAY,WASzC,gBAAgBE,GACZjE,KAAK8D,UAAYG,EACjBjE,KAAKgE,QAAUC,EAAIlC,YAOvB,eAAeuB,GACXA,EAAKY,SAASlE,KAAK8D,WAAY,WAC/BR,EAAKY,SAASlE,KAAKgE,SAAU,WAOjC,gBAAgBC,GACZA,EAAIC,SAASlE,KAAK8D,WAAY,WAC9B9D,KAAKgE,QAAUC,EAAID,QACnBC,EAAID,QAAUhE,KAAK8D,UAEvB,SAASxB,GACLtC,KAAK6D,eAAiBvB,EAE1B,SACI,GAAkC,OAA9BtC,KAAK8D,UAAUK,WACf,OAEJ,MAAO,OAAYnE,KAAK6D,iBAAiB,CACrC,MAAMjD,EAAYZ,KAAK6D,eACvB7D,KAAK6D,eAAiB,IACtBjD,EAAUZ,MAEd,MAAMsC,EAAQtC,KAAK6D,eACfvB,IAAU,MAGVD,EAAYC,GACRA,IAAUtC,KAAKsC,OACftC,KAAKoE,aAAa9B,GAGjBA,aAAiB,IACtBtC,KAAKqE,uBAAuB/B,GAEvBA,aAAiBgC,KACtBtE,KAAKuE,aAAajC,GAEbC,EAAWD,GAChBtC,KAAKwE,iBAAiBlC,GAEjBA,IAAU,KACftC,KAAKsC,MAAQ,IACbtC,KAAKyE,SAILzE,KAAKoE,aAAa9B,IAG1B,SAASoC,GACL1E,KAAKgE,QAAQG,WAAWnC,aAAa0C,EAAM1E,KAAKgE,SAEpD,aAAa1B,GACLtC,KAAKsC,QAAUA,IAGnBtC,KAAKyE,QACLzE,KAAKkE,SAAS5B,GACdtC,KAAKsC,MAAQA,GAEjB,aAAaA,GACT,MAAMoC,EAAO1E,KAAK8D,UAAU/B,YAItB4C,EAAiC,iBAHvCrC,EAAiB,MAATA,EAAgB,GAAKA,GAGqBA,EAAQc,OAAOd,GAC7DoC,IAAS1E,KAAKgE,QAAQY,iBACJ,IAAlBF,EAAKG,SAILH,EAAKI,KAAOH,EAGZ3E,KAAKuE,aAAaQ,SAASC,eAAeL,IAE9C3E,KAAKsC,MAAQA,EAEjB,uBAAuBA,GACnB,MAAM2C,EAAWjF,KAAKK,QAAQ6E,gBAAgB5C,GAC9C,GAAItC,KAAKsC,iBAAiB,KACtBtC,KAAKsC,MAAM2C,WAAaA,EACxBjF,KAAKsC,MAAM6C,OAAO7C,EAAM8C,YAEvB,CAKD,MAAMC,EAAW,IAAI,IAAiBJ,EAAU3C,EAAMgD,UAAWtF,KAAKK,SAChEkF,EAAWF,EAASG,SAC1BH,EAASF,OAAO7C,EAAM8C,QACtBpF,KAAKuE,aAAagB,GAClBvF,KAAKsC,MAAQ+C,GAGrB,iBAAiB/C,GAURE,MAAMC,QAAQzC,KAAKsC,SACpBtC,KAAKsC,MAAQ,GACbtC,KAAKyE,SAIT,MAAMgB,EAAYzF,KAAKsC,MACvB,IACIoD,EADAC,EAAY,EAEhB,IAAK,MAAMC,KAAQtD,EAEfoD,EAAWD,EAAUE,QAEJpE,IAAbmE,IACAA,EAAW,IAAI9B,EAAS5D,KAAKK,SAC7BoF,EAAUI,KAAKH,GACG,IAAdC,EACAD,EAASI,eAAe9F,MAGxB0F,EAASK,gBAAgBN,EAAUE,EAAY,KAGvDD,EAASM,SAASJ,GAClBF,EAAS/B,SACTgC,IAEAA,EAAYF,EAAU1C,SAEtB0C,EAAU1C,OAAS4C,EACnB3F,KAAKyE,MAAMiB,GAAYA,EAAS1B,UAGxC,MAAMF,EAAY9D,KAAK8D,YACnB,QAAY9D,KAAK8D,UAAUK,WAAYL,EAAU/B,YAAa/B,KAAKgE,UAUpE,MAAMiC,EACT,YAAY/F,EAASC,EAAMC,GAGvB,GAFAJ,KAAKsC,WAAQf,EACbvB,KAAK6D,oBAAiBtC,EACC,IAAnBnB,EAAQ2C,QAA+B,KAAf3C,EAAQ,IAA4B,KAAfA,EAAQ,GACrD,MAAM,IAAI8F,MAAM,2DAEpBlG,KAAKE,QAAUA,EACfF,KAAKG,KAAOA,EACZH,KAAKI,QAAUA,EAEnB,SAASkC,GACLtC,KAAK6D,eAAiBvB,EAE1B,SACI,MAAO,OAAYtC,KAAK6D,iBAAiB,CACrC,MAAMjD,EAAYZ,KAAK6D,eACvB7D,KAAK6D,eAAiB,IACtBjD,EAAUZ,MAEd,GAAIA,KAAK6D,iBAAmB,IACxB,OAEJ,MAAMvB,IAAUtC,KAAK6D,eACjB7D,KAAKsC,QAAUA,IACXA,EACAtC,KAAKE,QAAQsD,aAAaxD,KAAKG,KAAM,IAGrCH,KAAKE,QAAQiG,gBAAgBnG,KAAKG,MAEtCH,KAAKsC,MAAQA,GAEjBtC,KAAK6D,eAAiB,KAYvB,MAAMuC,UAA0BxD,EACnC,YAAY1C,EAASC,EAAMC,GACvBiG,MAAMnG,EAASC,EAAMC,GACrBJ,KAAKsG,OACmB,IAAnBlG,EAAQ2C,QAA+B,KAAf3C,EAAQ,IAA4B,KAAfA,EAAQ,GAE9D,cACI,OAAO,IAAImG,EAAavG,MAE5B,YACI,OAAIA,KAAKsG,OACEtG,KAAKQ,MAAM,GAAG8B,MAElB+D,MAAM5C,YAEjB,SACQzD,KAAK6C,QACL7C,KAAK6C,OAAQ,EAEb7C,KAAKE,QAAQF,KAAKG,MAAQH,KAAKyD,cAIpC,MAAM8C,UAAqBtD,GAMlC,IAAIuD,GAAwB,EAG5B,MACI,IACI,MAAMnG,EAAU,CACZ,cAEI,OADAmG,GAAwB,GACjB,IAIfnF,OAAOoF,iBAAiB,OAAQpG,EAASA,GAEzCgB,OAAOqF,oBAAoB,OAAQrG,EAASA,GAEhD,MAAOsG,MAbX,GAiBO,MAAMC,EACT,YAAY1G,EAAS2G,EAAWpG,GAC5BT,KAAKsC,WAAQf,EACbvB,KAAK6D,oBAAiBtC,EACtBvB,KAAKE,QAAUA,EACfF,KAAK6G,UAAYA,EACjB7G,KAAKS,aAAeA,EACpBT,KAAK8G,mBAAsBC,GAAM/G,KAAKgH,YAAYD,GAEtD,SAASzE,GACLtC,KAAK6D,eAAiBvB,EAE1B,SACI,MAAO,OAAYtC,KAAK6D,iBAAiB,CACrC,MAAMjD,EAAYZ,KAAK6D,eACvB7D,KAAK6D,eAAiB,IACtBjD,EAAUZ,MAEd,GAAIA,KAAK6D,iBAAmB,IACxB,OAEJ,MAAMoD,EAAcjH,KAAK6D,eACnBqD,EAAclH,KAAKsC,MACnB6E,EAAsC,MAAfF,GACV,MAAfC,IACKD,EAAYG,UAAYF,EAAYE,SACjCH,EAAYI,OAASH,EAAYG,MACjCJ,EAAYK,UAAYJ,EAAYI,SAC1CC,EAAmC,MAAfN,IAAuC,MAAfC,GAAuBC,GACrEA,GACAnH,KAAKE,QAAQwG,oBAAoB1G,KAAK6G,UAAW7G,KAAK8G,mBAAoB9G,KAAKwH,WAE/ED,IACAvH,KAAKwH,UAAYC,EAAWR,GAC5BjH,KAAKE,QAAQuG,iBAAiBzG,KAAK6G,UAAW7G,KAAK8G,mBAAoB9G,KAAKwH,YAEhFxH,KAAKsC,MAAQ2E,EACbjH,KAAK6D,eAAiB,IAE1B,YAAY6D,GACkB,mBAAf1H,KAAKsC,MACZtC,KAAKsC,MAAMqF,KAAK3H,KAAKS,cAAgBT,KAAKE,QAASwH,GAGnD1H,KAAKsC,MAAM0E,YAAYU,IAOnC,MAAMD,EAAcvG,GAAMA,IACrBsF,EACG,CAAEY,QAASlG,EAAEkG,QAASE,QAASpG,EAAEoG,QAASD,KAAMnG,EAAEmG,MAClDnG,EAAEkG,U,sEC1cH,MAAM5G,EAAQ,IAAIG,QAgBZiH,EAAS,CAACC,EAAQnG,EAAWrB,KACtC,IAAIiD,EAAO9C,EAAMsH,IAAIpG,QACRH,IAAT+B,KACA,QAAY5B,EAAWA,EAAUqG,YACjCvH,EAAMQ,IAAIU,EAAW4B,EAAO,IAAI,KAAS0E,OAAOC,OAAO,CAAE/C,gBAAe,KAAI7E,KAC5EiD,EAAK4E,WAAWxG,IAEpB4B,EAAK0C,SAAS6B,GACdvE,EAAKK,W,4CCtBF,SAASuB,EAAgB2C,GAC5B,IAAIM,EAAgBC,EAAeN,IAAID,EAAOQ,WACxB9G,IAAlB4G,IACAA,EAAgB,CACZG,aAAc,IAAI3H,QAClB4H,UAAW,IAAIC,KAEnBJ,EAAepH,IAAI6G,EAAOQ,KAAMF,IAEpC,IAAIlD,EAAWkD,EAAcG,aAAaR,IAAID,EAAOzH,SACrD,QAAiBmB,IAAb0D,EACA,OAAOA,EAIX,MAAMwD,EAAMZ,EAAOzH,QAAQsI,KAAK,MAWhC,OATAzD,EAAWkD,EAAcI,UAAUT,IAAIW,QACtBlH,IAAb0D,IAEAA,EAAW,IAAI,KAAS4C,EAAQA,EAAOc,sBAEvCR,EAAcI,UAAUvH,IAAIyH,EAAKxD,IAGrCkD,EAAcG,aAAatH,IAAI6G,EAAOzH,QAAS6E,GACxCA,EAEJ,MAAMmD,EAAiB,IAAII,K,qDC3B3B,MAAMI,EACT,YAAY3D,EAAUK,EAAWjF,GAC7BL,KAAK6I,QAAU,GACf7I,KAAKiF,SAAWA,EAChBjF,KAAKsF,UAAYA,EACjBtF,KAAKK,QAAUA,EAEnB,OAAO+E,GACH,IAAItC,EAAI,EACR,IAAK,MAAMQ,KAAQtD,KAAK6I,aACPtH,IAAT+B,GACAA,EAAK0C,SAASZ,EAAOtC,IAEzBA,IAEJ,IAAK,MAAMQ,KAAQtD,KAAK6I,aACPtH,IAAT+B,GACAA,EAAKK,SAIjB,SAsCI,MAAM4B,EAAW,KACbvF,KAAKiF,SAAS/E,QAAQ4I,QAAQC,WAAU,GACxChE,SAASiE,WAAWhJ,KAAKiF,SAAS/E,QAAQ4I,SAAS,GACjDG,EAAQ,GACRzI,EAAQR,KAAKiF,SAASzE,MAEtB0I,EAASnE,SAASoE,iBAAiB5D,EAAU,IAAkD,MAAM,GAC3G,IAEIjC,EAFAqC,EAAY,EACZyD,EAAY,EAEZ1E,EAAOwE,EAAOG,WAElB,KAAO1D,EAAYnF,EAAMuC,QAErB,GADAO,EAAO9C,EAAMmF,IACR,QAAqBrC,GAA1B,CAQA,KAAO8F,EAAY9F,EAAKgG,OACpBF,IACsB,aAAlB1E,EAAK6E,WACLN,EAAMpD,KAAKnB,GACXwE,EAAOM,YAAc9E,EAAKoE,SAEK,QAA9BpE,EAAOwE,EAAOG,cAKfH,EAAOM,YAAcP,EAAMQ,MAC3B/E,EAAOwE,EAAOG,YAItB,GAAkB,SAAd/F,EAAK+E,KAAiB,CACtB,MAAM/E,EAAOtD,KAAKsF,UAAUoE,qBAAqB1J,KAAKK,SACtDiD,EAAKqG,gBAAgBjF,EAAKE,iBAC1B5E,KAAK6I,QAAQhD,KAAKvC,QAGlBtD,KAAK6I,QAAQhD,QAAQ7F,KAAKsF,UAAUsE,2BAA2BlF,EAAMpB,EAAKnD,KAAMmD,EAAKlD,QAASJ,KAAKK,UAEvGsF,SA/BI3F,KAAK6I,QAAQhD,UAAKtE,GAClBoE,IAoCR,OAJI,OACAZ,SAAS8E,UAAUtE,GACnBjE,eAAewI,QAAQvE,IAEpBA,K,6DCxGf,MAAMwE,EAAS1I,OAAO2I,cAClBA,aAAaC,aAAa,WAAY,CAAEC,WAAaC,GAAMA,IACzDC,EAAgB,IAAI,QAKnB,MAAMC,EACT,YAAYjK,EAASgF,EAAQiD,EAAM/C,GAC/BtF,KAAKI,QAAUA,EACfJ,KAAKoF,OAASA,EACdpF,KAAKqI,KAAOA,EACZrI,KAAKsF,UAAYA,EAKrB,UACI,MAAMpC,EAAIlD,KAAKI,QAAQ2C,OAAS,EAChC,IAAIuH,EAAO,GACPC,GAAmB,EACvB,IAAK,IAAIzH,EAAI,EAAGA,EAAII,EAAGJ,IAAK,CACxB,MAAMqH,EAAInK,KAAKI,QAAQ0C,GAkBjB0H,EAAcL,EAAEM,YAAY,WAIlCF,GAAoBC,GAAe,GAAKD,KACG,IAAvCJ,EAAEO,QAAQ,SAAOF,EAAc,GAInC,MAAMG,EAAiB,UAA4BR,GAO/CG,GANmB,OAAnBK,EAMQR,GAAKI,EAAmBH,EAAgB,KAMxCD,EAAES,OAAO,EAAGD,EAAerB,OAASqB,EAAe,GACvDA,EAAe,GAAK,KAAuBA,EAAe,GAC1D,KAIZ,OADAL,GAAQtK,KAAKI,QAAQ8C,GACdoH,EAEX,qBACI,MAAMrF,EAAWF,SAAS8F,cAAc,YACxC,IAAIvI,EAAQtC,KAAK8K,UASjB,YARevJ,IAAXwI,IAKAzH,EAAQyH,EAAOG,WAAW5H,IAE9B2C,EAAS8F,UAAYzI,EACd2C,GAUR,MAAM+F,UAA0BX,EACnC,UACI,MAAO,QAAQhE,MAAMyE,kBAEzB,qBACI,MAAM7F,EAAWoB,MAAMsC,qBACjBG,EAAU7D,EAAS6D,QACnBmC,EAAanC,EAAQf,WAG3B,OAFAe,EAAQ5G,YAAY+I,IACpB,OAAcnC,EAASmC,EAAWlD,YAC3B9C,K,qFC9GR,MAAMiG,EAAS,SAAS9H,OAAO+H,KAAKC,UAAU7K,MAAM,OAK9C8K,EAAa,UAAOH,UACpBI,EAAc,IAAIC,OAAO,GAAGL,KAAUG,KAItCG,EAAuB,QAI7B,MAAMC,EACT,YAAY5D,EAAQ3H,GAChBF,KAAKQ,MAAQ,GACbR,KAAKE,QAAUA,EACf,MAAMwL,EAAgB,GAChBzC,EAAQ,GAERC,EAASnE,SAASoE,iBAAiBjJ,EAAQ4I,QAAS,IAAkD,MAAM,GAIlH,IAAI6C,EAAgB,EAChBrC,GAAS,EACT3D,EAAY,EAChB,MAAM,QAAEvF,EAASgF,QAAQ,OAAErC,IAAa8E,EACxC,KAAOlC,EAAY5C,GAAQ,CACvB,MAAM2B,EAAOwE,EAAOG,WACpB,GAAa,OAAT3E,GASJ,GADA4E,IACsB,IAAlB5E,EAAKG,SAAwC,CAC7C,GAAIH,EAAKkH,gBAAiB,CACtB,MAAMC,EAAanH,EAAKmH,YAClB,OAAE9I,GAAW8I,EAMnB,IAAIC,EAAQ,EACZ,IAAK,IAAIhJ,EAAI,EAAGA,EAAIC,EAAQD,IACpBiJ,EAASF,EAAW/I,GAAG3C,KAAMqL,IAC7BM,IAGR,KAAOA,KAAU,GAAG,CAGhB,MAAME,EAAgB5L,EAAQuF,GAExBxF,EAAO8L,EAAuBC,KAAKF,GAAe,GAMlDG,EAAsBhM,EAAKiM,cAAgBZ,EAC3Ca,EAAiB3H,EAAK4H,aAAaH,GACzCzH,EAAKyB,gBAAgBgG,GACrB,MAAMI,EAAUF,EAAeG,MAAMlB,GACrCtL,KAAKQ,MAAMqF,KAAK,CAAEwC,KAAM,YAAaiB,QAAOnJ,OAAMC,QAASmM,IAC3D5G,GAAa4G,EAAQxJ,OAAS,GAGjB,aAAjB2B,EAAK+H,UACLxD,EAAMpD,KAAKnB,GACXwE,EAAOM,YAAc9E,EAAKoE,cAG7B,GAAsB,IAAlBpE,EAAKG,SAAqC,CAC/C,MAAMC,EAAOJ,EAAKI,KAClB,GAAIA,EAAK4F,QAAQQ,IAAW,EAAG,CAC3B,MAAMwB,EAAShI,EAAKP,WACd/D,EAAU0E,EAAK0H,MAAMlB,GACrBqB,EAAYvM,EAAQ2C,OAAS,EAGnC,IAAK,IAAID,EAAI,EAAGA,EAAI6J,EAAW7J,IAAK,CAChC,IAAI8J,EACAzC,EAAI/J,EAAQ0C,GAChB,GAAU,KAANqH,EACAyC,EAASC,QAER,CACD,MAAMC,EAAQb,EAAuBC,KAAK/B,GAC5B,OAAV2C,GAAkBf,EAASe,EAAM,GAAItB,KACrCrB,EAAIA,EAAE5J,MAAM,EAAGuM,EAAMxD,OAASwD,EAAM,GAChCA,EAAM,GAAGvM,MAAM,GAAIiL,EAAqBzI,QAAU+J,EAAM,IAEhEF,EAAS7H,SAASC,eAAemF,GAErCuC,EAAO1K,aAAa4K,EAAQlI,GAC5B1E,KAAKQ,MAAMqF,KAAK,CAAEwC,KAAM,OAAQiB,QAASA,IAIlB,KAAvBlJ,EAAQuM,IACRD,EAAO1K,aAAa6K,IAAgBnI,GACpCgH,EAAc7F,KAAKnB,IAGnBA,EAAKI,KAAO1E,EAAQuM,GAGxBhH,GAAagH,QAGhB,GAAsB,IAAlBjI,EAAKG,SACV,GAAIH,EAAKI,OAASoG,EAAQ,CACtB,MAAMwB,EAAShI,EAAKP,WAKS,OAAzBO,EAAKE,iBAA4B0E,IAAUqC,IAC3CrC,IACAoD,EAAO1K,aAAa6K,IAAgBnI,IAExCiH,EAAgBrC,EAChBtJ,KAAKQ,MAAMqF,KAAK,CAAEwC,KAAM,OAAQiB,UAGP,OAArB5E,EAAK3C,YACL2C,EAAKI,KAAO,IAGZ4G,EAAc7F,KAAKnB,GACnB4E,KAEJ3D,QAEC,CACD,IAAI7C,GAAK,EACT,MAAmD,KAA3CA,EAAI4B,EAAKI,KAAK4F,QAAQQ,EAAQpI,EAAI,KAKtC9C,KAAKQ,MAAMqF,KAAK,CAAEwC,KAAM,OAAQiB,OAAQ,IACxC3D,UAjHRuD,EAAOM,YAAcP,EAAMQ,MAuHnC,IAAK,MAAM3H,KAAK4J,EACZ5J,EAAEqC,WAAWjC,YAAYJ,IAIrC,MAAMiK,EAAW,CAACgB,EAAKC,KACnB,MAAM1D,EAAQyD,EAAIhK,OAASiK,EAAOjK,OAClC,OAAOuG,GAAS,GAAKyD,EAAIxM,MAAM+I,KAAW0D,GAEjCC,EAAwB3J,IAAyB,IAAhBA,EAAKgG,MAGtCuD,EAAe,IAAM9H,SAASmI,cAAc,IA2B5CjB,EAEb,8I,mMCxKsB,oBAAX5K,SACNA,OAAwB,kBAAMA,OAAwB,gBAAI,KAAKwE,KAAK,SAMlE,MAAMyE,EAAO,CAAClK,KAAYgF,IAAW,IAAI,IAAehF,EAASgF,EAAQ,OAAQ,KAK3E+H,EAAM,CAAC/M,KAAYgF,IAAW,IAAI,IAAkBhF,EAASgF,EAAQ,MAAO,M,0UCrCzF,MAAMgI,EAAiB,IAAIzM,QAQd0M,GAAa,SAAW/K,GAAWgB,IAC5C,KAAMA,aAAgB,MAClB,MAAM,IAAI4C,MAAM,gDAEpB,MAAMoH,EAAgBF,EAAetF,IAAIxE,GACzC,QAAsB/B,IAAlB+L,IAA+B,QAAYhL,IAC3CA,IAAUgL,EAAchL,OAASgB,EAAKhB,QAAUgL,EAAc/H,SAC9D,OAEJ,MAAMN,EAAWF,SAAS8F,cAAc,YACxC5F,EAAS8F,UAAYzI,EACrB,MAAMiD,EAAWR,SAASiE,WAAW/D,EAAS6D,SAAS,GACvDxF,EAAK0C,SAAST,GACd6H,EAAepM,IAAIsC,EAAM,CAAEhB,QAAOiD,gBCrCtC,SAASgI,EAAQrN,EAASsN,EAAMd,GACV,iBAATc,GACT,QAAO,IAAI,GAAGH,EAAWG,KAAStN,GACzBsN,aAAgB,MACzB,QAAOA,EAAMtN,KAEb,QAAcA,EAASsN,EAAMd,GAC7B,YAAaxM,IAIjB,MAAMuN,GAAM,SAAU,CAAC/F,KAAU5G,IAAUwC,IACzC,KAAMA,aAAgB,MACpB,MAAM,IAAI4C,MAAM,6CAElB,IAAI,QAAEhG,EAAO,UAAE2G,GAAcvD,EAC7B,MAAMoK,EAAe,KACnB,IAAIC,EAAYzN,EAAoB,WACpC,MAAQyN,GAAazN,GACnBA,EAAUA,EAAQ0N,cAClBD,EAAYzN,GAAWA,EAAoB,WAG7C,OADA2N,QAAQC,SAASH,EAAW,wBACrBA,GAEY,iBAAVjG,EACTxH,EAAQ,KAAK2G,KAAeE,GAAK2G,IAAeD,IAAI/F,KAAU5G,EAAMiG,GAC1C,mBAAVW,IAChBxH,EAAQ,KAAK2G,KAAeE,GAAK2G,IAAeK,SAASrG,EAAMgG,IAAeM,SAAUlN,EAAMiG,QCvBlG,wBAAoB,KACpB,iBAAa,EACb,mBAAe,KAEf,QAAe,EAAG,QAEI,iBAAX1F,SACTA,OAAa,KAAI,KACjBA,OAAY,IAAI,KAChBA,OAAY,IAAIoM,I,+JCjBX,MAAMQ,EAWX,cACEjO,KAAKkO,QAAU,GAGjB,GAAG/N,EAAcgO,EAAuB9N,EAAwB,IAC9DL,KAAKkO,QAAQ/N,GAAQH,KAAKkO,QAAQ/N,IAAS,GAC3CH,KAAKkO,QAAQ/N,GAAM0F,KAAK,CAAEsI,KAAI9N,YAGhC,IAAIF,EAAcgO,GAChB,MAAMC,EAAcpO,KAAKkO,QAAQ/N,IAAS,GAE1CH,KAAKkO,QAAQ/N,GAAQiO,EAAYC,QAAQC,GAAQA,EAAIH,KAAOA,IAG9D,KAAKhO,GACH,OAAOH,KAAKkO,QAAQ/N,GAGtB,IAAIA,KAAiBW,GACnB,MAAMsN,EAAcpO,KAAKkO,QAAQ/N,IAAS,GAqB1C,OAnBA0N,QAAQC,OAAOM,GAAeA,EAAYrL,OAAS,EAAG,4BAA8B5C,GAKpFH,KAAKkO,QAAQ/N,GAAQiO,EAAYC,QAAQC,IAC/BA,EAAIjO,QAAQgH,OAGtB+G,EAAYG,SAASD,IACnB,MAAM,GAAEH,EAAE,QAAE9N,GAAYiO,EAMxB,OALIjO,EAAQmO,MACVxO,KAAKwO,MAAMrO,EAAMgO,EAAIrN,EAAMT,GAE3B8N,EAAGM,MAAMzO,KAAMc,IAETwN,EAAIjO,QAAQgH,QAGf+G,EAAYrL,OAGrB,KAAK5C,EAAcgO,EAAI9N,EAAwB,IAC7CL,KAAK0O,GAAGvO,EAAMgO,EAAI,OAAF,wBAAO9N,GAAO,CAAEgH,MAAM,KAGhC,MAAMlH,EAAMgO,EAAIrN,EAAMT,GACxBA,EAAQsO,IAAIC,aAAavO,EAAQsO,IACrCtO,EAAQsO,GAAKE,YAAW,KACtBD,aAAavO,EAAQsO,IACrBR,EAAGM,MAAMzO,KAAMc,KACdT,EAAQmO,QAKf,IAAIM,EACJ,MAAMpP,EAAwB,iBAATqP,MAAqBA,KAAKA,OAASA,MAAQA,MAC3C,iBAAX,EAAAC,GAAuB,EAAAA,EAAOC,SAAW,EAAAD,GAAU,EAAAA,EACzDtP,EAAU,KAAKA,EAAsB,gBACvCoP,EAAMpP,EAAU,KAEhBoP,EAAM,IAAIb,EACVvO,EAAU,IAAIoP,EACdpP,EAAsB,gBATD,YAWvB,U,aCtEO,MAAMwP,EAAgB,CAACC,EAAgB9O,EAAgC,KAAO,cAA4B+O,YAM/G,cACE/I,QAEF,gBAAkB,OAAOrG,KAAKqP,WAC9B,YAAc,OAAOrP,KAAKqP,WAAWrB,MAErC,gCAEE,OAAQ3N,EAAQiP,oBAAsB,IAAIC,KAAIC,GAAQA,EAAKpD,gBAG7D,oBACE,GAAIpM,KAAKyP,cAAgBzP,KAAKqP,WAAY,CACxC,MAAMK,EAAOrP,GAAW,GACxBL,KAAK2P,YAAcD,EAAKE,OAAS5P,KAAK6P,aAAa,CAAEC,KAAM,SAAY9P,KACvE,MAAMsP,EAAsBI,EAAKJ,oBAAsB,GAEjDS,EAAUT,EAAmBU,QAAO,CAACT,EAAKpP,KAC9C,MAAM8P,EAAK9P,EAAKiM,cAIhB,OAHI6D,IAAO9P,IACToP,EAAIU,GAAM9P,GAELoP,IACN,IACHvP,KAAKkQ,SAAY/P,GAA0B4P,EAAQ5P,IAASA,EAE5D,MAAMgQ,EAAQ,GACd3N,MAAM4N,KAAKpQ,KAAK6L,YAAY0C,SAAQ3I,GAAQuK,EAAMnQ,KAAKkQ,SAAStK,EAAKzF,OAASyF,EAAKtD,QAGnFgN,EAAmBf,SAAQpO,SACNoB,IAAfvB,KAAKG,KAAqBgQ,EAAMhQ,GAAQH,KAAKG,IACjD6H,OAAOqI,eAAerQ,KAAMG,EAAM,CAChC2H,IAAG,IACMqI,EAAMhQ,GAEf,IAAyBmC,GAEvBtC,KAAKsQ,yBAAyBnQ,EAAMgQ,EAAMhQ,GAAOmC,IAEnDiO,cAAc,EACdC,YAAY,OAIhB,MAAMC,EAAWzQ,KAAKyQ,SAAWjO,MAAM4N,KAAKpQ,KAAKyQ,UAAY,GAO7D,GANAA,EAASlC,SAAQmC,GAAMA,EAAG9C,cAAc1L,YAAYwO,KACpD1Q,KAAKqP,WAAa,IAAIF,EAAe,OAAD,wBAAMgB,GAAK,CAAEM,cAAYE,MAAM3Q,KAAK2P,YAAaD,GAErF1P,KAAKqP,WAAWuB,OAAST,EAEzBnQ,KAAKqP,WAAWwB,cAAgB7Q,KAAK6Q,cAAcC,KAAK9Q,MACpDA,KAAKqP,WAAW0B,QAAS,CAC3B,MAAMC,EAAYhR,KAAKqP,WAAW0B,QAAQZ,EAAOM,EAAUzQ,KAAKqP,WAAWrB,YAClD,IAAdgD,IAA2BhR,KAAKqP,WAAWrB,MAAQgD,GAEhEhR,KAAK0O,GAAK1O,KAAKqP,WAAWX,GAAGoC,KAAK9Q,KAAKqP,YACvCrP,KAAKyN,IAAMzN,KAAKqP,WAAW5B,IAAIqD,KAAK9Q,KAAKqP,aACrB,IAAdK,EAAK9H,QAAiB5H,KAAKqP,WAAW5B,IAAI,MAIpD,uB,YACyB,QAAvB,EAAe,QAAf,EAAAzN,KAAKqP,kBAAU,eAAE4B,cAAM,iBACC,QAAxB,EAAe,QAAf,EAAAjR,KAAKqP,kBAAU,eAAE6B,eAAO,iBACxBlR,KAAKqP,WAAa,KAGpB,yBAAyBlP,EAAcgR,EAAmB7O,GACxD,GAAItC,KAAKqP,WAAY,CAEnB,MAAM+B,EAAapR,KAAKkQ,SAAS/P,GAEjCH,KAAKqP,WAAWuB,OAAOQ,GAAc9O,EACrCtC,KAAKqP,WAAW5B,IAAI,mBAAoB2D,EAAYD,EAAU7O,GAE1DA,IAAU6O,IAAiC,IAAnB9Q,EAAQuH,QAClCvG,OAAOgQ,uBAAsB,KAE3BrR,KAAKqP,WAAW5B,IAAI,WAO9B,GAAgBtN,EAAcgP,EAAgB9O,KACjB,oBAAnBiB,gBAAmCA,eAAexB,OAAOK,EAAM+O,EAAcC,EAAgB9O,KCpG1FiR,EAAU,CAErBC,KAAM,IAAI5Q,QAEV,eAAe6Q,EAAaC,EAAeC,GACpC1R,KAAKuR,KAAKpQ,IAAIuQ,IAAS1R,KAAKuR,KAAKvQ,IAAI0Q,EAAQ,IAClD1R,KAAKuR,KAAKzJ,IAAI4J,GAAQF,GAAeC,GAGvC,gBAAgBC,GAEd,OADAA,EAAS1J,OAAO2J,eAAeD,GACxB1R,KAAKuR,KAAKzJ,IAAI4J,GAAU1J,OAAO4J,KAAK5R,KAAKuR,KAAKzJ,IAAI4J,IAAW,IAGtE,YAAYF,EAAaE,GAEvB,OADAA,EAAS1J,OAAO2J,eAAeD,GACxB1R,KAAKuR,KAAKzJ,IAAI4J,GAAU1R,KAAKuR,KAAKzJ,IAAI4J,GAAQF,GAAe,OAIjE,SAASrM,EAAiB0M,EAAYxR,EAAe,IAC1D,MAAO,CAACqR,EAAajJ,EAAaqJ,KAChC,MAAM3R,EAAO0R,EAASA,EAAOE,WAAatJ,EAG1C,OAFA6I,EAAQU,eAAe,iBAAiB7R,IACtC,CAAEA,OAAMsI,MAAKpI,WAAWqR,GACnBI,GAIJ,SAASpD,EAAemD,EAAYxR,EAAe,IACxD,OAAO,SAAUqR,EAAajJ,GAC5B,MAAMtI,EAAO0R,EAASA,EAAOE,WAAatJ,EAC1C6I,EAAQU,eAAe,iBAAiB7R,IACtC,CAAEA,OAAMsI,MAAKpI,WAAWqR,IAIvB,SAAS,EAAcvR,EAAcE,GAC1C,OAAO,SAA+D4R,GAEpE,OADA,EAAa9R,EAAM8R,EAAa5R,GACzB4R,GCzCX,MAAMC,EAAgB,CAACvE,EAAWxN,KACxBA,EAAOwN,EAAiB,MAAExN,GAAQwN,EAAiB,QAAM,GAG7DwE,EAAgB,CAACxE,EAAWxN,EAAMmC,KACtC,GAAInC,EAAM,CACR,MAAM6N,EAAQL,EAAiB,OAAK,GACpCK,EAAM7N,GAAQmC,EACdqL,EAAUI,SAASC,QAEnBL,EAAUI,SAASzL,ICNjB8P,EAAiB,GACvB,KAAO,kBAAkBlR,GAAKA,EAAEmR,WAAaD,IAE7C,MAAME,EAAUtE,GAASA,EAElB,MAAMuE,EAkIX,YACYvE,EACAwE,EACArN,EACA9E,GAHA,KAAA2N,QACA,KAAAwE,OACA,KAAArN,SACA,KAAA9E,UApIJ,KAAAoS,KAAO,IAAIxE,EACX,KAAAyE,SAAW,GACX,KAAAC,eAAiB,GAEjB,KAAAC,SAAW,GACX,KAAAC,cAAgB,EAuGhB,KAAAC,cAAgB,KACtB9S,KAAK6S,eACD7S,KAAK6S,cAAgB,EACvB7S,KAAK+N,SAAS/N,KAAK4S,SAAS5S,KAAK6S,cAAe,CAAEjL,QAAQ,EAAMmL,SAAS,IAGzE/S,KAAK6S,aAAe,GAIhB,KAAAG,cAAgB,KACtBhT,KAAK6S,eACD7S,KAAK6S,aAAe7S,KAAK4S,SAAS7P,OACpC/C,KAAK+N,SAAS/N,KAAK4S,SAAS5S,KAAK6S,cAAe,CAAEjL,QAAQ,EAAMmL,SAAS,IAGzE/S,KAAK6S,aAAe7S,KAAK4S,SAAS7P,OAAS,GAW/C,KAAApB,MAAQ,CAACzB,EAAU,KAAMG,IAChBL,KAAK2Q,MAAMzQ,EAAS,OAAF,wBAAOG,GAAO,CAAEuH,QAAQ,KAzHnD,OAAO1H,EAAsBwE,GAC3B,SAAWxE,EAASwE,EAAM1E,MAGpB,MAAMgO,GACZ,IAAKhO,KAAKwS,KAAM,OAChB,MAAMS,EAAI,gBACV,IAAQ,gBAAoB,CAACC,EAAK/C,KAAUM,KAC1CN,GAASnI,OAAO4J,KAAKzB,GAAO5B,SAAQ9F,IAC9BA,EAAI0K,WAAW,ODrB3B,EAAgB1K,EAAa0H,EAAW+C,EAAKvF,KAC3C,GAAIlF,EAAI0K,WAAW,OAAQ,CACzB,MAAMzL,EAAQyI,EAAM1H,GAEpB,GADAA,EAAMA,EAAI2K,UAAU,GACC,kBAAV1L,EACTyI,EAAM1H,GAAO1B,GAAK4G,EAAUF,IAAIhF,EAAK1B,QAChC,GAAqB,iBAAVW,EAChByI,EAAM1H,GAAO1B,GAAK4G,EAAUF,IAAI/F,EAAOX,QAClC,GAAqB,mBAAVW,EAChByI,EAAM1H,GAAO1B,GAAK4G,EAAUI,SAASrG,EAAMiG,EAAUK,MAAOjH,SACvD,GAAIvE,MAAMC,QAAQiF,GAAQ,CAC/B,MAAO2L,KAAYC,GAAK5L,EACD,iBAAZ2L,EACTlD,EAAM1H,GAAO1B,GAAK4G,EAAUF,IAAI4F,KAAYC,EAAGvM,GACnB,mBAAZsM,IAChBlD,EAAM1H,GAAO1B,GAAK4G,EAAUI,SAASsF,EAAQ1F,EAAUK,SAAUsF,EAAGvM,WAInE,GAAY,UAAR0B,EAAiB,CAC1B,MAAMJ,EAAO8H,EAAY,MAAK,OACxBhQ,EAA6B,iBAAfgQ,EAAM1H,GAAoB0H,EAAM1H,GAAO0H,EAAY,KACvE,GAAY,UAAR+C,EACF,OAAQ7K,GACN,IAAK,WACH8H,EAAe,QAAI+B,EAAcvE,EAAWxN,GAC5CgQ,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAO6B,SACjF,MACF,IAAK,QACHpD,EAAe,QAAI+B,EAAcvE,EAAWxN,KAAUgQ,EAAa,MACnEA,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAOpP,OACjF,MACF,IAAK,SACL,IAAK,QACH6N,EAAa,MAAI+B,EAAcvE,EAAWxN,GAC1CgQ,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAMqT,OAAOzM,EAAE2K,OAAOpP,QACxF,MACF,QACE6N,EAAa,MAAI+B,EAAcvE,EAAWxN,GAC1CgQ,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAOpP,WAEpE,WAAR4Q,GACT/C,EAAa,MAAI+B,EAAcvE,EAAWxN,GAC1CgQ,EAAgB,SAAIpJ,IACbA,EAAE2K,OAAO+B,UACZtB,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAOpP,SAG5C,WAAR4Q,GACT/C,EAAgB,SAAI+B,EAAcvE,EAAWxN,GAC7CgQ,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAOgC,WAChE,aAARR,IACT/C,EAAiB,UAAI+B,EAAcvE,EAAWxN,GAC9CgQ,EAAe,QAAIpJ,GAAKoL,EAAcxE,EAAWxN,GAAQ4G,EAAE2K,OAAOvR,KAAM4G,EAAE2K,OAAOpP,aAGnF,MAAQ,IAAK,CAAEmG,MAAKyK,MAAK/C,QAAOxC,eClC1B/M,CAAU6H,EAAK0H,EAAO+C,EAAKlT,aACpBmQ,EAAM1H,OAGVwK,EAAEC,EAAK/C,KAAUM,IAE1B,MAAMnG,EAAOtK,KAAKwS,KAAKxE,GAEvB,OADA,IAAQ,gBAAoBiF,EACrB3I,EAGD,YAAY0D,EAAUR,EAAO,MACnC,IAAKxN,KAAKwS,KAAM,OAChB,IAAIlI,EAAOkD,GAAQxN,KAAK2T,MAAM3F,GAU9B,GARA,SAAgB,MAAQ,QAAS,CAC/BL,UAAW3N,KACX4T,EAAGtJ,EAAO,IAAM,IAChB0D,QACAR,KAAMlD,EACNoG,GAAI1Q,KAAKE,UAGa,iBAAb6E,SAAuB,OAElC,MAAM2L,EAA8B,iBAAjB1Q,KAAKE,QACtB6E,SAAS8O,eAAe7T,KAAKE,SAAWF,KAAKE,QAE/C,GAAIwQ,EAAI,CACN,MAAMoD,EAAgB,KACjB9T,KAAKiR,OAECP,EAAe,aAAM1Q,MAAQ0Q,EAAGpE,aAAawH,KAAmB9T,KAAK+T,cAC9E/T,KAAK+T,aAAc,IAAIC,MAAOC,UAAUlC,WACxCrB,EAAGlN,aAAasQ,EAAe9T,KAAK+T,aACJ,oBAArBG,mBACJlU,KAAKmU,WAAUnU,KAAKmU,SAAW,IAAID,kBAAiBE,IACnDA,EAAQ,GAAGjD,WAAanR,KAAK+T,aAAgBhP,SAASsP,KAAKC,SAAS5D,KACtE1Q,KAAKiR,OAAOjR,KAAKgO,OACjBhO,KAAKmU,SAASI,aACdvU,KAAKmU,SAAW,UAGpBnU,KAAKmU,SAASK,QAAQzP,SAASsP,KAAM,CACnCI,WAAW,EAAMC,SAAS,EAC1B7I,YAAY,EAAM8I,mBAAmB,EAAMC,gBAAiB,CAACd,OAdjEpD,EAAGvK,iBAAmBuK,EAAGvK,gBAAgB2N,GAkB3CpD,EAAe,WAAI1Q,KAEhBwN,GACHxN,KAAK4H,OAAO8I,EAAIpG,GAElBtK,KAAK6U,UAAY7U,KAAK6U,SAAS7U,KAAKgO,OAG/B,SAASA,EAAU3N,EACtB,CAAEuH,QAAQ,EAAMmL,SAAS,IAC3B,GAAI/E,aAAiB8G,QAInBA,QAAQC,IAAI,CAAC/G,EAAOhO,KAAKgV,SAASC,MAAK9R,IACjCA,EAAE,IAAInD,KAAK+N,SAAS5K,EAAE,OACzB+R,OAAMC,IAEP,MADAtH,QAAQuH,MAAMD,GACRA,KAERnV,KAAKgV,OAAShH,MACT,CAEL,GADAhO,KAAKgV,OAAShH,EACD,MAATA,EAAe,OACnBhO,KAAKgO,MAAQA,GACU,IAAnB3N,EAAQuH,QAAkB5H,KAAKqV,YAAYrH,IACvB,IAApB3N,EAAQ0S,SAAqB/S,KAAKsV,iBACpCtV,KAAK4S,SAAW,IAAI5S,KAAK4S,SAAU5E,GACnChO,KAAK6S,aAAe7S,KAAK4S,SAAS7P,OAAS,GAEb,mBAArB1C,EAAQkV,UAAyBlV,EAAQkV,SAASvV,KAAKgO,QAmC/D,MAAM9N,EAAU,KAAMG,G,QAyB3B,GAxBAwN,QAAQC,QAAQ9N,KAAKE,QAAS,8BAC9BF,KAAKK,QAAUA,EAAU,OAAH,wBAAQL,KAAKK,SAAYA,GAC/CL,KAAKE,QAAUA,EACfF,KAAKwV,aAAenV,EAAQmV,aAC5BxV,KAAKsV,iBAAmBjV,EAAQ0S,QAE5B/S,KAAKsV,iBACPtV,KAAK0O,GAAGrO,EAAQ0S,QAAQ0C,MAAQ,eAAgBzV,KAAK8S,eACrD9S,KAAK0O,GAAGrO,EAAQ0S,QAAQ2C,MAAQ,eAAgB1V,KAAKgT,gBAGnD3S,EAAQsV,QACV3V,KAAKmF,OAASnF,KAAKmF,QAAU,GAC7BnF,KAAKmF,OAAO9E,EAAQsV,OAASrD,GAG/BtS,KAAK4V,cACL5V,KAAKgO,MAAmC,QAA9B,EAAa,QAAb,EAAGhO,KAAKgO,aAAK,QAAIhO,KAAY,aAAC,QAAI,GAClB,mBAAfA,KAAKgO,QAAsBhO,KAAKgO,MAAQhO,KAAKgO,SACpD3N,EAAQuH,OACV5H,KAAK+N,SAAS/N,KAAKgO,MAAO,CAAEpG,QAAQ,EAAMmL,SAAS,IAEnD/S,KAAK+N,SAAS/N,KAAKgO,MAAO,CAAEpG,QAAQ,EAAOmL,SAAS,IAElD,QAAc,CAChB,MAAM8C,EAAwB,iBAAZ3V,EAAuBA,EAAUA,EAAQ2V,GAC3DzD,EAAeyD,GAAMzD,EAAeyD,IAAO,GAC3CzD,EAAeyD,GAAIhQ,KAAK7F,MAE1B,OAAOA,KAGT,gBAAgBG,GACd,OAAOA,IACLH,KAAKwV,cACLxV,KAAK2S,eAAejI,QAAQvK,IAAS,GACrCA,EAAKgT,WAAW,MAAQhT,EAAKgT,WAAW,MAAQhT,EAAKgT,WAAW,MAGpE,WAAWhT,EAAc2V,EAAQzV,EAAyB,IACnDyV,GAA4B,mBAAXA,IAClBzV,EAAQ4O,QAAQjP,KAAK2S,eAAe9M,KAAK1F,GAC7CH,KAAK0O,GAAGvO,GAAa,IAAImT,KAEvB,SAAgB,MAAQ,QAAS,CAC/B3F,UAAW3N,KACX4T,EAAG,IACHlM,MAAOvH,EAAMmT,IACbyC,cAAe/V,KAAKgO,MACpB3N,YAGF,MAAM2V,EAAWF,EAAO9V,KAAKgO,SAAUsF,GAEvC,SAAgB,MAAQ,QAAS,CAC/B3F,UAAW3N,KACX4T,EAAG,IACHlM,MAAOvH,EAAMmT,IACb0C,WACAhI,MAAOhO,KAAKgO,MACZ3N,YAGFL,KAAK+N,SAASiI,EAAU3V,KACvBA,IAGL,cACE,MAAM4V,EAAUjW,KAAKmF,QAAU,GAC/BmM,EAAQ4E,gBAAgBlW,MAAMuO,SAAQ9F,IACpC,GAAIA,EAAI0K,WAAW,kBAAmB,CACpC,MAAM5B,EAAOD,EAAQ6E,YAAY1N,EAAKzI,MACtCiW,EAAQ1E,EAAKpR,MAAQ,CAACH,KAAKuR,EAAK9I,KAAKqI,KAAK9Q,MAAOuR,EAAKlR,aAI1D,MAAM0U,EAAM,GACRvS,MAAMC,QAAQwT,GAChBA,EAAQ1H,SAAQ6H,IACd,MAAOjW,EAAM2V,EAAQpG,GAAQ0G,EACfjW,EAAK4R,WACbvF,MAAM,KAAK+B,SAAQzM,GAAKiT,EAAIjT,EAAEuU,QAAU,CAACP,EAAQpG,QAGzD1H,OAAO4J,KAAKqE,GAAS1H,SAAQpO,IAC3B,MAAM2V,EAASG,EAAQ9V,IACD,mBAAX2V,GAAyBtT,MAAMC,QAAQqT,KAChD3V,EAAKqM,MAAM,KAAK+B,SAAQzM,GAAKiT,EAAIjT,EAAEuU,QAAUP,OAK9Cf,EAAI,OAAMA,EAAI,KAAOzC,GAC1BtK,OAAO4J,KAAKmD,GAAKxG,SAAQpO,IACvB,MAAM2V,EAASf,EAAI5U,GACG,mBAAX2V,EACT9V,KAAKsW,WAAWnW,EAAM2V,GACbtT,MAAMC,QAAQqT,IACvB9V,KAAKsW,WAAWnW,EAAM2V,EAAO,GAAIA,EAAO,OAKvC,IAAIpO,KAAa5G,GACtB,MAAMX,EAAOuH,EAAMqK,WACnB,OAAO/R,KAAKuW,gBAAgBpW,GAC1B,MAAQA,KAASW,GACjBd,KAAKyS,KAAKhF,IAAItN,KAASW,GAGpB,GAAG4G,EAAUyG,EAAuB9N,GACzC,MAAMF,EAAOuH,EAAMqK,WAEnB,OADA/R,KAAK0S,SAAS7M,KAAK,CAAE1F,OAAMgO,OACpBnO,KAAKuW,gBAAgBpW,GAC1B,KAAOA,EAAMgO,EAAI9N,GACjBL,KAAKyS,KAAK/D,GAAGvO,EAAMgO,EAAI9N,GAGpB,U,MACQ,QAAb,EAAAL,KAAKmU,gBAAQ,SAAEI,aACfvU,KAAK0S,SAASnE,SAAQuH,IACpB,MAAM,KAAE3V,EAAI,GAAEgO,GAAO2H,EACrB9V,KAAKuW,gBAAgBpW,GACnB,MAAQA,EAAMgO,GACdnO,KAAKyS,KAAK+D,IAAIrW,EAAMgO,OAzQnB,EAAAsI,qBAAsB,ECRxB,MAAMC,EAAuB,KACvBC,EAA2B,MAE3BhB,EAAgBiB,IAE3B,GADKA,IAAKA,EAAM,KACZA,EAAIzD,WAAW,KAAM,CACvB,MAAOhT,KAAS0W,GAAQD,EAAIpK,MAAM,KAClC,MAAQrM,KAAS0W,IAAS,MAAQF,EAAkBxW,KAAS0W,GAC7D,MAAQH,EAAcvW,KAAS0W,QAC1B,GAAID,EAAIzD,WAAW,KAAM,CAC9B,MAAOS,EAAGzT,KAAS0W,GAAQD,EAAIpK,MAAM,KACrC,MAAQ,IAAMrM,KAAS0W,IAAS,MAAQF,EAAkB,IAAMxW,KAAS0W,GACzE,MAAQH,EAAc,IAAMvW,KAAS0W,QAErC,MAAQD,IAAQ,MAAQD,EAAkBC,GAC1C,MAAQF,EAAcE,ICG1B,IAAQ,gBAAoB,KAC5B,SCtBO,SAAgB1W,EAASoK,EAAMoC,IACpC,QAAcxM,EAASoK,EAAMoC,IDsB/B,WAAe,KACf,eAAmB,EAEnB,QAAY,CAAaxM,EAAmB4W,EAAWtE,EAAgBrN,EACrE9E,KACA,MAAMqP,EAAO,OAAH,wBAAQrP,GAAO,CAAEuH,QAAQ,EAAM4N,cAAc,IACjD7H,EAAY,IAAI4E,EAAgBuE,EAAOtE,EAAMrN,GAGnD,OAFI9E,GAAWA,EAAQwU,WAAUlH,EAAUkH,SAAWxU,EAAQwU,UAC9DlH,EAAUgD,MAAMzQ,EAASwP,GAClB/B,GAGT,MAAMoJ,EAAOnD,MACb,KAAO,IAAKmD,GACZ,KAAO,SAASnD,GAAKmD,IACrB,KAAOL,EAAcK,GACrB,KAAO,IAAKA,GACZ,QAAepB,EACf,KAAO,SAASiB,GAAO,SAAgB,QAAaA,KAE5B,iBAAb7R,UACTA,SAAS0B,iBAAiB,oBAAoB,KACxC,UAAiBkP,IACnBtU,OAAO2V,WAAa,IAAMrB,EAAMsB,SAASC,MACpCnS,SAASsP,KAAK8C,aAAa,mBAAmBxB,EAAMsB,SAASC,UAUxE,UAEsB,iBAAX7V,SACTA,OAAkB,UAAIkR,EACtBlR,OAAc,MAAI,EAClBA,OAAW,GAAIqN,EACfrN,OAAsB,cAAI,I,cE7DrB,SAAS+V,EAASjH,KAAUM,GACjC,OAAO4G,EAAQ5G,GAKjB,SAAS4G,EAAQ5G,GACf,MAAM6G,EAAK,GACLzR,EAAQ0R,IACRA,SAAuC,KAANA,IAAkB,IAANA,GAC/CD,EAAGzR,KAAmB,mBAAN0R,GAAiC,iBAANA,EAAkBA,EAAI,GAAGA,MAUxE,OAPA9G,GAAYA,EAASlC,SAAQgJ,IACvB/U,MAAMC,QAAQ8U,GAChBA,EAAEhJ,SAAQzL,GAAK+C,EAAK/C,KAEpB+C,EAAK0R,MAGFD,EAGF,SAASzM,EAAcqI,EAA6B/C,KAAeM,GACxE,MAAM6G,EAAKD,EAAQ5G,GACnB,GAAmB,iBAARyC,EAAkB,MAAO,CAAEA,MAAK/C,QAAOM,SAAU6G,GACvD,GAAI9U,MAAMC,QAAQyQ,GAAM,OAAOA,EAC/B,QAAY3R,IAAR2R,GAAqBzC,EAAU,OAAO6G,EAC1C,GAAItP,OAAO2J,eAAeuB,GAAKuD,oBAAqB,MAAO,CAAEvD,MAAK/C,QAAOM,SAAU6G,GACnF,GAAmB,mBAARpE,EAAoB,OAAOA,EAAI/C,EAAOmH,GACjD,MAAM,IAAIpR,MAAM,uBAAuBgN,K,oCAG9C,MAAMsE,EAAW,IAAI7W,QAER8W,EAEN,SAAgBvX,EAAkBwX,EAAahL,EAAS,IAG7D,GAAa,MAATgL,IAA2B,IAAVA,EAAiB,OAEtCA,EAAQC,EAAgBD,EAAOhL,GAE/B,MAAMkL,EAA8B,SAAtB1X,aAAO,EAAPA,EAASqJ,UAElBrJ,IACDsC,MAAMC,QAAQiV,GAChBG,EAAe3X,EAASwX,EAAOE,GAE/BC,EAAe3X,EAAS,CAACwX,GAAQE,KAWrC,SAASzS,EAAOjF,EAAkBwE,EAAakT,GACzB,IAAhBlT,EAAU,MAEdkT,EAAQA,GAAsB,QAAblT,EAAKwO,IAVxB,SAAcxC,EAAahM,GAEzB,MAAMoT,EAAOpH,EAAGnH,SACVwO,EAAO,GAAGrT,EAAKwO,KAAO,KAC5B,OAAO4E,EAAKE,gBAAkBD,EAAKC,cAO9BC,CAAK/X,EAASwE,MAIH,EAAdA,EAAU,MAAUmT,EAAe3X,EAASwE,EAAK+L,SAAUmH,KAC7C,EAAdlT,EAAU,MAAUwT,EAAYhY,EAASwE,EAAKyL,MAAOyH,IAJrD1X,EAAQiE,WAAWgU,aAAaC,EAAO1T,EAAMkT,GAAQ1X,IAOzD,SAAS2X,EAAe3X,EAASuQ,EAAUmH,G,MACzC,MAAMS,GAA4B,QAAlB,EAAAnY,EAAQoY,kBAAU,eAAEvV,SAAU,EACxCwV,GAAU9H,aAAQ,EAARA,EAAU1N,SAAU,EAC9ByV,EAAMrN,KAAKsN,IAAIJ,EAASE,GAC9B,IAAK,IAAIzV,EAAI,EAAGA,EAAI0V,EAAK1V,IAAK,CAC5B,MAAM4V,EAAQjI,EAAS3N,GACvB,GAAqB,IAAjB4V,EAAW,IAAS,SACxB,MAAMhI,EAAKxQ,EAAQoY,WAAWxV,GAC9B,GAAqB,iBAAV4V,EACLhI,EAAGiI,cAAgBD,IACD,IAAhBhI,EAAG7L,SACL6L,EAAGkI,UAAYF,EAEfxY,EAAQiY,aAAaU,EAAWH,GAAQhI,SAGvC,GAAIgI,aAAiBtJ,aAAesJ,aAAiBI,WAC1D5Y,EAAQ8B,aAAa0W,EAAOhI,OACvB,CACL,MAAMjI,EAAMiQ,EAAMvI,OAASuI,EAAMvI,MAAW,IAC5C,GAAI1H,EACF,GAAIiI,EAAGjI,MAAQA,EACbtD,EAAOjF,EAAQoY,WAAWxV,GAAI4V,EAAOd,OAChC,CAEL,MAAMmB,EAAMvB,EAAS/O,GACrB,GAAIsQ,EAAK,CACP,MAAMC,EAAOD,EAAIhX,YACjB7B,EAAQ8B,aAAa+W,EAAKrI,GAC1BsI,EAAO9Y,EAAQ8B,aAAa0O,EAAIsI,GAAQ9Y,EAAQ6D,YAAY2M,GAE9DvL,EAAOjF,EAAQoY,WAAWxV,GAAI4V,EAAOd,QAGvCzS,EAAOjF,EAAQoY,WAAWxV,GAAI4V,EAAOd,IAK3C,IAAI9V,EAAI5B,EAAQoY,WAAWvV,OAC3B,KAAOjB,EAAI0W,GACTtY,EAAQgC,YAAYhC,EAAQ+Y,WAC5BnX,IAGF,GAAIyW,EAAUC,EAAK,CACjB,MAAMzX,EAAIgE,SAASmU,yBACnB,IAAK,IAAIpW,EAAI0V,EAAK1V,EAAI2N,EAAS1N,OAAQD,IACrC/B,EAAEgD,YAAYqU,EAAO3H,EAAS3N,GAAI8U,IAEpC1X,EAAQ6D,YAAYhD,IAIxB,SAAS8X,EAAWnU,GAClB,GAAgC,KAA5BA,aAAI,EAAJA,EAAMgG,QAAQ,WAAiB,CACjC,MAAMyO,EAAMpU,SAAS8F,cAAc,OAEnC,OADAsO,EAAIC,mBAAmB,aAAc1U,EAAK0O,UAAU,IAC7C+F,EAEP,OAAOpU,SAASC,eAAeN,UAAM,IAIzC,SAAS0T,EAAO1T,EAAiDkT,GAE/D,GAAKlT,aAAgB0K,aAAiB1K,aAAgBoU,WAAa,OAAOpU,EAC1E,GAAoB,iBAATA,EAAmB,OAAOmU,EAAWnU,GAChD,IAAKA,EAAKwO,KAA4B,mBAAbxO,EAAKwO,IAAqB,OAAO2F,EAAWQ,KAAKC,UAAU5U,IAEpF,MAAMxE,GADN0X,EAAQA,GAAsB,QAAblT,EAAKwO,KAElBnO,SAASwU,gBAAgB,6BAA8B7U,EAAKwO,KAC5DnO,SAAS8F,cAAcnG,EAAKwO,KAIhC,OAFAgF,EAAYhY,EAASwE,EAAKyL,MAAOyH,GAC7BlT,EAAK+L,UAAU/L,EAAK+L,SAASlC,SAAQmK,GAASxY,EAAQ6D,YAAYqU,EAAOM,EAAOd,MAC7E1X,EAYF,SAASgY,EAAYhY,EAAkBiQ,EAAWyH,GAEvD,MAAM4B,EAAStZ,EAAkB,QAAK,GACtCiQ,EAZF,SAAoBsJ,EAAcC,GAChCA,EAAgB,MAAIA,EAAgB,OAAKA,EAAoB,iBACtDA,EAAoB,UAC3B,MAAMvJ,EAAQ,GAGd,OAFIsJ,GAAUzR,OAAO4J,KAAK6H,GAAUlL,SAAQ+E,GAAKnD,EAAMmD,GAAK,OACxDoG,GAAU1R,OAAO4J,KAAK8H,GAAUnL,SAAQ+E,GAAKnD,EAAMmD,GAAKoG,EAASpG,KAC9DnD,EAMCwJ,CAAWH,EAAQrJ,GAAS,IACpCjQ,EAAkB,OAAIiQ,EAEtB,IAAK,MAAMhQ,KAAQgQ,EAAO,CACxB,MAAM7N,EAAQ6N,EAAMhQ,GAGpB,GAAIA,EAAKgT,WAAW,SAAU,CAC5B,MACMyG,EADQzZ,EAAKiT,UAAU,GACTyG,QAAQ,UAAW/M,GAAUA,EAAM,GAAGkL,gBACtD9X,EAAQ4Z,QAAQF,KAAWtX,IACzBA,GAAmB,KAAVA,EAAcpC,EAAQ4Z,QAAQF,GAAStX,SACxCpC,EAAQ4Z,QAAQF,SAEzB,GAAa,UAATzZ,EAET,GADID,EAAQ6Z,MAAMC,UAAS9Z,EAAQ6Z,MAAMC,QAAU,IAC9B,iBAAV1X,EAAoBpC,EAAQ6Z,MAAMC,QAAU1X,OAErD,IAAK,MAAM6H,KAAK7H,EACVpC,EAAQ6Z,MAAM5P,KAAO7H,EAAM6H,KAAIjK,EAAQ6Z,MAAM5P,GAAK7H,EAAM6H,SAG3D,GAAIhK,EAAKgT,WAAW,SAAU,CACnC,MAAM8G,EAAQ9Z,EAAK0Z,QAAQ,QAAS,IAAIzN,cAC3B,MAAT9J,IAA2B,IAAVA,EACnBpC,EAAQga,kBAAkB,+BAAgCD,GAE1D/Z,EAAQia,eAAe,+BAAgCF,EAAO3X,QAEvDnC,EAAKgT,WAAW,MACpB7Q,GAA0B,mBAAVA,EAEO,iBAAVA,IACZA,EAAOpC,EAAQsD,aAAarD,EAAMmC,GACjCpC,EAAQiG,gBAAgBhG,IAH7BD,EAAQC,GAAQmC,EAKT,4DAA4D8X,KAAKja,IAASyX,EAC/E1X,EAAQoM,aAAanM,KAAUmC,IAC7BA,EAAOpC,EAAQsD,aAAarD,EAAMmC,GACjCpC,EAAQiG,gBAAgBhG,IAEtBD,EAAQC,KAAUmC,IAC3BpC,EAAQC,GAAQmC,GAEL,QAATnC,GAAkBmC,IAAOkV,EAASlV,GAASpC,GAE7CiQ,GAAiC,mBAAjBA,EAAW,KAC7B9O,OAAOgQ,uBAAsB,IAAMlB,EAAW,IAAEjQ,KA6BpD,SAASyX,EAAgBjT,EAAMgI,EAAQ2N,EAAM,G,MAC3C,GAAoB,iBAAT3V,EAAmB,OAAOA,EACrC,GAAIlC,MAAMC,QAAQiC,GAAO,OAAOA,EAAK6K,KAAImJ,GAASf,EAAgBe,EAAOhM,EAAQ2N,OACjF,IAAI7M,EAAO9I,EAIX,GAHIA,GAA4B,mBAAbA,EAAKwO,KAAsBlL,OAAO2J,eAAejN,EAAKwO,KAAKuD,sBAC5EjJ,EA9BJ,SAA0B9I,EAAMgI,EAAQ2N,GACtC,MAAM,IAAEnH,EAAG,MAAE/C,EAAK,SAAEM,GAAa/L,EACjC,IAAI+D,EAAM,IAAI4R,IACVxE,EAAK1F,GAASA,EAAU,GACvB0F,EACApN,EAAMoN,EADFA,EAAK,IAAIwE,IAAMrG,KAAKsG,QAE7B,IAAIC,EAAQ,UACRpK,GAASA,EAAU,KACrBoK,EAAQpK,EAAU,UACXA,EAAU,IAEdzD,EAAO8N,mBAAkB9N,EAAO8N,iBAAmB,IACxD,IAAI7M,EAAYjB,EAAO8N,iBAAiB/R,GACxC,KAAKkF,GAAeA,aAAqBuF,GAASvF,EAAUzN,SAAS,CACnE,MAAMA,EAAU6E,SAAS8F,cAAc0P,GACvC5M,EAAYjB,EAAO8N,iBAAiB/R,GAAO,IAAIyK,EAAI,OAAD,wBAAM/C,GAAK,CAAEM,cAAY9O,MAAMzB,GAEnF,GAAIyN,EAAUoD,QAAS,CACrB,MAAMC,EAAYrD,EAAUoD,QAAQZ,EAAOM,EAAU9C,EAAUK,YACzC,IAAdgD,GAA8BrD,EAAUI,SAASiD,GAG3D,OADAkH,EAAYvK,EAAUzN,QAASiQ,GAAO,GAC/BxC,EAAUzN,QAQRua,CAAiB/V,EAAMgI,EAAQ2N,IAEpC7M,GAAQhL,MAAMC,QAAQ+K,EAAKiD,UAAW,CACxC,MAAMiK,EAAuB,QAAb,EAAGlN,EAAK2C,aAAK,eAAEd,WAC/B,GAAIqL,EAAY,CACd,IAAI5X,EAAI,EACR0K,EAAKiD,SAAWjD,EAAKiD,SAASlB,KAAImJ,GAASf,EAAgBe,EAAOgC,EAAY5X,YAE9E0K,EAAKiD,SAAWjD,EAAKiD,SAASlB,KAAImJ,GAASf,EAAgBe,EAAOhM,EAAQ2N,OAG9E,OAAO7M,KClQLmN,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUjb,QAG3C,IAAIC,EAAS8a,EAAyBE,GAAY,CAGjDjb,QAAS,IAOV,OAHAkb,EAAoBD,GAAUhb,EAAQA,EAAOD,QAASgb,GAG/C/a,EAAOD,QCjBf,OCFAgb,EAAoB7Z,EAAI,CAACnB,EAASmb,KACjC,IAAI,IAAItS,KAAOsS,EACXH,EAAoB1Z,EAAE6Z,EAAYtS,KAASmS,EAAoB1Z,EAAEtB,EAAS6I,IAC5ET,OAAOqI,eAAezQ,EAAS6I,EAAK,CAAE+H,YAAY,EAAM1I,IAAKiT,EAAWtS,MCJ3EmS,EAAoB5L,EAAI,WACvB,GAA0B,iBAAfgM,WAAyB,OAAOA,WAC3C,IACC,OAAOhb,MAAQ,IAAIib,SAAS,cAAb,GACd,MAAOlU,GACR,GAAsB,iBAAX1F,OAAqB,OAAOA,QALjB,GCAxBuZ,EAAoB1Z,EAAI,CAACga,EAAKC,IAASnT,OAAOoT,UAAUC,eAAe1T,KAAKuT,EAAKC,GCCjFP,EAAoBU,EAAK1b,IACH,oBAAX8C,QAA0BA,OAAO6Y,aAC1CvT,OAAOqI,eAAezQ,EAAS8C,OAAO6Y,YAAa,CAAEjZ,MAAO,WAE7D0F,OAAOqI,eAAezQ,EAAS,aAAc,CAAE0C,OAAO,KJFhDsY,EAAoB,M","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn ","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","import { createElement, updateElement, Fragment } from './vdom-my';\nimport { html, render, TemplateResult, svg, directive, EventPart, parts } from 'lit-html';\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nfunction _render(element, vdom, parent?) {\n  if (typeof vdom === 'string') {\n    render(html`${unsafeHTML(vdom)}`, element);\n  } else if (vdom instanceof TemplateResult) {\n    render(vdom, element);\n  } else {\n    updateElement(element, vdom, parent);\n    parts.delete(element);\n  }\n}\n\nconst run = directive((event, ...args) => (part) => {\n  if (!(part instanceof EventPart)) {\n    throw new Error('${run} can only be used in event handlers');\n  }\n  let { element, eventName } = part;\n  const getComponent = () => {\n    let component = element['_component'];\n    while (!component && element) {\n      element = element.parentElement;\n      component = element && element['_component'];\n    }\n    console.assert(!!component, 'Component not found.');\n    return component;\n  }\n  if (typeof event === 'string') {\n    element[`on${eventName}`] = e => getComponent().run(event, ...args, e);\n  } else if (typeof event === 'function') {\n    element[`on${eventName}`] = e => getComponent().setState(event(getComponent().state, ...args, e));\n  }\n});\n\nexport { createElement, Fragment, html, svg, _render as render, run };\n\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment, html, svg, run } from './vdom-lit-html';\nexport { html, svg, render, run }\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n\nif (typeof window === 'object') {\n  window['html'] = html;\n  window['svg'] = svg;\n  window['run'] = run;\n}\n","import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?: boolean;\n  shadow?: boolean;\n  history?: boolean;\n  global_event?: boolean;\n  observedAttributes?: string[];\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class CustomElement extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  private _attrMap: (arg0: string) => string;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    // attributes need to be set to lowercase in order to get observed\n    return (options.observedAttributes || []).map(attr => attr.toLowerCase());\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const observedAttributes = (opts.observedAttributes || [])\n\n      const attrMap = observedAttributes.reduce((map, name) => {\n        const lc = name.toLowerCase()\n        if (lc !== name) {\n          map[lc] = name\n        }\n        return map\n      }, {})\n      this._attrMap = (name: string) : string => attrMap[name] || name\n\n      const props = {};\n      Array.from(this.attributes).forEach(item => props[this._attrMap(item.name)] = item.value);\n\n      // add getters/ setters to allow observation on observedAttributes\n      observedAttributes.forEach(name => {\n        if (this[name] !== undefined) props[name] = this[name];\n        Object.defineProperty(this, name, {\n          get(): any {\n            return props[name];\n          },\n          set(this: CustomElement, value: unknown) {\n            // trigger change event\n            this.attributeChangedCallback(name, props[name], value)\n          },\n          configurable: true,\n          enumerable: true\n        });\n      })\n\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      // attach props to component\n      this._component._props = props;\n      // expose dispatchEvent\n      this._component.dispatchEvent = this.dispatchEvent.bind(this)\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(name: string, oldValue: unknown, value: unknown) {\n    if (this._component) {\n      // camelCase attributes arrive only in lowercase\n      const mappedName = this._attrMap(name);\n      // store the new property/ attribute\n      this._component._props[mappedName] = value;\n      this._component.run('attributeChanged', mappedName, oldValue, value);\n\n      if (value !== oldValue && !(options.render === false)) {\n        window.requestAnimationFrame(() => {\n          // re-render state with new combined props on next animation frame\n          this._component.run('.')\n        })\n      }\n    }\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}\n","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = component['state'] || {};\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: {}, tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    } else if (tag === 'textarea') {\n      props['innerHTML'] = getStateValue(component, name);\n      props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T = any, E = any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.h = app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.h = app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    let html = vdom || this._view(state);\r\n\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      _: html ? '.' : '-',\r\n      state,\r\n      vdom: html,\r\n      el: this.element\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if (!this.observer) this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom) {\r\n      this.render(el, html);\r\n    }\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false }) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      // Wait for previous promise to complete first\r\n      Promise.all([state, this._state]).then(v => {\r\n        if (v[0]) this.setState(v[0]);\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E> {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n\r\n    if (options.route) {\r\n      this.update = this.update || {};\r\n      this.update[options.route] = REFRESH;\r\n    }\r\n\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (typeof this.state === 'function') this.state = this.state();\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this._global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '>',\r\n        event: name, p,\r\n        current_state: this.state,\r\n        options\r\n      });\r\n\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '<',\r\n        event: name, p,\r\n        newState,\r\n        state: this.state,\r\n        options\r\n      });\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions, AppStartOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E = any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: AppStartOptions<T>): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: AppStartOptions<T>): Component<T, E> => {\n  const opts = { ...options, render: true, global_event: true };\n  const component = new Component<T, E>(model, view, update);\n  if (options && options.rendered) component.rendered = options.rendered;\n  component.mount(element, opts);\n  return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      if (!document.body.hasAttribute('apprun-no-init')) route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T = {}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions, AppStartOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = new WeakMap();\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  if (node['_op'] === 3) return;\n  // console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  !(node['_op'] & 2) && updateChildren(element, node.children, isSvg);\n  !(node['_op'] & 1) && updateProps(element, node.props, isSvg);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const old_len = element.childNodes?.length || 0;\n  const new_len = children?.length || 0;\n  const len = Math.min(old_len, new_len);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    if (child['_op'] === 3) continue;\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.nodeValue = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          // console.log(el.key, key);\n          const old = keyCache[key];\n          if (old) {\n            const temp = old.nextSibling;\n            element.insertBefore(old, el);\n            temp ? element.insertBefore(el, temp) : element.appendChild(el);\n          }\n          update(element.childNodes[i], child, isSvg);\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (new_len > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node?.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node??'');\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  // console.assert(node !== null && node !== undefined);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props, isSvg);\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nexport function updateProps(element: Element, props: {}, isSvg) {\n  // console.assert(!!element);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      if (typeof value === 'string') element.style.cssText = value;\n      else {\n        for (const s in value) {\n          if (element.style[s] !== value[s]) element.style[s] = value[s];\n        }\n      }\n    } else if (name.startsWith('xlink')) {\n      const xname = name.replace('xlink', '').toLowerCase();\n      if (value == null || value === false) {\n        element.removeAttributeNS('http://www.w3.org/1999/xlink', xname);\n      } else {\n        element.setAttributeNS('http://www.w3.org/1999/xlink', xname, value);\n      }\n    } else if (name.startsWith('on')) {\n      if (!value || typeof value === 'function') {\n        element[name] = value;\n      } else if (typeof value === 'string') {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (/^id$|^class$|^list$|^readonly$|^contenteditable$|^role|-/g.test(name) || isSvg) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(() => props['ref'](element));\n  }\n}\n\nfunction render_component(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  let asTag = 'section';\n  if (props && props['as']) {\n    asTag = props['as'];\n    delete props['as'];\n  }\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component || !(component instanceof tag) || !component.element) {\n    const element = document.createElement(asTag);\n    component = parent.__componentCache[key] = new tag({ ...props, children }).start(element);\n  }\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, component.state);\n    (typeof new_state !== 'undefined') && component.setState(new_state);\n  }\n  updateProps(component.element, props, false);\n  return component.element;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) {\n    vdom = render_component(node, parent, idx);\n  }\n  if (vdom && Array.isArray(vdom.children)) {\n    const new_parent = vdom.props?._component;\n    if (new_parent) {\n      let i = 0;\n      vdom.children = vdom.children.map(child => createComponent(child, new_parent, i++));\n    } else {\n      vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n    }\n  }\n  return vdom;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(299);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}