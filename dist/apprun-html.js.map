{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom-my.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__webpack_exports__","App","[object Object]","_events","fn","options","push","subscribers","filter","sub","length","args","console","assert","delay","apply","once","on","assign","_t","clearTimeout","setTimeout","app","self","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","decorator_update","events","descriptor","toString","defineMetadata","getStateValue","component","setStateValue","state","setState","directive","props","tag","startsWith","event","substring","e","run","Array","isArray","handler","type","checked","Number","multiple","selectedIndex","selected","componentCache","src_app","components","REFRESH","component_Component","view","update","_app","_actions","_history","_history_idx","start","element","render","mount","h","createElement","children","forEach","html","vdom","document","el","getElementById","tracking_attr","unload","tracking_id","Date","valueOf","setAttribute","observer","MutationObserver","changes","removedNodes","oldValue","from","indexOf","disconnect","parentNode","observe","childList","subtree","attributes","attributeOldValue","attributeFilter","removeAttribute","rendered","history","Promise","then","catch","err","error","_state","renderState","enable_history","callback","global_event","prev","next","add_actions","undefined","action","newState","actions","getMetadataKeys","getMetadata","all","act","opts","split","trim","add_action","is_global_event","off","__isAppRunComponent","customElement","componentClass","HTMLElement","super","_component","isConnected","shadow","_shadowRoot","attachShadow","item","parentElement","removeChild","unmount","route","url","rest","_","vdom_my","parent","Fragment","webComponent","customElements","model","NOOP","addEventListener","window","onpopstate","location","hash","_idx","src_createComponent","createComponent","node","idx","map","child","id","__componentCache","mounted","updateElement","ATTR_PROPS","collect","ch","keyCache","nodes","updateChildren","key1","nodeName","key2","toUpperCase","same","updateProps","replaceChild","len","Math","min","childNodes","textContent","nodeType","createText","old","insertBefore","appendChild","lastChild","createDocumentFragment","div","insertAdjacentHTML","createTextNode","isSvg","JSON","stringify","createElementNS","oldProps","newProps","mergeProps","style","cssText","cname","replace","match","dataset","SVGElement","getAttribute","g","Function","range","NS_XHTML","doc","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","INPUT","TEXTAREA","newValue","firstChild","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom_esm","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","createRange","selectNode","body","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","toElKey","isSameNode","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","hasAttributeNS","removeAttributeNS","apprun","cloneNode"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args): number {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n\n    return subscribers ? subscribers.length : 0;\n  }\n\n  once(name: string, fn, options: any = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global) \nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","const getStateValue = (component, name) => {\n  return name ? component['state'][name] : component['state'];\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = { ...component['state'] };\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      props[key] = e => component.setState(handler(component.state, ...p, e));\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['selectedIndex'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.selectedIndex);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T=any, E=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = this.view(state);\r\n    app.createElement = h;\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        const observer = new MutationObserver(changes => {\r\n          const { removedNodes, oldValue } = changes[0];\r\n          if (oldValue === this.tracking_id || Array.from(removedNodes).indexOf(el) >=0){\r\n            this.unload();\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        if (el.parentNode) observer.observe(el.parentNode, {\r\n          childList: true, subtree: true,\r\n          attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n        });\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] != null ? this['model'] : {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name as any, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","declare var customElements;\n\nexport const customElement = (componentClass, options = {}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n  \n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = { render: true, shadow: false, ...options };\n      this._shadowRoot = opts.shadow ?\n        this.attachShadow({ mode: 'open' }) : this;\n      const props = {}\n      Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n      if (this.children) {\n        props['children'] = Array.from(this.children);\n        props['children'].forEach(el => el.parentElement.removeChild(el));\n      }\n      this._component = new componentClass(props).mount(this._shadowRoot, opts);\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n    }\n  }\n\n  disconnectedCallback() {\n    this._component.unmount();\n    this._component = null;\n  }\n\n  attributeChangedCallback() {\n    const props = {};\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    this._component.run('.', props);\n  }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport webComponent from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E=any>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T, E>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update };\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${idx}_`\n  if (!id) {\n    id = `_${idx}_`;\n  } else {\n    key = `_${id}_`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state, props);\n    component.rendered && setTimeout(() => component.rendered(state, props));\n  }\n  return <section {...props} id={id}>{vdom}</section>;\n}\n\nlet _idx = 0;\nfunction createComponent(node, parent, idx = 0) {\n  if (idx === 0) _idx = 0;\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, _idx++));\n  let vdom = node;\n  if (node && typeof (node.tag) === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, _idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, _idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    updateChildren(element, [nodes]);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = keyCache[key];\n          if (old) {\n            element.insertBefore(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.insertBefore(create(child), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string, isSvg = false): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (const s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'class' || name.startsWith(\"role\") || name.indexOf(\"-\") > 0 ||\n      element instanceof SVGElement) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // update attributes on original DOM element\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!toNode.hasAttribute(attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { app, Component, View, Action, Update, on, update };","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n"],"sourceRoot":""}