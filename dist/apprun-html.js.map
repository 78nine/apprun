{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","App","[object Object]","_events","fn","options","push","args","subscribers","console","assert","filter","sub","delay","apply","once","on","_t","clearTimeout","setTimeout","app","global","window","default","app_1","vdom_1","component_1","Component","decorator_1","update","event","router_1","web_component_1","createElement","render","Fragment","webComponent","start","element","model","view","opts","assign","global_event","component","rendered","mount","_","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","keys","key","descriptor","defineMetadata","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","keyCache","nodes","updateChildren","node","firstChild","appendChild","create","el","nodeName","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","length","child","textContent","nodeType","createText","old","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","a","b","mergeProps","style","cssText","startsWith","dname","dataset","getAttribute","setAttribute","updateElement","customElement","componentClass","HTMLElement","super","shadow","_shadowRoot","attachShadow","mode","from","attributes","item","parentElement","_component","bind","run","state","customElements","ROUTER_EVENT","rest","split","_app","_history","_history_idx","html","vdom","getElementById","history","Promise","then","setState","catch","err","error","renderState","enable_history","callback","prev","next","add_actions","action","newState","e","actions","getMetadataKeys","getMetadata","all","trim","add_action","is_global_event","cache","components","id","performance","now","mounted","vdom_my_1","g","Function","eval","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","createRange","selectNode","createContextualFragment","fragment","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","removeAttributeNS","apprun_1","vdom_html_1"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    // if (options.debug) console.log('on: ' + name);\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  run(name: string, ...args) {\n    const subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) this._events[name] = subscribers.filter((sub) => {\n      let { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        // if (options.debug) console.log('run: ' + name, args);\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n  }\n\n  once(name: string, fn) { this.on(name, fn); }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      // if (options.debug) console.log(`run-delay ${options.delay}:` + name, args);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport route from './router';\nimport webComponent from './web-component';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nif (!app['route']) {\n  app['route'] = route;\n  app.on('//', _ => { });\n  app.on('#', _ => { });\n  app.on('route', url => route(url));\n  if (typeof document === 'object') {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    });\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport { update as event };\nexport default app as IApp;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = `${key}${name ? ',' + name : ''}`;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = `${key}${name ? ',' + name : ''}`;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '') {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[]) {\n  // console.log('render', element, node);\n  if (nodes==null || !element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    const node = nodes;\n    if (!element.firstChild) {\n      element.appendChild(create(node));\n    } else {\n      update(element.firstChild, node);\n    }\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(child), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n        if (element.dataset[dname] !== value) element.dataset[dname] = value;\n    } else if (name.startsWith(\"role\") || name.startsWith(\"aria-\")) {\n      if (element.getAttribute(name) !== value) element.setAttribute(name, value)\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { Component } from './component';\ndeclare var customElements;\n\nexport const customElement = (componentClass, options={}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n    const opts = { render: true, shadow: false, ...options };\n    this._shadowRoot = opts.shadow ?\n      this.attachShadow({ mode: 'open' }) : this;\n    const props = {}\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    if (this.children) {\n      props['children'] = Array.from(this.children);\n      props['children'].forEach(el => el.parentElement.removeChild(el));\n    }\n    this._component = new componentClass(props).mount(this._shadowRoot, opts);\n    this.on = this._component.on.bind(this._component);\n    this.run = this._component.run.bind(this._component);\n  }\n  get state() { return this._component.state; }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default function route(url: string) {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n  public mounted;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    })\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    if (el && app.render) {\r\n      app.render(el, html);\r\n      if (this.rendered) (this.rendered(this.state));\r\n    }\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      })\r\n    } else {\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n}\r\n","import app from './app';\n\nconst cache = {}\napp.on('get-components', o => o.components = cache);\nexport default function (componentClass, props) {\n  let id = props && props['id'];\n  if (!id) id = `_${componentClass.name}_${performance.now()}`;\n  const component = (id && cache[id]) ? cache[id] :\n  (cache[id] = new componentClass(props).mount(id));\n  if (component.mounted) setTimeout(() => component.mounted(props), 0);\n  if (component.rendered) setTimeout(() => component.rendered(component.state), 0);\n  return <div id={id}>\n    {component.view && component.view(component.state)}\n  </div>\n}","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html) {\n  console.assert(!!element);\n  updateElement(element, html);\n}\nexport { createElement, Fragment };\n\n\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport * as morphdom from 'morphdom';\n\nexport function render(element, html) {\n  console.assert(!!element);\n  if (typeof html === 'string') {\n    if (element.firstChild) {\n      morphdom(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html);\n  }\n}\nexport { createElement, Fragment };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}"],"sourceRoot":""}