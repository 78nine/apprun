{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/./src/app.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/./src/directive.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/vdom.ts","webpack://apprun/./src/vdom-my.ts","webpack://apprun/webpack/bootstrap","webpack://apprun/webpack/runtime/define property getters","webpack://apprun/webpack/runtime/global","webpack://apprun/webpack/runtime/hasOwnProperty shorthand","webpack://apprun/webpack/runtime/make namespace object","webpack://apprun/./node_modules/morphdom/dist/morphdom-esm.js","webpack://apprun/./src/apprun-html.ts","webpack://apprun/./src/vdom-html.ts"],"names":["root","factory","exports","module","define","amd","this","App","_events","name","fn","options","push","subscribers","filter","sub","args","getSubscribers","console","assert","length","forEach","delay","Object","keys","apply","once","on","_t","clearTimeout","setTimeout","promises","map","Promise","all","events","evt","endsWith","startsWith","replace","sort","a","b","event","app","self","g","global","customElement","componentClass","HTMLElement","super","_component","state","observedAttributes","attr","toLowerCase","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","attrMap","reduce","lc","_attrMap","props","Array","from","attributes","item","value","undefined","defineProperty","get","attributeChangedCallback","configurable","enumerable","children","el","parentElement","removeChild","mount","_props","dispatchEvent","bind","mounted","new_state","run","render","unload","unmount","oldValue","mappedName","window","requestAnimationFrame","customElements","Reflect","meta","WeakMap","metadataKey","metadataValue","target","has","set","getPrototypeOf","update","key","descriptor","toString","defineMetadata","constructor","getStateValue","component","setStateValue","setState","directive","vdom","isArray","element","tag","substring","e","handler","p","type","checked","Number","multiple","selected","apply_directive","componentCache","Map","o","components","REFRESH","Component","view","_app","_actions","_global_events","_history","_history_idx","_history_prev","history","_history_next","start","html","_","document","getElementById","tracking_attr","getAttribute","tracking_id","Date","valueOf","setAttribute","MutationObserver","observer","changes","body","contains","disconnect","observe","childList","subtree","attributeOldValue","attributeFilter","removeAttribute","rendered","_state","then","v","catch","err","error","renderState","enable_history","callback","global_event","prev","next","route","add_actions","indexOf","action","current_state","newState","actions","getMetadataKeys","getMetadata","act","split","n","trim","add_action","is_global_event","off","__isAppRunComponent","ROUTER_EVENT","ROUTER_404_EVENT","url","rest","parent","model","NOOP","addEventListener","onpopstate","location","hash","hasAttribute","Fragment","collect","ch","c","i","createElement","Error","keyCache","updateElement","nodes","createComponent","isSvg","nodeName","updateChildren","node","key1","key2","toUpperCase","same","updateProps","parentNode","replaceChild","create","old_len","childNodes","new_len","len","Math","min","child","textContent","nodeType","nodeValue","createText","SVGElement","insertBefore","old","temp","nextSibling","appendChild","lastChild","d","createDocumentFragment","div","insertAdjacentHTML","createTextNode","JSON","stringify","createElementNS","cached","oldProps","newProps","mergeProps","cname","match","dataset","style","cssText","s","xname","removeAttributeNS","setAttributeNS","test","idx","id","now","asTag","__componentCache","render_component","new_parent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","range","doc","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","compareNodeNames","fromEl","toEl","fromCodeStart","toCodeStart","fromNodeName","toNodeName","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","selectedIndex","INPUT","TEXTAREA","newValue","firstChild","placeholder","SELECT","optgroup","curChild","noop","defaultGetNodeKey","fromNode","toNode","toNodeHtml","innerHTML","str","template","content","createFragmentFromTemplate","selectNode","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","keyedRemovalList","addKeyedRemoval","walkDiscardedChildNodes","skipKeyedNodes","removeNode","handleNodeAdded","unmatchedFromEl","morphEl","toElKey","attrName","attrNamespaceURI","attrValue","toNodeAttrs","namespaceURI","localName","getAttributeNS","prefix","fromNodeAttrs","hasAttributeNS","morphAttrs","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","cloneNode"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn ","import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this.getSubscribers(name, this._events);\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        Object.keys(options).length > 0 ? fn.apply(this, [...args, options]) : fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      Object.keys(options).length > 0 ? fn.apply(this, [...args, options]) : fn.apply(this, args);\n    }, options.delay);\n  }\n\n  query(name: string, ...args): Promise<any[]> {\n    const subscribers = this.getSubscribers(name, this._events);\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n    const promises = subscribers.map(sub => {\n      const { fn, options } = sub;\n      return Object.keys(options).length > 0 ? fn.apply(this, [...args, options]) : fn.apply(this, args);\n    });\n    return Promise.all(promises);\n  }\n\n  private getSubscribers(name: string, events) {\n    const subscribers = events[name] || [];\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n    Object.keys(events).filter(evt => evt.endsWith('*') && name.startsWith(evt.replace('*', '')))\n      .sort((a, b) => b.length - a.length)\n      .forEach(evt => subscribers.push(...events[evt].map(sub => ({\n        ...sub,\n        options: { ...sub.options, event: name }\n      }))));\n    return subscribers;\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?: boolean;\n  shadow?: boolean;\n  history?: boolean;\n  global_event?: boolean;\n  observedAttributes?: string[];\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class CustomElement extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  private _attrMap: (arg0: string) => string;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    // attributes need to be set to lowercase in order to get observed\n    return (options.observedAttributes || []).map(attr => attr.toLowerCase());\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const observedAttributes = (opts.observedAttributes || [])\n\n      const attrMap = observedAttributes.reduce((map, name) => {\n        const lc = name.toLowerCase()\n        if (lc !== name) {\n          map[lc] = name\n        }\n        return map\n      }, {})\n      this._attrMap = (name: string) : string => attrMap[name] || name\n\n      const props = {};\n      Array.from(this.attributes).forEach(item => props[this._attrMap(item.name)] = item.value);\n\n      // add getters/ setters to allow observation on observedAttributes\n      observedAttributes.forEach(name => {\n        if (this[name] !== undefined) props[name] = this[name];\n        Object.defineProperty(this, name, {\n          get(): any {\n            return props[name];\n          },\n          set(this: CustomElement, value: unknown) {\n            // trigger change event\n            this.attributeChangedCallback(name, props[name], value)\n          },\n          configurable: true,\n          enumerable: true\n        });\n      })\n\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      // attach props to component\n      this._component._props = props;\n      // expose dispatchEvent\n      this._component.dispatchEvent = this.dispatchEvent.bind(this)\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(name: string, oldValue: unknown, value: unknown) {\n    if (this._component) {\n      // camelCase attributes arrive only in lowercase\n      const mappedName = this._attrMap(name);\n      // store the new property/ attribute\n      this._component._props[mappedName] = value;\n      this._component.run('attributeChanged', mappedName, oldValue, value);\n\n      if (value !== oldValue && !(options.render === false)) {\n        window.requestAnimationFrame(() => {\n          // re-render state with new combined props on next animation frame\n          this._component.run('.')\n        })\n      }\n    }\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}\n","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = component['state'] || {};\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nconst apply_directive = (key: string, props: {}, tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    } else if (tag === 'textarea') {\n      props['innerHTML'] = getStateValue(component, name);\n      props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}\n\nconst directive = (vdom, component) => {\n  if (Array.isArray(vdom)) {\n    return vdom.map(element => directive(element, component));\n  } else {\n    let { tag, props, children } = vdom;\n    if (tag) {\n      if (props) Object.keys(props).forEach(key => {\n        if (key.startsWith('$')) {\n          apply_directive(key, props, tag, component);\n          delete props[key];\n        }\n      });\n      if (children) children = directive(children, component);\n      return { tag, props, children };\n    } else {\n      return vdom;\n    }\n  }\n}\n\nexport default directive;","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = new Map();\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T = any, E = any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    let html = vdom || this.view(state);\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      _: html ? '.' : '-',\r\n      state,\r\n      vdom: html,\r\n      el: this.element\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if (!this.observer) this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom && html) {\r\n      html = directive(html, this);\r\n      app.render(el, html, this);\r\n    }\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false }) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      // Wait for previous promise to complete first\r\n      Promise.all([state, this._state]).then(v => {\r\n        if (v[0]) this.setState(v[0]);\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E> {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n\r\n    if (options.route) {\r\n      this.update = this.update || {};\r\n      this.update[options.route] = REFRESH;\r\n    }\r\n\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (typeof this.state === 'function') this.state = this.state();\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      if (componentCache.get(element)) { componentCache.get(element).push(this) }\r\n      else { componentCache.set(element, [this])}\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this._global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '>',\r\n        event: name, p,\r\n        current_state: this.state,\r\n        options\r\n      });\r\n\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        _: '<',\r\n        event: name, p,\r\n        newState,\r\n        state: this.state,\r\n        options\r\n      });\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions, AppStartOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E = any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: AppStartOptions<T>): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: AppStartOptions<T>): Component<T, E> => {\n  const opts = { ...options, render: true, global_event: true };\n  const component = new Component<T, E>(model, view, update);\n  if (options && options.rendered) component.rendered = options.rendered;\n  component.mount(element, opts);\n  return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      if (!document.body.hasAttribute('apprun-no-init')) route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T = {}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions, AppStartOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","import { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = new WeakMap();\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  if (node['_op'] === 3) return;\n  // console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  !(node['_op'] & 2) && updateChildren(element, node.children, isSvg);\n  !(node['_op'] & 1) && updateProps(element, node.props, isSvg);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const old_len = element.childNodes?.length || 0;\n  const new_len = children?.length || 0;\n  const len = Math.min(old_len, new_len);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    if (child['_op'] === 3) continue;\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.nodeValue = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          // console.log(el.key, key);\n          const old = keyCache[key];\n          if (old) {\n            const temp = old.nextSibling;\n            element.insertBefore(old, el);\n            temp ? element.insertBefore(el, temp) : element.appendChild(el);\n            update(element.childNodes[i], child, isSvg);\n          } else {\n            element.replaceChild(create(child, isSvg), el);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (new_len > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node?.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node??'');\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  // console.assert(node !== null && node !== undefined);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props, isSvg);\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nexport function updateProps(element: Element, props: {}, isSvg) {\n  // console.assert(!!element);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      if (typeof value === 'string') element.style.cssText = value;\n      else {\n        for (const s in value) {\n          if (element.style[s] !== value[s]) element.style[s] = value[s];\n        }\n      }\n    } else if (name.startsWith('xlink')) {\n      const xname = name.replace('xlink', '').toLowerCase();\n      if (value == null || value === false) {\n        element.removeAttributeNS('http://www.w3.org/1999/xlink', xname);\n      } else {\n        element.setAttributeNS('http://www.w3.org/1999/xlink', xname, value);\n      }\n    } else if (name.startsWith('on')) {\n      if (!value || typeof value === 'function') {\n        element[name] = value;\n      } else if (typeof value === 'string') {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (/^id$|^class$|^list$|^readonly$|^contenteditable$|^role|-/g.test(name) || isSvg) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(() => props['ref'](element));\n  }\n}\n\nfunction render_component(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  let asTag = 'section';\n  if (props && props['as']) {\n    asTag = props['as'];\n    delete props['as'];\n  }\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component || !(component instanceof tag) || !component.element) {\n    const element = document.createElement(asTag);\n    component = parent.__componentCache[key] = new tag({ ...props, children }).start(element);\n  }\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, component.state);\n    (typeof new_state !== 'undefined') && component.setState(new_state);\n  }\n  updateProps(component.element, props, false);\n  return component.element;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) {\n    vdom = render_component(node, parent, idx);\n  }\n  if (vdom && Array.isArray(vdom.children)) {\n    const new_parent = vdom.props?._component;\n    if (new_parent) {\n      let i = 0;\n      vdom.children = vdom.children.map(child => createComponent(child, new_parent, i++));\n    } else {\n      vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n    }\n  }\n  return vdom;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (!element) return;\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n"],"sourceRoot":""}