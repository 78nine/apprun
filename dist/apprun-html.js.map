{"version":3,"sources":["webpack://apprun/webpack/universalModuleDefinition","webpack://apprun/webpack/bootstrap","webpack://apprun/./src/app.ts","webpack://apprun/./src/apprun.ts","webpack://apprun/./src/decorator.ts","webpack://apprun/(webpack)/buildin/global.js","webpack://apprun/./src/vdom-my.ts","webpack://apprun/./src/web-component.ts","webpack://apprun/./src/router.ts","webpack://apprun/./src/component.ts","webpack://apprun/./src/createComponent.tsx","webpack://apprun/./src/vdom.ts","webpack://apprun/./node_modules/morphdom/dist/morphdom.js","webpack://apprun/./src/vdom-html.ts","webpack://apprun/./src/apprun-html.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","App","_events","on","fn","options","push","off","subscribers","filter","sub","length","run","_this","args","_i","arguments","console","assert","delay","apply","once","__assign","_t","clearTimeout","setTimeout","global","window","default","app_1","vdom_1","component_1","Component","decorator_1","update","event","router_1","web_component_1","createElement","render","Fragment","webComponent","start","element","model","view","opts","assign","global_event","component","rendered","mount","_","url","document","addEventListener","onpopstate","location","hash","Reflect","meta","WeakMap","defineMetadata","metadataKey","metadataValue","target","has","set","getMetadataKeys","getPrototypeOf","keys","getMetadata","descriptor","g","Function","eval","e","createComponent_1","ATTR_PROPS","collect","children","ch","undefined","forEach","Array","isArray","tag","props","__isAppRunComponent","keyCache","nodes","parent","updateChildren","node","firstChild","appendChild","el","nodeName","toUpperCase","same","updateProps","parentNode","replaceChild","len","Math","min","childNodes","child","textContent","nodeType","createText","old","removeChild","lastChild","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","name_1","a","b","mergeProps","style","cssText","startsWith","dname","dataset","getAttribute","setAttribute","updateElement","customElement","componentClass","_super","class_1","shadow","_shadowRoot","attachShadow","from","attributes","item","parentElement","_component","__extends","state","HTMLElement","customElements","ROUTER_EVENT","_a","split","rest","slice","concat","_b","name_2","componentCache","components","_app","_actions","_history","_history_idx","renderState","html","vdom","getElementById","setState","history","Promise","then","catch","err","error","enable_history","callback","prev","next","add_actions","is_global_event","add_action","action","newState","actions","all","trim","unmount","createComponent","idx","map","id","__componentCache","mounted","vdom_my_1","range","NS_XHTML","doc","testEl","body","hasAttributeNS","namespaceURI","hasAttribute","getAttributeNode","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","actualize","charCodeAt","syncBooleanAttrProp","removeAttribute","specialElHandlers","OPTION","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","curChild","nextSibling","selectedIndex","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","innerHTML","str","fragment","createRange","selectNode","createContextualFragment","toElement","keyedRemovalList","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","curFromNodeKey","toElKey","isSameNode","curToNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","ownerDocument","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","attrs","localName","getAttributeNS","setAttributeNS","specified","removeAttributeNS","apprun_1","vdom_html_1"],"mappings":"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","file":"dist/apprun-html.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apprun\"] = factory();\n\telse\n\t\troot[\"apprun\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","export class App {\n\n  private _events: Object;\n\n  public start;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: any = {}) {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn: fn, options: options });\n  }\n\n  off(name: string, fn: (...args) => void) {\n    let subscribers = this._events[name];\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => sub.fn !== fn);\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  run(name: string, ...args) {\n    let subscribers = this._events[name];\n    console.assert(!!subscribers, 'No subscriber for event: ' + name);\n    if (subscribers) {\n      subscribers = subscribers.filter((sub) => {\n        const { fn, options } = sub;\n        if (options.delay) {\n          this.delay(name, fn, args, options);\n        } else {\n          fn.apply(this, args);\n        }\n        return !sub.options.once;\n      });\n      if (subscribers.length) this._events[name] = subscribers;\n      else delete this._events[name]\n    }\n  }\n\n  once(name: string, fn, options: any = {}) {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options) {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nlet app: App;\ndeclare var global;\nconst root = global || window;\nif (root['app'] && root['app']['start']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n}\nexport default app;\n","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update } from './types';\nimport { on, update } from './decorator';\nimport route from './router';\nimport webComponent from './web-component';\n\nexport interface IApp {\n  start<T>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T>,\n    options?: { history?, rendered?: (state: T) => void}): Component<T>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): void;\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  webComponent(name: string, componentClass, options?): void;\n}\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T>(element?: HTMLElement | string, model?: T,  view?: View<T>, update?: Update<T>,\n  options?: { history?, rendered?: (state: T) => void }) : Component<T> => {\n    const opts = Object.assign(options || {}, { render: true, global_event: true });\n    const component = new Component<T>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nif (!app['route']) {\n  app['route'] = route;\n  app.on('//', _ => { });\n  app.on('#', _ => { });\n  app.on('route', url => route(url));\n  if (typeof document === 'object') {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    });\n  }\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { Component, View, Action, Update, on, update };\nexport { update as event };\nexport default app as IApp;\n\napp.on('debug', _ => 0);","export const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update(name?: string, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on(name?: string, options: any = {}) {\n  return function (target: any, key: string) {\n    name = name || key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n        { name, key, options }, target)\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createComponent from './createComponent';\nimport { VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement (tag: string | Function, props: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (tag === undefined && children) return ch; // JSX fragments\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) {\n    return { tag, props, children:ch } // createComponent(tag, { ...props, children });\n  }\n  else\n    return tag(props, ch);\n};\n\nconst keyCache = {};\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VNode | VNode[], parent = {}) {\n  // console.log('render', element, node);\n  if (nodes == null) return;\n\n  nodes = createComponent(nodes, parent);\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes);\n  } else {\n    const node = nodes;\n    if (!element.firstChild) {\n      element.appendChild(create(node));\n    } else {\n      update(element.firstChild, node);\n    }\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1 === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode) {\n  console.assert(!!element);\n  //console.log('update', element, node);\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node), element);\n    return;\n  }\n  updateChildren(element, node.children);\n  updateProps(element, node.props);\n}\n\nfunction updateChildren(element, children) {\n  const len = Math.min(element.childNodes.length, children.length);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.textContent = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child);\n        } else {\n          const old = key && keyCache[key];\n          if (old) {\n            element.replaceChild(old, el);\n            element.appendChild(el);\n            update(element.childNodes[i], child);\n          } else {\n            element.appendChild(create(child), el);\n            update(element.childNodes[i], child);\n          }\n        }\n      } else {\n        update(element.childNodes[i], child);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (children.length > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i]));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string): Element {\n  console.assert(node !== null && node !== undefined);\n  // console.log('create', node, typeof node);\n\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag == 'function')) return createText(JSON.stringify(node));\n\n  const element = (node.tag === \"svg\")\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props);\n\n  if (node.children) node.children.forEach(child => element.appendChild(create(child)));\n\n  return element\n}\n\nfunction mergeProps(a: {}, b: {}): {} {\n  const props = {};\n  if (a) Object.keys(a).forEach(p => props[p] = '');\n  if (b) Object.keys(b).forEach(p => props[p] = b[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}) {\n  console.assert(!!element);\n  // console.log('updateProps', element, props);\n\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props);\n  element[ATTR_PROPS] = props;\n  for (let name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      for (let s in value) {\n        if (element.style[s] !== value[s]) element.style[s] = value[s];\n      }\n    } else if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n        if (element.dataset[dname] !== value) element.dataset[dname] = value;\n    } else if (name.startsWith(\"role\") || name.startsWith(\"aria-\")) {\n      if (element.getAttribute(name) !== value) element.setAttribute(name, value)\n    } else {\n      if (element[name] !== value) element[name] = value;\n      if (name === 'key' && value) keyCache[value] = element;\n    }\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","import { Component } from './component';\ndeclare var customElements;\n\nexport const customElement = (componentClass, options={}) => class extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  public on;\n  public run;\n  constructor() {\n    super();\n    const opts = { render: true, shadow: false, ...options };\n    this._shadowRoot = opts.shadow ?\n      this.attachShadow({ mode: 'open' }) : this;\n    const props = {}\n    Array.from(this.attributes).forEach(item => props[item.name] = item.value);\n    if (this.children) {\n      props['children'] = Array.from(this.children);\n      props['children'].forEach(el => el.parentElement.removeChild(el));\n    }\n    this._component = new componentClass(props).mount(this._shadowRoot, opts);\n    this.on = this._component.on.bind(this._component);\n    this.run = this._component.run.bind(this._component);\n  }\n  get state() { return this._component.state; }\n}\n\nexport default (name: string, componentClass, options?) => {\n  customElements && customElements.define(name, customElement(componentClass, options))\n}","import app from './app';\n\nconst ROUTER_EVENT = '//';\n\nexport default function route(url: string) {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\n","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { VNode, View, Update } from './types';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nexport class Component<T=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  element;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public rendered;\r\n  public mounted;\r\n\r\n  private renderState(state: T) {\r\n    if (!this.view) return;\r\n    const html = this.view(state);\r\n\r\n    app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n    if (el) el['_component'] = this;\r\n    app.render(el, html, this);\r\n    if (this.rendered) (this.rendered(this.state));\r\n  }\r\n\r\n  public setState(state: T, options: { render: boolean, history: boolean, callback?}\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this.state = state;\r\n    } else {\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null,\r\n    options: { render?: boolean, history?, global_event?: boolean } = { render: true }): Component<T> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: { render?: boolean, history?, global_event?: boolean}) {\r\n\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = Object.assign(this.options || {}, options);\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      const prev = () => {\r\n        this._history_idx --;\r\n        if (this._history_idx >=0) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = 0;\r\n        }\r\n      };\r\n\r\n      const next = () => {\r\n        this._history_idx ++;\r\n        if (this._history_idx < this._history.length) {\r\n          this.setState(this._history[this._history_idx], { render: true, history: false });\r\n        }\r\n        else {\r\n          this._history_idx = this._history.length - 1;\r\n        }\r\n      };\r\n      this.on(options.history.prev || 'history-prev', prev)\r\n      this.on(options.history.next || 'history-next', next)\r\n    }\r\n    this.add_actions();\r\n    if (this.state === undefined) this.state = this['model'] || {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n\r\n    componentCache[element] = componentCache[element] || [];\r\n    componentCache[element].push(this);\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (name.startsWith('#') || name.startsWith('/'));\r\n  }\r\n\r\n  add_action(name: string, action, options: any = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    this.on(name, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n    const all = {};\r\n    Object.keys(actions).forEach(name => {\r\n      const action = actions[name];\r\n      if (typeof action === 'function' || Array.isArray(action)) {\r\n        name.split(',').forEach(n => all[n.trim()] = action)\r\n      }\r\n    })\r\n\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(name: string, ...args) {\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(name: string, fn: (...args) => void, options?: any) {\r\n    this._actions.push({ name, fn });\r\n    return this.global_event || this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.global_event || this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n\n  let id = props && props['id'];\n  let key = `_${tag.name}_${idx}`\n  if (!id) {\n    id = `_${tag.name}_${idx}`;\n  } else {\n    key = `_${tag.name}_${id}`;\n  }\n\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  component.mounted && component.mounted(props, children);\n  const state = component.state;\n  let vdom = '';\n  if (!(state instanceof Promise) && component.view) {\n    vdom = component.view(state);\n    component.rendered && component.rendered(state);\n  }\n  return <div id={id}>{vdom}</div>;\n}\n\nfunction createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && node.tag && Object.getPrototypeOf(node.tag).__isAppRunComponent) vdom = render(node, parent, idx++);\n  if (vdom && vdom.children) vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n  return vdom;\n }\n\nexport default createComponent;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","'use strict';\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\n\nvar testEl = doc ?\n    doc.body || doc.createElement('div') :\n    {};\n\n// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttributeNS(namespaceURI, name);\n    };\n} else if (testEl.hasAttribute) {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.hasAttribute(name);\n    };\n} else {\n    actualHasAttributeNS = function(el, namespaceURI, name) {\n        return el.getAttributeNode(namespaceURI, name) != null;\n    };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\n\n\nfunction toElement(str) {\n    if (!range && doc.createRange) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment;\n    if (range && range.createContextualFragment) {\n        fragment = range.createContextualFragment(str);\n    } else {\n        fragment = doc.createElement('body');\n        fragment.innerHTML = str;\n    }\n    return fragment.childNodes[0];\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    if (toEl.actualize &&\n        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */\n        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {\n        // If the target element is a virtual DOM node then we may need to normalize the tag name\n        // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n        // are converted to upper case\n        return fromNodeName === toNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction morphAttrs(fromNode, toNode) {\n    var attrs = toNode.attributes;\n    var i;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    attrs = fromNode.attributes;\n\n    for (i = attrs.length - 1; i >= 0; --i) {\n        attr = attrs[i];\n        if (attr.specified !== false) {\n            attrName = attr.name;\n            attrNamespaceURI = attr.namespaceURI;\n\n            if (attrNamespaceURI) {\n                attrName = attr.localName || attrName;\n\n                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {\n                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n                }\n            } else {\n                if (!hasAttributeNS(toNode, null, attrName)) {\n                    fromNode.removeAttribute(attrName);\n                }\n            }\n        }\n    }\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name, '');\n        }\n    }\n}\n\nvar specialElHandlers = {\n    /**\n     * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n     * attribute when reading over the attributes using selectEl.attributes\n     */\n    OPTION: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!hasAttributeNS(toEl, null, 'value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!hasAttributeNS(toEl, null, 'multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            var curChild = toEl.firstChild;\n            while(curChild) {\n                var nodeName = curChild.nodeName;\n                if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n                    if (hasAttributeNS(curChild, null, 'selected')) {\n                        selectedIndex = i;\n                        break;\n                    }\n                    i++;\n                }\n                curChild = curChild.nextSibling;\n            }\n\n            fromEl.selectedIndex = i;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n    return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = {};\n        var keyedRemovalList;\n\n        function addKeyedRemoval(key) {\n            if (keyedRemovalList) {\n                keyedRemovalList.push(key);\n            } else {\n                keyedRemovalList = [key];\n            }\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    }\n                }\n\n                handleNodeAdded(curChild);\n                curChild = nextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n            var curFromNodeKey;\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it is will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n                return;\n            }\n\n            if (!childrenOnly) {\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                morphAttrs(fromEl, toEl);\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n                var curToNodeChild = toEl.firstChild;\n                var curFromNodeChild = fromEl.firstChild;\n                var curToNodeKey;\n\n                var fromNextSibling;\n                var toNextSibling;\n                var matchingFromEl;\n\n                outer: while (curToNodeChild) {\n                    toNextSibling = curToNodeChild.nextSibling;\n                    curToNodeKey = getNodeKey(curToNodeChild);\n\n                    while (curFromNodeChild) {\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                        var curFromNodeType = curFromNodeChild.nodeType;\n\n                        var isCompatible = undefined;\n\n                        if (curFromNodeType === curToNodeChild.nodeType) {\n                            if (curFromNodeType === ELEMENT_NODE) {\n                                // Both nodes being compared are Element nodes\n\n                                if (curToNodeKey) {\n                                    // The target node has a key so we want to match it up with the correct element\n                                    // in the original DOM tree\n                                    if (curToNodeKey !== curFromNodeKey) {\n                                        // The current element in the original DOM tree does not have a matching key so\n                                        // let's check our lookup to see if there is a matching element in the original\n                                        // DOM tree\n                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                            if (curFromNodeChild.nextSibling === matchingFromEl) {\n                                                // Special case for single element removals. To avoid removing the original\n                                                // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                                // we will instead discard the current node and wait until the next\n                                                // iteration to properly match up the keyed target element with its matching\n                                                // element in the original tree\n                                                isCompatible = false;\n                                            } else {\n                                                // We found a matching keyed element somewhere in the original DOM tree.\n                                                // Let's moving the original DOM node into the current position and morph\n                                                // it.\n\n                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                                // the `removeNode()` function for the node that is being discarded so that\n                                                // all lifecycle hooks are correctly invoked\n                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                                fromNextSibling = curFromNodeChild.nextSibling;\n\n                                                if (curFromNodeKey) {\n                                                    // Since the node is keyed it might be matched up later so we defer\n                                                    // the actual removal to later\n                                                    addKeyedRemoval(curFromNodeKey);\n                                                } else {\n                                                    // NOTE: we skip nested keyed nodes from being removed since there is\n                                                    //       still a chance they will be matched up later\n                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                                }\n\n                                                curFromNodeChild = matchingFromEl;\n                                            }\n                                        } else {\n                                            // The nodes are not compatible since the \"to\" node has a key and there\n                                            // is no matching keyed node in the source tree\n                                            isCompatible = false;\n                                        }\n                                    }\n                                } else if (curFromNodeKey) {\n                                    // The original has a key\n                                    isCompatible = false;\n                                }\n\n                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                                if (isCompatible) {\n                                    // We found compatible DOM elements so transform\n                                    // the current \"from\" node to match the current\n                                    // target DOM node.\n                                    morphEl(curFromNodeChild, curToNodeChild);\n                                }\n\n                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                                // Both nodes being compared are Text or Comment nodes\n                                isCompatible = true;\n                                // Simply update nodeValue on the original node to\n                                // change the text value\n                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                                }\n\n                            }\n                        }\n\n                        if (isCompatible) {\n                            // Advance both the \"to\" child and the \"from\" child since we found a match\n                            curToNodeChild = toNextSibling;\n                            curFromNodeChild = fromNextSibling;\n                            continue outer;\n                        }\n\n                        // No compatible match so remove the old node from the DOM and continue trying to find a\n                        // match in the original DOM. However, we only do this if the from node is not keyed\n                        // since it is possible that a keyed node might match up with a node somewhere else in the\n                        // target tree and we don't want to discard it just yet since it still might find a\n                        // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                        // that didn't find a home\n                        if (curFromNodeKey) {\n                            // Since the node is keyed it might be matched up later so we defer\n                            // the actual removal to later\n                            addKeyedRemoval(curFromNodeKey);\n                        } else {\n                            // NOTE: we skip nested keyed nodes from being removed since there is\n                            //       still a chance they will be matched up later\n                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                        }\n\n                        curFromNodeChild = fromNextSibling;\n                    }\n\n                    // If we got this far then we did not find a candidate match for\n                    // our \"to node\" and we exhausted all of the children \"from\"\n                    // nodes. Therefore, we will just append the current \"to\" node\n                    // to the end\n                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                        fromEl.appendChild(matchingFromEl);\n                        morphEl(matchingFromEl, curToNodeChild);\n                    } else {\n                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                        if (onBeforeNodeAddedResult !== false) {\n                            if (onBeforeNodeAddedResult) {\n                                curToNodeChild = onBeforeNodeAddedResult;\n                            }\n\n                            if (curToNodeChild.actualize) {\n                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                            }\n                            fromEl.appendChild(curToNodeChild);\n                            handleNodeAdded(curToNodeChild);\n                        }\n                    }\n\n                    curToNodeChild = toNextSibling;\n                    curFromNodeChild = fromNextSibling;\n                }\n\n                // We have processed all of the \"to nodes\". If curFromNodeChild is\n                // non-null then we still have some from nodes left over that need\n                // to be removed\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n                    curFromNodeChild = fromNextSibling;\n                }\n            }\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphEl(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport * as morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      morphdom(element.firstChild, html);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n","import app, { Component, View, Action, Update, on, update } from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\nexport { Component, View, Action, Update, on, update };\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n}"],"sourceRoot":""}